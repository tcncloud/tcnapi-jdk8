// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/org/hunt_groups/v1alpha1/entities.proto

package com.tcn.cloud.api.services.org.hunt_groups.v1alpha1;

public interface UpdateHuntGroupExileLinksRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:services.org.hunt_groups.v1alpha1.UpdateHuntGroupExileLinksRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The sid of the hunt group to update the exile links for.
   * </pre>
   *
   * <code>int64 hunt_group_sid = 1 [json_name = "huntGroupSid"];</code>
   * @return The huntGroupSid.
   */
  long getHuntGroupSid();

  /**
   * <pre>
   * The list of exile links to update.
   * </pre>
   *
   * <code>repeated .services.org.hunt_groups.v1alpha1.ExileLink exile_links = 2 [json_name = "exileLinks"];</code>
   */
  java.util.List<com.tcn.cloud.api.services.org.hunt_groups.v1alpha1.ExileLink> 
      getExileLinksList();
  /**
   * <pre>
   * The list of exile links to update.
   * </pre>
   *
   * <code>repeated .services.org.hunt_groups.v1alpha1.ExileLink exile_links = 2 [json_name = "exileLinks"];</code>
   */
  com.tcn.cloud.api.services.org.hunt_groups.v1alpha1.ExileLink getExileLinks(int index);
  /**
   * <pre>
   * The list of exile links to update.
   * </pre>
   *
   * <code>repeated .services.org.hunt_groups.v1alpha1.ExileLink exile_links = 2 [json_name = "exileLinks"];</code>
   */
  int getExileLinksCount();
  /**
   * <pre>
   * The list of exile links to update.
   * </pre>
   *
   * <code>repeated .services.org.hunt_groups.v1alpha1.ExileLink exile_links = 2 [json_name = "exileLinks"];</code>
   */
  java.util.List<? extends com.tcn.cloud.api.services.org.hunt_groups.v1alpha1.ExileLinkOrBuilder> 
      getExileLinksOrBuilderList();
  /**
   * <pre>
   * The list of exile links to update.
   * </pre>
   *
   * <code>repeated .services.org.hunt_groups.v1alpha1.ExileLink exile_links = 2 [json_name = "exileLinks"];</code>
   */
  com.tcn.cloud.api.services.org.hunt_groups.v1alpha1.ExileLinkOrBuilder getExileLinksOrBuilder(
      int index);
}
