// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/org/exile_certificate_manager/v1alpha1/exile_configuration.proto

package com.tcn.cloud.api.services.org.exile_certificate_manager.v1alpha1;

public interface CreateExileConfigurationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:services.org.exile_certificate_manager.v1alpha1.CreateExileConfigurationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The configuration name.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The configuration name.
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The configuration description.
   * </pre>
   *
   * <code>string description = 2 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * The configuration description.
   * </pre>
   *
   * <code>string description = 2 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * The type of exile configuration
   * </pre>
   *
   * <code>.services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType type = 3 [json_name = "type"];</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * The type of exile configuration
   * </pre>
   *
   * <code>.services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType type = 3 [json_name = "type"];</code>
   * @return The type.
   */
  com.tcn.cloud.api.services.org.exile_certificate_manager.v1alpha1.ExileConfigurationType getType();

  /**
   * <pre>
   * The parameters of the exile configuration
   * See services.org.exile_certificate_manager.v1alpha1.ExileConfiguration
   * for the required information.
   * </pre>
   *
   * <code>string parameters = 4 [json_name = "parameters"];</code>
   * @return The parameters.
   */
  java.lang.String getParameters();
  /**
   * <pre>
   * The parameters of the exile configuration
   * See services.org.exile_certificate_manager.v1alpha1.ExileConfiguration
   * for the required information.
   * </pre>
   *
   * <code>string parameters = 4 [json_name = "parameters"];</code>
   * @return The bytes for parameters.
   */
  com.google.protobuf.ByteString
      getParametersBytes();
}
