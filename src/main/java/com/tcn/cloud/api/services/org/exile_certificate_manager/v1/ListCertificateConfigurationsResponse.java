// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/org/exile_certificate_manager/v1/certificate_configuration.proto

package com.tcn.cloud.api.services.org.exile_certificate_manager.v1;

/**
 * <pre>
 * ListCertificateConfigurationsResponse is the response to listing certificate configurations.
 * </pre>
 *
 * Protobuf type {@code services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse}
 */
public final class ListCertificateConfigurationsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)
    ListCertificateConfigurationsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ListCertificateConfigurationsResponse.newBuilder() to construct.
  private ListCertificateConfigurationsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ListCertificateConfigurationsResponse() {
    certificateConfigurations_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ListCertificateConfigurationsResponse();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationProto.internal_static_services_org_exile_certificate_manager_v1_ListCertificateConfigurationsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationProto.internal_static_services_org_exile_certificate_manager_v1_ListCertificateConfigurationsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.class, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.Builder.class);
  }

  public static final int CERTIFICATE_CONFIGURATIONS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration> certificateConfigurations_;
  /**
   * <pre>
   * The list of certificate configurations.
   * </pre>
   *
   * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration> getCertificateConfigurationsList() {
    return certificateConfigurations_;
  }
  /**
   * <pre>
   * The list of certificate configurations.
   * </pre>
   *
   * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder> 
      getCertificateConfigurationsOrBuilderList() {
    return certificateConfigurations_;
  }
  /**
   * <pre>
   * The list of certificate configurations.
   * </pre>
   *
   * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
   */
  @java.lang.Override
  public int getCertificateConfigurationsCount() {
    return certificateConfigurations_.size();
  }
  /**
   * <pre>
   * The list of certificate configurations.
   * </pre>
   *
   * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration getCertificateConfigurations(int index) {
    return certificateConfigurations_.get(index);
  }
  /**
   * <pre>
   * The list of certificate configurations.
   * </pre>
   *
   * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder getCertificateConfigurationsOrBuilder(
      int index) {
    return certificateConfigurations_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < certificateConfigurations_.size(); i++) {
      output.writeMessage(1, certificateConfigurations_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < certificateConfigurations_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, certificateConfigurations_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse other = (com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse) obj;

    if (!getCertificateConfigurationsList()
        .equals(other.getCertificateConfigurationsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getCertificateConfigurationsCount() > 0) {
      hash = (37 * hash) + CERTIFICATE_CONFIGURATIONS_FIELD_NUMBER;
      hash = (53 * hash) + getCertificateConfigurationsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ListCertificateConfigurationsResponse is the response to listing certificate configurations.
   * </pre>
   *
   * Protobuf type {@code services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)
      com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationProto.internal_static_services_org_exile_certificate_manager_v1_ListCertificateConfigurationsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationProto.internal_static_services_org_exile_certificate_manager_v1_ListCertificateConfigurationsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.class, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.Builder.class);
    }

    // Construct using com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (certificateConfigurationsBuilder_ == null) {
        certificateConfigurations_ = java.util.Collections.emptyList();
      } else {
        certificateConfigurations_ = null;
        certificateConfigurationsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationProto.internal_static_services_org_exile_certificate_manager_v1_ListCertificateConfigurationsResponse_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse getDefaultInstanceForType() {
      return com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse build() {
      com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse buildPartial() {
      com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse result = new com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse result) {
      if (certificateConfigurationsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          certificateConfigurations_ = java.util.Collections.unmodifiableList(certificateConfigurations_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.certificateConfigurations_ = certificateConfigurations_;
      } else {
        result.certificateConfigurations_ = certificateConfigurationsBuilder_.build();
      }
    }

    private void buildPartial0(com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse) {
        return mergeFrom((com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse other) {
      if (other == com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse.getDefaultInstance()) return this;
      if (certificateConfigurationsBuilder_ == null) {
        if (!other.certificateConfigurations_.isEmpty()) {
          if (certificateConfigurations_.isEmpty()) {
            certificateConfigurations_ = other.certificateConfigurations_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCertificateConfigurationsIsMutable();
            certificateConfigurations_.addAll(other.certificateConfigurations_);
          }
          onChanged();
        }
      } else {
        if (!other.certificateConfigurations_.isEmpty()) {
          if (certificateConfigurationsBuilder_.isEmpty()) {
            certificateConfigurationsBuilder_.dispose();
            certificateConfigurationsBuilder_ = null;
            certificateConfigurations_ = other.certificateConfigurations_;
            bitField0_ = (bitField0_ & ~0x00000001);
            certificateConfigurationsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCertificateConfigurationsFieldBuilder() : null;
          } else {
            certificateConfigurationsBuilder_.addAllMessages(other.certificateConfigurations_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration m =
                  input.readMessage(
                      com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.parser(),
                      extensionRegistry);
              if (certificateConfigurationsBuilder_ == null) {
                ensureCertificateConfigurationsIsMutable();
                certificateConfigurations_.add(m);
              } else {
                certificateConfigurationsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration> certificateConfigurations_ =
      java.util.Collections.emptyList();
    private void ensureCertificateConfigurationsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        certificateConfigurations_ = new java.util.ArrayList<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration>(certificateConfigurations_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder> certificateConfigurationsBuilder_;

    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public java.util.List<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration> getCertificateConfigurationsList() {
      if (certificateConfigurationsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(certificateConfigurations_);
      } else {
        return certificateConfigurationsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public int getCertificateConfigurationsCount() {
      if (certificateConfigurationsBuilder_ == null) {
        return certificateConfigurations_.size();
      } else {
        return certificateConfigurationsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration getCertificateConfigurations(int index) {
      if (certificateConfigurationsBuilder_ == null) {
        return certificateConfigurations_.get(index);
      } else {
        return certificateConfigurationsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder setCertificateConfigurations(
        int index, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration value) {
      if (certificateConfigurationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.set(index, value);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder setCertificateConfigurations(
        int index, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder builderForValue) {
      if (certificateConfigurationsBuilder_ == null) {
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.set(index, builderForValue.build());
        onChanged();
      } else {
        certificateConfigurationsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder addCertificateConfigurations(com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration value) {
      if (certificateConfigurationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.add(value);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder addCertificateConfigurations(
        int index, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration value) {
      if (certificateConfigurationsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.add(index, value);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder addCertificateConfigurations(
        com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder builderForValue) {
      if (certificateConfigurationsBuilder_ == null) {
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.add(builderForValue.build());
        onChanged();
      } else {
        certificateConfigurationsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder addCertificateConfigurations(
        int index, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder builderForValue) {
      if (certificateConfigurationsBuilder_ == null) {
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.add(index, builderForValue.build());
        onChanged();
      } else {
        certificateConfigurationsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder addAllCertificateConfigurations(
        java.lang.Iterable<? extends com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration> values) {
      if (certificateConfigurationsBuilder_ == null) {
        ensureCertificateConfigurationsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, certificateConfigurations_);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder clearCertificateConfigurations() {
      if (certificateConfigurationsBuilder_ == null) {
        certificateConfigurations_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public Builder removeCertificateConfigurations(int index) {
      if (certificateConfigurationsBuilder_ == null) {
        ensureCertificateConfigurationsIsMutable();
        certificateConfigurations_.remove(index);
        onChanged();
      } else {
        certificateConfigurationsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder getCertificateConfigurationsBuilder(
        int index) {
      return getCertificateConfigurationsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder getCertificateConfigurationsOrBuilder(
        int index) {
      if (certificateConfigurationsBuilder_ == null) {
        return certificateConfigurations_.get(index);  } else {
        return certificateConfigurationsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public java.util.List<? extends com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder> 
         getCertificateConfigurationsOrBuilderList() {
      if (certificateConfigurationsBuilder_ != null) {
        return certificateConfigurationsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(certificateConfigurations_);
      }
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder addCertificateConfigurationsBuilder() {
      return getCertificateConfigurationsFieldBuilder().addBuilder(
          com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder addCertificateConfigurationsBuilder(
        int index) {
      return getCertificateConfigurationsFieldBuilder().addBuilder(
          index, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of certificate configurations.
     * </pre>
     *
     * <code>repeated .services.org.exile_certificate_manager.v1.CertificateConfiguration certificate_configurations = 1 [json_name = "certificateConfigurations"];</code>
     */
    public java.util.List<com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder> 
         getCertificateConfigurationsBuilderList() {
      return getCertificateConfigurationsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder> 
        getCertificateConfigurationsFieldBuilder() {
      if (certificateConfigurationsBuilder_ == null) {
        certificateConfigurationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfiguration.Builder, com.tcn.cloud.api.services.org.exile_certificate_manager.v1.CertificateConfigurationOrBuilder>(
                certificateConfigurations_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        certificateConfigurations_ = null;
      }
      return certificateConfigurationsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)
  }

  // @@protoc_insertion_point(class_scope:services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse)
  private static final com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse();
  }

  public static com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListCertificateConfigurationsResponse>
      PARSER = new com.google.protobuf.AbstractParser<ListCertificateConfigurationsResponse>() {
    @java.lang.Override
    public ListCertificateConfigurationsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ListCertificateConfigurationsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListCertificateConfigurationsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.services.org.exile_certificate_manager.v1.ListCertificateConfigurationsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

