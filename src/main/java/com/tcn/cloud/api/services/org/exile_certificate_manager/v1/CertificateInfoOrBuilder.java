// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/org/exile_certificate_manager/v1/entities.proto

package com.tcn.cloud.api.services.org.exile_certificate_manager.v1;

public interface CertificateInfoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:services.org.exile_certificate_manager.v1.CertificateInfo)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The id of the certificate info.
   * </pre>
   *
   * <code>string certificate_info_id = 1 [json_name = "certificateInfoId"];</code>
   * @return The certificateInfoId.
   */
  java.lang.String getCertificateInfoId();
  /**
   * <pre>
   * The id of the certificate info.
   * </pre>
   *
   * <code>string certificate_info_id = 1 [json_name = "certificateInfoId"];</code>
   * @return The bytes for certificateInfoId.
   */
  com.google.protobuf.ByteString
      getCertificateInfoIdBytes();

  /**
   * <pre>
   * The id of the organization.
   * </pre>
   *
   * <code>string org_id = 2 [json_name = "orgId"];</code>
   * @return The orgId.
   */
  java.lang.String getOrgId();
  /**
   * <pre>
   * The id of the organization.
   * </pre>
   *
   * <code>string org_id = 2 [json_name = "orgId"];</code>
   * @return The bytes for orgId.
   */
  com.google.protobuf.ByteString
      getOrgIdBytes();

  /**
   * <pre>
   * The certificate name.
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The certificate name.
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The certificate description.
   * </pre>
   *
   * <code>string description = 4 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * The certificate description.
   * </pre>
   *
   * <code>string description = 4 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * The certificate hash/fingerprint.
   * </pre>
   *
   * <code>string hash = 5 [json_name = "hash"];</code>
   * @return The hash.
   */
  java.lang.String getHash();
  /**
   * <pre>
   * The certificate hash/fingerprint.
   * </pre>
   *
   * <code>string hash = 5 [json_name = "hash"];</code>
   * @return The bytes for hash.
   */
  com.google.protobuf.ByteString
      getHashBytes();

  /**
   * <pre>
   * The certificate expiration date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 6 [json_name = "expirationDate"];</code>
   * @return Whether the expirationDate field is set.
   */
  boolean hasExpirationDate();
  /**
   * <pre>
   * The certificate expiration date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 6 [json_name = "expirationDate"];</code>
   * @return The expirationDate.
   */
  com.google.protobuf.Timestamp getExpirationDate();
  /**
   * <pre>
   * The certificate expiration date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiration_date = 6 [json_name = "expirationDate"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getExpirationDateOrBuilder();

  /**
   * <pre>
   * The certificate creation date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_date = 7 [json_name = "creationDate"];</code>
   * @return Whether the creationDate field is set.
   */
  boolean hasCreationDate();
  /**
   * <pre>
   * The certificate creation date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_date = 7 [json_name = "creationDate"];</code>
   * @return The creationDate.
   */
  com.google.protobuf.Timestamp getCreationDate();
  /**
   * <pre>
   * The certificate creation date.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp creation_date = 7 [json_name = "creationDate"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreationDateOrBuilder();

  /**
   * <pre>
   * The requestor of the certificate (user ID or automated system)
   * </pre>
   *
   * <code>string request_by = 8 [json_name = "requestBy"];</code>
   * @return The requestBy.
   */
  java.lang.String getRequestBy();
  /**
   * <pre>
   * The requestor of the certificate (user ID or automated system)
   * </pre>
   *
   * <code>string request_by = 8 [json_name = "requestBy"];</code>
   * @return The bytes for requestBy.
   */
  com.google.protobuf.ByteString
      getRequestByBytes();

  /**
   * <pre>
   * Whether the certificate info is deleted.
   * </pre>
   *
   * <code>bool deleted = 9 [json_name = "deleted"];</code>
   * @return The deleted.
   */
  boolean getDeleted();

  /**
   * <pre>
   * Whether or not the certifcate has been revoked
   * </pre>
   *
   * <code>bool revoked = 10 [json_name = "revoked"];</code>
   * @return The revoked.
   */
  boolean getRevoked();

  /**
   * <pre>
   * The id of the certificate configuration associated with the certificate.
   * </pre>
   *
   * <code>string certificate_configuration_id = 11 [json_name = "certificateConfigurationId"];</code>
   * @return The certificateConfigurationId.
   */
  java.lang.String getCertificateConfigurationId();
  /**
   * <pre>
   * The id of the certificate configuration associated with the certificate.
   * </pre>
   *
   * <code>string certificate_configuration_id = 11 [json_name = "certificateConfigurationId"];</code>
   * @return The bytes for certificateConfigurationId.
   */
  com.google.protobuf.ByteString
      getCertificateConfigurationIdBytes();

  /**
   * <pre>
   * The number of times the certificate has been renewed.
   * </pre>
   *
   * <code>int64 renewal_instance = 12 [json_name = "renewalInstance"];</code>
   * @return The renewalInstance.
   */
  long getRenewalInstance();
}
