// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcnapi/omni/campaigns/v1/campaigns.proto

package com.tcn.cloud.api.tcnapi.omni.campaigns.v1;

/**
 * Protobuf enum {@code tcnapi.omni.campaigns.v1.TimeZone}
 */
public enum TimeZone
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * America/Puerto_Rico
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_PUERTO_RICO = 0;</code>
   */
  TIME_ZONE_AMERICA_PUERTO_RICO(0),
  /**
   * <pre>
   * America/New_York
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_NEW_YORK = 1;</code>
   */
  TIME_ZONE_AMERICA_NEW_YORK(1),
  /**
   * <pre>
   * America/Indianapolis
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_INDIANAPOLIS = 2;</code>
   */
  TIME_ZONE_AMERICA_INDIANAPOLIS(2),
  /**
   * <pre>
   * America/Chicago
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_CHICAGO = 3;</code>
   */
  TIME_ZONE_AMERICA_CHICAGO(3),
  /**
   * <pre>
   * America/Phoenix
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_PHOENIX = 4;</code>
   */
  TIME_ZONE_AMERICA_PHOENIX(4),
  /**
   * <pre>
   * America/Denver
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_DENVER = 5;</code>
   */
  TIME_ZONE_AMERICA_DENVER(5),
  /**
   * <pre>
   * America/Los_Angeles
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_LOS_ANGELES = 6;</code>
   */
  TIME_ZONE_AMERICA_LOS_ANGELES(6),
  /**
   * <pre>
   * America/Anchorage
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_ANCHORAGE = 7;</code>
   */
  TIME_ZONE_AMERICA_ANCHORAGE(7),
  /**
   * <pre>
   * Asia/Manila
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_MANILA = 8;</code>
   */
  TIME_ZONE_ASIA_MANILA(8),
  /**
   * <pre>
   * Asia/Calcutta
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_CALCUTTA = 9;</code>
   */
  TIME_ZONE_ASIA_CALCUTTA(9),
  /**
   * <pre>
   * Asia/Colombo
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_COLOMBO = 10;</code>
   */
  TIME_ZONE_ASIA_COLOMBO(10),
  /**
   * <pre>
   * Pacific/Honolulu
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_HONOLULU = 11;</code>
   */
  TIME_ZONE_PACIFIC_HONOLULU(11),
  /**
   * <pre>
   * Canada/Newfoundland
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_NEWFOUNDLAND = 12;</code>
   */
  TIME_ZONE_CANADA_NEWFOUNDLAND(12),
  /**
   * <pre>
   * Canada/Atlantic
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_ATLANTIC = 13;</code>
   */
  TIME_ZONE_CANADA_ATLANTIC(13),
  /**
   * <pre>
   * Canada/Central
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_CENTRAL = 14;</code>
   */
  TIME_ZONE_CANADA_CENTRAL(14),
  /**
   * <pre>
   * Canada/East-Saskatchewan
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_EAST_SASKATCHEWAN = 15;</code>
   */
  TIME_ZONE_CANADA_EAST_SASKATCHEWAN(15),
  /**
   * <pre>
   * Canada/Eastern
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_EASTERN = 16;</code>
   */
  TIME_ZONE_CANADA_EASTERN(16),
  /**
   * <pre>
   * Canada/Mountain
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_MOUNTAIN = 17;</code>
   */
  TIME_ZONE_CANADA_MOUNTAIN(17),
  /**
   * <pre>
   * Canada/Pacific
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_PACIFIC = 18;</code>
   */
  TIME_ZONE_CANADA_PACIFIC(18),
  /**
   * <pre>
   * Canada/Saskatchewan
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_SASKATCHEWAN = 19;</code>
   */
  TIME_ZONE_CANADA_SASKATCHEWAN(19),
  /**
   * <pre>
   * Canada/Yukon
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_YUKON = 20;</code>
   */
  TIME_ZONE_CANADA_YUKON(20),
  /**
   * <pre>
   * Etc/Greenwich
   * </pre>
   *
   * <code>TIME_ZONE_ETC_GREENWICH = 21;</code>
   */
  TIME_ZONE_ETC_GREENWICH(21),
  /**
   * <pre>
   * Etc/Universal
   * </pre>
   *
   * <code>TIME_ZONE_ETC_UNIVERSAL = 22;</code>
   */
  TIME_ZONE_ETC_UNIVERSAL(22),
  /**
   * <pre>
   * Europe/London
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_LONDON = 23;</code>
   */
  TIME_ZONE_EUROPE_LONDON(23),
  /**
   * <pre>
   * Europe/Madrid
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_MADRID = 24;</code>
   */
  TIME_ZONE_EUROPE_MADRID(24),
  /**
   * <pre>
   * Europe/Berlin
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_BERLIN = 25;</code>
   */
  TIME_ZONE_EUROPE_BERLIN(25),
  /**
   * <pre>
   * Europe/Bucharest
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_BUCHAREST = 26;</code>
   */
  TIME_ZONE_EUROPE_BUCHAREST(26),
  /**
   * <pre>
   * America/Mexico_City
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_MEXICO_CITY = 27;</code>
   */
  TIME_ZONE_AMERICA_MEXICO_CITY(27),
  /**
   * <pre>
   * Mexico/BajaSur
   * </pre>
   *
   * <code>TIME_ZONE_MEXICO_BAJASUR = 28;</code>
   */
  TIME_ZONE_MEXICO_BAJASUR(28),
  /**
   * <pre>
   * Mexico/BajaNorte
   * </pre>
   *
   * <code>TIME_ZONE_MEXICO_BAJANORTE = 29;</code>
   */
  TIME_ZONE_MEXICO_BAJANORTE(29),
  /**
   * <pre>
   * Brazil/Acre
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_ACRE = 30;</code>
   */
  TIME_ZONE_BRAZIL_ACRE(30),
  /**
   * <pre>
   * Brazil/West
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_WEST = 31;</code>
   */
  TIME_ZONE_BRAZIL_WEST(31),
  /**
   * <pre>
   * Brazil/East
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_EAST = 32;</code>
   */
  TIME_ZONE_BRAZIL_EAST(32),
  /**
   * <pre>
   * Brazil/DeNoronha
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_DENORONHA = 33;</code>
   */
  TIME_ZONE_BRAZIL_DENORONHA(33),
  /**
   * <pre>
   * Australia/Darwin
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_DARWIN = 34;</code>
   */
  TIME_ZONE_AUSTRALIA_DARWIN(34),
  /**
   * <pre>
   * Australia/Adelaide
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_ADELAIDE = 35;</code>
   */
  TIME_ZONE_AUSTRALIA_ADELAIDE(35),
  /**
   * <pre>
   * Australia/Sydney
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_SYDNEY = 36;</code>
   */
  TIME_ZONE_AUSTRALIA_SYDNEY(36),
  /**
   * <pre>
   * Australia/Brisbane
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_BRISBANE = 37;</code>
   */
  TIME_ZONE_AUSTRALIA_BRISBANE(37),
  /**
   * <pre>
   * Australia/Melbourne
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_MELBOURNE = 38;</code>
   */
  TIME_ZONE_AUSTRALIA_MELBOURNE(38),
  /**
   * <pre>
   * Australia/Perth
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_PERTH = 39;</code>
   */
  TIME_ZONE_AUSTRALIA_PERTH(39),
  /**
   * <pre>
   * Pacific/Auckland
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_AUCKLAND = 40;</code>
   */
  TIME_ZONE_PACIFIC_AUCKLAND(40),
  /**
   * <pre>
   * Pacific/Chatham
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_CHATHAM = 41;</code>
   */
  TIME_ZONE_PACIFIC_CHATHAM(41),
  /**
   * <pre>
   * Singapore
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_SINGAPORE = 42;</code>
   */
  TIME_ZONE_ASIA_SINGAPORE(42),
  /**
   * <pre>
   * Japan
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_JAPAN = 43;</code>
   */
  TIME_ZONE_ASIA_JAPAN(43),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * America/Puerto_Rico
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_PUERTO_RICO = 0;</code>
   */
  public static final int TIME_ZONE_AMERICA_PUERTO_RICO_VALUE = 0;
  /**
   * <pre>
   * America/New_York
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_NEW_YORK = 1;</code>
   */
  public static final int TIME_ZONE_AMERICA_NEW_YORK_VALUE = 1;
  /**
   * <pre>
   * America/Indianapolis
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_INDIANAPOLIS = 2;</code>
   */
  public static final int TIME_ZONE_AMERICA_INDIANAPOLIS_VALUE = 2;
  /**
   * <pre>
   * America/Chicago
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_CHICAGO = 3;</code>
   */
  public static final int TIME_ZONE_AMERICA_CHICAGO_VALUE = 3;
  /**
   * <pre>
   * America/Phoenix
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_PHOENIX = 4;</code>
   */
  public static final int TIME_ZONE_AMERICA_PHOENIX_VALUE = 4;
  /**
   * <pre>
   * America/Denver
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_DENVER = 5;</code>
   */
  public static final int TIME_ZONE_AMERICA_DENVER_VALUE = 5;
  /**
   * <pre>
   * America/Los_Angeles
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_LOS_ANGELES = 6;</code>
   */
  public static final int TIME_ZONE_AMERICA_LOS_ANGELES_VALUE = 6;
  /**
   * <pre>
   * America/Anchorage
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_ANCHORAGE = 7;</code>
   */
  public static final int TIME_ZONE_AMERICA_ANCHORAGE_VALUE = 7;
  /**
   * <pre>
   * Asia/Manila
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_MANILA = 8;</code>
   */
  public static final int TIME_ZONE_ASIA_MANILA_VALUE = 8;
  /**
   * <pre>
   * Asia/Calcutta
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_CALCUTTA = 9;</code>
   */
  public static final int TIME_ZONE_ASIA_CALCUTTA_VALUE = 9;
  /**
   * <pre>
   * Asia/Colombo
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_COLOMBO = 10;</code>
   */
  public static final int TIME_ZONE_ASIA_COLOMBO_VALUE = 10;
  /**
   * <pre>
   * Pacific/Honolulu
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_HONOLULU = 11;</code>
   */
  public static final int TIME_ZONE_PACIFIC_HONOLULU_VALUE = 11;
  /**
   * <pre>
   * Canada/Newfoundland
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_NEWFOUNDLAND = 12;</code>
   */
  public static final int TIME_ZONE_CANADA_NEWFOUNDLAND_VALUE = 12;
  /**
   * <pre>
   * Canada/Atlantic
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_ATLANTIC = 13;</code>
   */
  public static final int TIME_ZONE_CANADA_ATLANTIC_VALUE = 13;
  /**
   * <pre>
   * Canada/Central
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_CENTRAL = 14;</code>
   */
  public static final int TIME_ZONE_CANADA_CENTRAL_VALUE = 14;
  /**
   * <pre>
   * Canada/East-Saskatchewan
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_EAST_SASKATCHEWAN = 15;</code>
   */
  public static final int TIME_ZONE_CANADA_EAST_SASKATCHEWAN_VALUE = 15;
  /**
   * <pre>
   * Canada/Eastern
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_EASTERN = 16;</code>
   */
  public static final int TIME_ZONE_CANADA_EASTERN_VALUE = 16;
  /**
   * <pre>
   * Canada/Mountain
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_MOUNTAIN = 17;</code>
   */
  public static final int TIME_ZONE_CANADA_MOUNTAIN_VALUE = 17;
  /**
   * <pre>
   * Canada/Pacific
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_PACIFIC = 18;</code>
   */
  public static final int TIME_ZONE_CANADA_PACIFIC_VALUE = 18;
  /**
   * <pre>
   * Canada/Saskatchewan
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_SASKATCHEWAN = 19;</code>
   */
  public static final int TIME_ZONE_CANADA_SASKATCHEWAN_VALUE = 19;
  /**
   * <pre>
   * Canada/Yukon
   * </pre>
   *
   * <code>TIME_ZONE_CANADA_YUKON = 20;</code>
   */
  public static final int TIME_ZONE_CANADA_YUKON_VALUE = 20;
  /**
   * <pre>
   * Etc/Greenwich
   * </pre>
   *
   * <code>TIME_ZONE_ETC_GREENWICH = 21;</code>
   */
  public static final int TIME_ZONE_ETC_GREENWICH_VALUE = 21;
  /**
   * <pre>
   * Etc/Universal
   * </pre>
   *
   * <code>TIME_ZONE_ETC_UNIVERSAL = 22;</code>
   */
  public static final int TIME_ZONE_ETC_UNIVERSAL_VALUE = 22;
  /**
   * <pre>
   * Europe/London
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_LONDON = 23;</code>
   */
  public static final int TIME_ZONE_EUROPE_LONDON_VALUE = 23;
  /**
   * <pre>
   * Europe/Madrid
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_MADRID = 24;</code>
   */
  public static final int TIME_ZONE_EUROPE_MADRID_VALUE = 24;
  /**
   * <pre>
   * Europe/Berlin
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_BERLIN = 25;</code>
   */
  public static final int TIME_ZONE_EUROPE_BERLIN_VALUE = 25;
  /**
   * <pre>
   * Europe/Bucharest
   * </pre>
   *
   * <code>TIME_ZONE_EUROPE_BUCHAREST = 26;</code>
   */
  public static final int TIME_ZONE_EUROPE_BUCHAREST_VALUE = 26;
  /**
   * <pre>
   * America/Mexico_City
   * </pre>
   *
   * <code>TIME_ZONE_AMERICA_MEXICO_CITY = 27;</code>
   */
  public static final int TIME_ZONE_AMERICA_MEXICO_CITY_VALUE = 27;
  /**
   * <pre>
   * Mexico/BajaSur
   * </pre>
   *
   * <code>TIME_ZONE_MEXICO_BAJASUR = 28;</code>
   */
  public static final int TIME_ZONE_MEXICO_BAJASUR_VALUE = 28;
  /**
   * <pre>
   * Mexico/BajaNorte
   * </pre>
   *
   * <code>TIME_ZONE_MEXICO_BAJANORTE = 29;</code>
   */
  public static final int TIME_ZONE_MEXICO_BAJANORTE_VALUE = 29;
  /**
   * <pre>
   * Brazil/Acre
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_ACRE = 30;</code>
   */
  public static final int TIME_ZONE_BRAZIL_ACRE_VALUE = 30;
  /**
   * <pre>
   * Brazil/West
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_WEST = 31;</code>
   */
  public static final int TIME_ZONE_BRAZIL_WEST_VALUE = 31;
  /**
   * <pre>
   * Brazil/East
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_EAST = 32;</code>
   */
  public static final int TIME_ZONE_BRAZIL_EAST_VALUE = 32;
  /**
   * <pre>
   * Brazil/DeNoronha
   * </pre>
   *
   * <code>TIME_ZONE_BRAZIL_DENORONHA = 33;</code>
   */
  public static final int TIME_ZONE_BRAZIL_DENORONHA_VALUE = 33;
  /**
   * <pre>
   * Australia/Darwin
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_DARWIN = 34;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_DARWIN_VALUE = 34;
  /**
   * <pre>
   * Australia/Adelaide
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_ADELAIDE = 35;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_ADELAIDE_VALUE = 35;
  /**
   * <pre>
   * Australia/Sydney
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_SYDNEY = 36;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_SYDNEY_VALUE = 36;
  /**
   * <pre>
   * Australia/Brisbane
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_BRISBANE = 37;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_BRISBANE_VALUE = 37;
  /**
   * <pre>
   * Australia/Melbourne
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_MELBOURNE = 38;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_MELBOURNE_VALUE = 38;
  /**
   * <pre>
   * Australia/Perth
   * </pre>
   *
   * <code>TIME_ZONE_AUSTRALIA_PERTH = 39;</code>
   */
  public static final int TIME_ZONE_AUSTRALIA_PERTH_VALUE = 39;
  /**
   * <pre>
   * Pacific/Auckland
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_AUCKLAND = 40;</code>
   */
  public static final int TIME_ZONE_PACIFIC_AUCKLAND_VALUE = 40;
  /**
   * <pre>
   * Pacific/Chatham
   * </pre>
   *
   * <code>TIME_ZONE_PACIFIC_CHATHAM = 41;</code>
   */
  public static final int TIME_ZONE_PACIFIC_CHATHAM_VALUE = 41;
  /**
   * <pre>
   * Singapore
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_SINGAPORE = 42;</code>
   */
  public static final int TIME_ZONE_ASIA_SINGAPORE_VALUE = 42;
  /**
   * <pre>
   * Japan
   * </pre>
   *
   * <code>TIME_ZONE_ASIA_JAPAN = 43;</code>
   */
  public static final int TIME_ZONE_ASIA_JAPAN_VALUE = 43;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TimeZone valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TimeZone forNumber(int value) {
    switch (value) {
      case 0: return TIME_ZONE_AMERICA_PUERTO_RICO;
      case 1: return TIME_ZONE_AMERICA_NEW_YORK;
      case 2: return TIME_ZONE_AMERICA_INDIANAPOLIS;
      case 3: return TIME_ZONE_AMERICA_CHICAGO;
      case 4: return TIME_ZONE_AMERICA_PHOENIX;
      case 5: return TIME_ZONE_AMERICA_DENVER;
      case 6: return TIME_ZONE_AMERICA_LOS_ANGELES;
      case 7: return TIME_ZONE_AMERICA_ANCHORAGE;
      case 8: return TIME_ZONE_ASIA_MANILA;
      case 9: return TIME_ZONE_ASIA_CALCUTTA;
      case 10: return TIME_ZONE_ASIA_COLOMBO;
      case 11: return TIME_ZONE_PACIFIC_HONOLULU;
      case 12: return TIME_ZONE_CANADA_NEWFOUNDLAND;
      case 13: return TIME_ZONE_CANADA_ATLANTIC;
      case 14: return TIME_ZONE_CANADA_CENTRAL;
      case 15: return TIME_ZONE_CANADA_EAST_SASKATCHEWAN;
      case 16: return TIME_ZONE_CANADA_EASTERN;
      case 17: return TIME_ZONE_CANADA_MOUNTAIN;
      case 18: return TIME_ZONE_CANADA_PACIFIC;
      case 19: return TIME_ZONE_CANADA_SASKATCHEWAN;
      case 20: return TIME_ZONE_CANADA_YUKON;
      case 21: return TIME_ZONE_ETC_GREENWICH;
      case 22: return TIME_ZONE_ETC_UNIVERSAL;
      case 23: return TIME_ZONE_EUROPE_LONDON;
      case 24: return TIME_ZONE_EUROPE_MADRID;
      case 25: return TIME_ZONE_EUROPE_BERLIN;
      case 26: return TIME_ZONE_EUROPE_BUCHAREST;
      case 27: return TIME_ZONE_AMERICA_MEXICO_CITY;
      case 28: return TIME_ZONE_MEXICO_BAJASUR;
      case 29: return TIME_ZONE_MEXICO_BAJANORTE;
      case 30: return TIME_ZONE_BRAZIL_ACRE;
      case 31: return TIME_ZONE_BRAZIL_WEST;
      case 32: return TIME_ZONE_BRAZIL_EAST;
      case 33: return TIME_ZONE_BRAZIL_DENORONHA;
      case 34: return TIME_ZONE_AUSTRALIA_DARWIN;
      case 35: return TIME_ZONE_AUSTRALIA_ADELAIDE;
      case 36: return TIME_ZONE_AUSTRALIA_SYDNEY;
      case 37: return TIME_ZONE_AUSTRALIA_BRISBANE;
      case 38: return TIME_ZONE_AUSTRALIA_MELBOURNE;
      case 39: return TIME_ZONE_AUSTRALIA_PERTH;
      case 40: return TIME_ZONE_PACIFIC_AUCKLAND;
      case 41: return TIME_ZONE_PACIFIC_CHATHAM;
      case 42: return TIME_ZONE_ASIA_SINGAPORE;
      case 43: return TIME_ZONE_ASIA_JAPAN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TimeZone>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TimeZone> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TimeZone>() {
          public TimeZone findValueByNumber(int number) {
            return TimeZone.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.tcnapi.omni.campaigns.v1.CampaignsProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final TimeZone[] VALUES = values();

  public static TimeZone valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TimeZone(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:tcnapi.omni.campaigns.v1.TimeZone)
}

