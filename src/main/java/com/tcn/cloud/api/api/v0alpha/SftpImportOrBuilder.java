// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface SftpImportOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.SftpImport)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * SFTP credentials. `password` will
   * be tried first for authentication,
   * if left blank, `private_key` will be tried.
   * </pre>
   *
   * <code>string user = 4 [json_name = "user"];</code>
   * @return The user.
   */
  java.lang.String getUser();
  /**
   * <pre>
   * SFTP credentials. `password` will
   * be tried first for authentication,
   * if left blank, `private_key` will be tried.
   * </pre>
   *
   * <code>string user = 4 [json_name = "user"];</code>
   * @return The bytes for user.
   */
  com.google.protobuf.ByteString
      getUserBytes();

  /**
   * <code>string password = 5 [json_name = "password"];</code>
   * @return The password.
   */
  java.lang.String getPassword();
  /**
   * <code>string password = 5 [json_name = "password"];</code>
   * @return The bytes for password.
   */
  com.google.protobuf.ByteString
      getPasswordBytes();

  /**
   * <code>string private_key = 6 [json_name = "privateKey"];</code>
   * @return The privateKey.
   */
  java.lang.String getPrivateKey();
  /**
   * <code>string private_key = 6 [json_name = "privateKey"];</code>
   * @return The bytes for privateKey.
   */
  com.google.protobuf.ByteString
      getPrivateKeyBytes();

  /**
   * <code>string address = 7 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <code>string address = 7 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <code>string port = 8 [json_name = "port"];</code>
   * @return The port.
   */
  java.lang.String getPort();
  /**
   * <code>string port = 8 [json_name = "port"];</code>
   * @return The bytes for port.
   */
  com.google.protobuf.ByteString
      getPortBytes();

  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   * @return Whether the filePattern field is set.
   */
  boolean hasFilePattern();
  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   * @return The filePattern.
   */
  com.tcn.cloud.api.api.commons.FilePattern getFilePattern();
  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   */
  com.tcn.cloud.api.api.commons.FilePatternOrBuilder getFilePatternOrBuilder();

  /**
   * <pre>
   * We will only process if enabled
   * </pre>
   *
   * <code>bool enabled = 15 [json_name = "enabled"];</code>
   * @return The enabled.
   */
  boolean getEnabled();

  /**
   * <pre>
   * prefered/default template
   * </pre>
   *
   * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
   * @return The fileTemplateId.
   */
  java.lang.String getFileTemplateId();
  /**
   * <pre>
   * prefered/default template
   * </pre>
   *
   * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
   * @return The bytes for fileTemplateId.
   */
  com.google.protobuf.ByteString
      getFileTemplateIdBytes();

  /**
   * <code>bool incremental = 17 [json_name = "incremental"];</code>
   * @return The incremental.
   */
  boolean getIncremental();

  /**
   * <pre>
   * Specifies whether the files to be imported
   * are encrypted with PGP key
   * </pre>
   *
   * <code>bool encrypted = 18 [json_name = "encrypted"];</code>
   * @return The encrypted.
   */
  boolean getEncrypted();

  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 19 [json_name = "cron"];</code>
   * @return The cron.
   */
  java.lang.String getCron();
  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 19 [json_name = "cron"];</code>
   * @return The bytes for cron.
   */
  com.google.protobuf.ByteString
      getCronBytes();

  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 20 [json_name = "timezone"];</code>
   * @return The timezone.
   */
  java.lang.String getTimezone();
  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 20 [json_name = "timezone"];</code>
   * @return The bytes for timezone.
   */
  com.google.protobuf.ByteString
      getTimezoneBytes();

  /**
   * <pre>
   * Name of the transfer_config, used to find sftp configuration
   * </pre>
   *
   * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
   * @return The transferConfigName.
   */
  java.lang.String getTransferConfigName();
  /**
   * <pre>
   * Name of the transfer_config, used to find sftp configuration
   * </pre>
   *
   * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
   * @return The bytes for transferConfigName.
   */
  com.google.protobuf.ByteString
      getTransferConfigNameBytes();
}
