// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.ConfigEntityType}
 */
public enum ConfigEntityType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * entity is a call center node.
   * </pre>
   *
   * <code>CALL_CENTER_NODE = 0;</code>
   */
  CALL_CENTER_NODE(0),
  /**
   * <pre>
   * entity is a client node.
   * </pre>
   *
   * <code>CLIENT_NODE = 1;</code>
   */
  CLIENT_NODE(1),
  /**
   * <pre>
   * entity is a location node.
   * </pre>
   *
   * <code>LOCATION_NODE = 2;</code>
   */
  LOCATION_NODE(2),
  /**
   * <pre>
   * entity is a program node.
   * </pre>
   *
   * <code>PROGRAM_NODE = 3;</code>
   */
  PROGRAM_NODE(3),
  /**
   * <pre>
   * entity is an agent group.
   * </pre>
   *
   * <code>AGENT_GROUP = 4;</code>
   */
  AGENT_GROUP(4),
  /**
   * <pre>
   * entity is a shift template.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE = 5;</code>
   */
  SHIFT_TEMPLATE(5),
  /**
   * <pre>
   * entity is a wfm agent.
   * </pre>
   *
   * <code>WFM_AGENT = 6;</code>
   */
  WFM_AGENT(6),
  /**
   * <pre>
   * entity is a placement rule.
   * </pre>
   *
   * <code>PLACEMENT_RULE = 7;</code>
   */
  PLACEMENT_RULE(7),
  /**
   * <pre>
   * entity is a constraint rule.
   * </pre>
   *
   * <code>CONSTRAINT_RULE = 8;</code>
   */
  CONSTRAINT_RULE(8),
  /**
   * <pre>
   * entity is a non skill activity.
   * </pre>
   *
   * <code>NON_SKILL_ACTIVITY = 9;</code>
   */
  NON_SKILL_ACTIVITY(9),
  /**
   * <pre>
   * entity is an agent availability.
   * </pre>
   *
   * <code>AGENT_AVAILABILITY = 10;</code>
   */
  AGENT_AVAILABILITY(10),
  /**
   * <pre>
   * entity is an open times.
   * </pre>
   *
   * <code>OPEN_TIMES = 11;</code>
   */
  OPEN_TIMES(11),
  /**
   * <pre>
   * entity is a scheduling activity.
   * </pre>
   *
   * <code>SCHEDULING_ACTIVITY = 12;</code>
   */
  SCHEDULING_ACTIVITY(12),
  /**
   * <pre>
   * entity is a skill proficiency.
   * </pre>
   *
   * <code>SKILL_PROFICIENCY = 13;</code>
   */
  SKILL_PROFICIENCY(13),
  /**
   * <pre>
   * entity is a schedule scenario.
   * </pre>
   *
   * <code>SCHEDULE_SCENARIO = 14;</code>
   */
  SCHEDULE_SCENARIO(14),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * entity is a call center node.
   * </pre>
   *
   * <code>CALL_CENTER_NODE = 0;</code>
   */
  public static final int CALL_CENTER_NODE_VALUE = 0;
  /**
   * <pre>
   * entity is a client node.
   * </pre>
   *
   * <code>CLIENT_NODE = 1;</code>
   */
  public static final int CLIENT_NODE_VALUE = 1;
  /**
   * <pre>
   * entity is a location node.
   * </pre>
   *
   * <code>LOCATION_NODE = 2;</code>
   */
  public static final int LOCATION_NODE_VALUE = 2;
  /**
   * <pre>
   * entity is a program node.
   * </pre>
   *
   * <code>PROGRAM_NODE = 3;</code>
   */
  public static final int PROGRAM_NODE_VALUE = 3;
  /**
   * <pre>
   * entity is an agent group.
   * </pre>
   *
   * <code>AGENT_GROUP = 4;</code>
   */
  public static final int AGENT_GROUP_VALUE = 4;
  /**
   * <pre>
   * entity is a shift template.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE = 5;</code>
   */
  public static final int SHIFT_TEMPLATE_VALUE = 5;
  /**
   * <pre>
   * entity is a wfm agent.
   * </pre>
   *
   * <code>WFM_AGENT = 6;</code>
   */
  public static final int WFM_AGENT_VALUE = 6;
  /**
   * <pre>
   * entity is a placement rule.
   * </pre>
   *
   * <code>PLACEMENT_RULE = 7;</code>
   */
  public static final int PLACEMENT_RULE_VALUE = 7;
  /**
   * <pre>
   * entity is a constraint rule.
   * </pre>
   *
   * <code>CONSTRAINT_RULE = 8;</code>
   */
  public static final int CONSTRAINT_RULE_VALUE = 8;
  /**
   * <pre>
   * entity is a non skill activity.
   * </pre>
   *
   * <code>NON_SKILL_ACTIVITY = 9;</code>
   */
  public static final int NON_SKILL_ACTIVITY_VALUE = 9;
  /**
   * <pre>
   * entity is an agent availability.
   * </pre>
   *
   * <code>AGENT_AVAILABILITY = 10;</code>
   */
  public static final int AGENT_AVAILABILITY_VALUE = 10;
  /**
   * <pre>
   * entity is an open times.
   * </pre>
   *
   * <code>OPEN_TIMES = 11;</code>
   */
  public static final int OPEN_TIMES_VALUE = 11;
  /**
   * <pre>
   * entity is a scheduling activity.
   * </pre>
   *
   * <code>SCHEDULING_ACTIVITY = 12;</code>
   */
  public static final int SCHEDULING_ACTIVITY_VALUE = 12;
  /**
   * <pre>
   * entity is a skill proficiency.
   * </pre>
   *
   * <code>SKILL_PROFICIENCY = 13;</code>
   */
  public static final int SKILL_PROFICIENCY_VALUE = 13;
  /**
   * <pre>
   * entity is a schedule scenario.
   * </pre>
   *
   * <code>SCHEDULE_SCENARIO = 14;</code>
   */
  public static final int SCHEDULE_SCENARIO_VALUE = 14;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ConfigEntityType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ConfigEntityType forNumber(int value) {
    switch (value) {
      case 0: return CALL_CENTER_NODE;
      case 1: return CLIENT_NODE;
      case 2: return LOCATION_NODE;
      case 3: return PROGRAM_NODE;
      case 4: return AGENT_GROUP;
      case 5: return SHIFT_TEMPLATE;
      case 6: return WFM_AGENT;
      case 7: return PLACEMENT_RULE;
      case 8: return CONSTRAINT_RULE;
      case 9: return NON_SKILL_ACTIVITY;
      case 10: return AGENT_AVAILABILITY;
      case 11: return OPEN_TIMES;
      case 12: return SCHEDULING_ACTIVITY;
      case 13: return SKILL_PROFICIENCY;
      case 14: return SCHEDULE_SCENARIO;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ConfigEntityType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ConfigEntityType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ConfigEntityType>() {
          public ConfigEntityType findValueByNumber(int number) {
            return ConfigEntityType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.WfmProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final ConfigEntityType[] VALUES = values();

  public static ConfigEntityType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ConfigEntityType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.ConfigEntityType)
}

