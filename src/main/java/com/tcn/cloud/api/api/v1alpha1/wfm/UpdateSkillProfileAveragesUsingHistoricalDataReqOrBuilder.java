// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface UpdateSkillProfileAveragesUsingHistoricalDataReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.UpdateSkillProfileAveragesUsingHistoricalDataReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * IDs of the skill profiles to calculate the averages of, if none are sent it calculates it for all skill profiles the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_sids = 1 [json_name = "skillProfileSids"];</code>
   * @return A list containing the skillProfileSids.
   */
  java.util.List<java.lang.Long> getSkillProfileSidsList();
  /**
   * <pre>
   * IDs of the skill profiles to calculate the averages of, if none are sent it calculates it for all skill profiles the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_sids = 1 [json_name = "skillProfileSids"];</code>
   * @return The count of skillProfileSids.
   */
  int getSkillProfileSidsCount();
  /**
   * <pre>
   * IDs of the skill profiles to calculate the averages of, if none are sent it calculates it for all skill profiles the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_sids = 1 [json_name = "skillProfileSids"];</code>
   * @param index The index of the element to return.
   * @return The skillProfileSids at the given index.
   */
  long getSkillProfileSids(int index);

  /**
   * <pre>
   * The datetime range of the training data to use to calculate the averages, if a nil range is given the following range is used:
   * &#64;training_data_range_end_datetime - &#64;averages_calculation_range_in_months to the &#64;training_data_range_end_datetime from the forecasting parameters.
   * If &#64;averages_calculation_range_in_months is 0, it will use the &#64;training_data_range_start_datetime as the start datetime of the range.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 2 [json_name = "datetimeRange"];</code>
   * @return Whether the datetimeRange field is set.
   */
  boolean hasDatetimeRange();
  /**
   * <pre>
   * The datetime range of the training data to use to calculate the averages, if a nil range is given the following range is used:
   * &#64;training_data_range_end_datetime - &#64;averages_calculation_range_in_months to the &#64;training_data_range_end_datetime from the forecasting parameters.
   * If &#64;averages_calculation_range_in_months is 0, it will use the &#64;training_data_range_start_datetime as the start datetime of the range.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 2 [json_name = "datetimeRange"];</code>
   * @return The datetimeRange.
   */
  com.tcn.cloud.api.api.commons.DatetimeRange getDatetimeRange();
  /**
   * <pre>
   * The datetime range of the training data to use to calculate the averages, if a nil range is given the following range is used:
   * &#64;training_data_range_end_datetime - &#64;averages_calculation_range_in_months to the &#64;training_data_range_end_datetime from the forecasting parameters.
   * If &#64;averages_calculation_range_in_months is 0, it will use the &#64;training_data_range_start_datetime as the start datetime of the range.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 2 [json_name = "datetimeRange"];</code>
   */
  com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDatetimeRangeOrBuilder();

  /**
   * <pre>
   * If true, it will exclude skill profiles that have manual averages in them from the calculation (even if those skill profiles are in &#64;skill_profile_sids).
   * Otherwise they will be included in the calculation.
   * </pre>
   *
   * <code>bool exclude_skill_profiles_with_manual_averages = 3 [json_name = "excludeSkillProfilesWithManualAverages"];</code>
   * @return The excludeSkillProfilesWithManualAverages.
   */
  boolean getExcludeSkillProfilesWithManualAverages();

  /**
   * <pre>
   * IDs of the skill profile groups to calculate the averages of, if none are sent it calculates it for all skill profile groups that the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_group_sids = 4 [json_name = "skillProfileGroupSids", jstype = JS_STRING];</code>
   * @return A list containing the skillProfileGroupSids.
   */
  java.util.List<java.lang.Long> getSkillProfileGroupSidsList();
  /**
   * <pre>
   * IDs of the skill profile groups to calculate the averages of, if none are sent it calculates it for all skill profile groups that the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_group_sids = 4 [json_name = "skillProfileGroupSids", jstype = JS_STRING];</code>
   * @return The count of skillProfileGroupSids.
   */
  int getSkillProfileGroupSidsCount();
  /**
   * <pre>
   * IDs of the skill profile groups to calculate the averages of, if none are sent it calculates it for all skill profile groups that the org has.
   * </pre>
   *
   * <code>repeated int64 skill_profile_group_sids = 4 [json_name = "skillProfileGroupSids", jstype = JS_STRING];</code>
   * @param index The index of the element to return.
   * @return The skillProfileGroupSids at the given index.
   */
  long getSkillProfileGroupSids(int index);
}
