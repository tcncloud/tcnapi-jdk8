// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/integrations/integrations.proto

package com.tcn.cloud.api.api.commons.integrations;

public interface ComputedAmountOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.integrations.ComputedAmount)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * some percentage of the amount due to apply to the total. Ex: 5.25 means 5.25% of the amount due is added to the total.
   * </pre>
   *
   * <code>double percentage = 1 [json_name = "percentage"];</code>
   * @return Whether the percentage field is set.
   */
  boolean hasPercentage();
  /**
   * <pre>
   * some percentage of the amount due to apply to the total. Ex: 5.25 means 5.25% of the amount due is added to the total.
   * </pre>
   *
   * <code>double percentage = 1 [json_name = "percentage"];</code>
   * @return The percentage.
   */
  double getPercentage();

  /**
   * <pre>
   * percentage of the amount due or partial payment amount with an additional flat fee.
   * </pre>
   *
   * <code>.api.commons.integrations.FlatAndPercentage flat_and_percentage = 2 [json_name = "flatAndPercentage"];</code>
   * @return Whether the flatAndPercentage field is set.
   */
  boolean hasFlatAndPercentage();
  /**
   * <pre>
   * percentage of the amount due or partial payment amount with an additional flat fee.
   * </pre>
   *
   * <code>.api.commons.integrations.FlatAndPercentage flat_and_percentage = 2 [json_name = "flatAndPercentage"];</code>
   * @return The flatAndPercentage.
   */
  com.tcn.cloud.api.api.commons.integrations.FlatAndPercentage getFlatAndPercentage();
  /**
   * <pre>
   * percentage of the amount due or partial payment amount with an additional flat fee.
   * </pre>
   *
   * <code>.api.commons.integrations.FlatAndPercentage flat_and_percentage = 2 [json_name = "flatAndPercentage"];</code>
   */
  com.tcn.cloud.api.api.commons.integrations.FlatAndPercentageOrBuilder getFlatAndPercentageOrBuilder();

  com.tcn.cloud.api.api.commons.integrations.ComputedAmount.ComputedTypeCase getComputedTypeCase();
}
