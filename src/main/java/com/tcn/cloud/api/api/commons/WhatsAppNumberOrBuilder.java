// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/omnichannel.proto

package com.tcn.cloud.api.api.commons;

public interface WhatsAppNumberOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.WhatsAppNumber)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * string representation of the whatsapp number
   * </pre>
   *
   * <code>string number = 1 [json_name = "number"];</code>
   * @return The number.
   */
  java.lang.String getNumber();
  /**
   * <pre>
   * string representation of the whatsapp number
   * </pre>
   *
   * <code>string number = 1 [json_name = "number"];</code>
   * @return The bytes for number.
   */
  com.google.protobuf.ByteString
      getNumberBytes();

  /**
   * <pre>
   * the type of whatsapp number (Alphanumeric|Short Code|Number)
   * </pre>
   *
   * <code>.api.commons.WhatsAppNumberType type = 2 [json_name = "type"];</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * the type of whatsapp number (Alphanumeric|Short Code|Number)
   * </pre>
   *
   * <code>.api.commons.WhatsAppNumberType type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  com.tcn.cloud.api.api.commons.WhatsAppNumberType getType();

  /**
   * <pre>
   * associated provider (whatsappvoice | whatsappsms)
   * </pre>
   *
   * <code>.api.commons.WhatsAppNumberProvider provider = 3 [json_name = "provider"];</code>
   * @return The enum numeric value on the wire for provider.
   */
  int getProviderValue();
  /**
   * <pre>
   * associated provider (whatsappvoice | whatsappsms)
   * </pre>
   *
   * <code>.api.commons.WhatsAppNumberProvider provider = 3 [json_name = "provider"];</code>
   * @return The provider.
   */
  com.tcn.cloud.api.api.commons.WhatsAppNumberProvider getProvider();

  /**
   * <pre>
   * country code the whatsapp number belongs to
   * </pre>
   *
   * <code>int32 country_code = 4 [json_name = "countryCode"];</code>
   * @return The countryCode.
   */
  int getCountryCode();
}
