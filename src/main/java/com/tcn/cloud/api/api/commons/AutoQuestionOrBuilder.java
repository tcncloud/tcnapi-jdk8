// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/scorecards.proto

package com.tcn.cloud.api.api.commons;

public interface AutoQuestionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.AutoQuestion)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique id of the auto question.
   * </pre>
   *
   * <code>int64 auto_question_id = 2 [json_name = "autoQuestionId"];</code>
   * @return The autoQuestionId.
   */
  long getAutoQuestionId();

  /**
   * <pre>
   * Deprecated. Use FlagExpr.
   * </pre>
   *
   * <code>int64 flag_sid = 3 [json_name = "flagSid"];</code>
   * @return The flagSid.
   */
  long getFlagSid();

  /**
   * <pre>
   * auto question belongs to scorecard.
   * </pre>
   *
   * <code>int64 scorecard_id = 5 [json_name = "scorecardId"];</code>
   * @return The scorecardId.
   */
  long getScorecardId();

  /**
   * <pre>
   * auto question belongs to auto section.
   * </pre>
   *
   * <code>int64 auto_section_id = 6 [json_name = "autoSectionId"];</code>
   * @return The autoSectionId.
   */
  long getAutoSectionId();

  /**
   * <pre>
   * order number of auto question.
   * </pre>
   *
   * <code>int32 sort_order = 7 [json_name = "sortOrder"];</code>
   * @return The sortOrder.
   */
  int getSortOrder();

  /**
   * <pre>
   * Boolean expression of which flags to match
   * </pre>
   *
   * <code>.api.commons.AutoQuestion.FlagExpr flag_expression = 10 [json_name = "flagExpression"];</code>
   * @return Whether the flagExpression field is set.
   */
  boolean hasFlagExpression();
  /**
   * <pre>
   * Boolean expression of which flags to match
   * </pre>
   *
   * <code>.api.commons.AutoQuestion.FlagExpr flag_expression = 10 [json_name = "flagExpression"];</code>
   * @return The flagExpression.
   */
  com.tcn.cloud.api.api.commons.AutoQuestion.FlagExpr getFlagExpression();
  /**
   * <pre>
   * Boolean expression of which flags to match
   * </pre>
   *
   * <code>.api.commons.AutoQuestion.FlagExpr flag_expression = 10 [json_name = "flagExpression"];</code>
   */
  com.tcn.cloud.api.api.commons.AutoQuestion.FlagExprOrBuilder getFlagExpressionOrBuilder();

  /**
   * <pre>
   * The question to display.
   * </pre>
   *
   * <code>string question = 11 [json_name = "question"];</code>
   * @return The question.
   */
  java.lang.String getQuestion();
  /**
   * <pre>
   * The question to display.
   * </pre>
   *
   * <code>string question = 11 [json_name = "question"];</code>
   * @return The bytes for question.
   */
  com.google.protobuf.ByteString
      getQuestionBytes();

  /**
   * <pre>
   * Optional. Extra info about question.
   * </pre>
   *
   * <code>string description = 12 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Optional. Extra info about question.
   * </pre>
   *
   * <code>string description = 12 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Optional. Library question id.
   * </pre>
   *
   * <code>int64 question_id = 13 [json_name = "questionId"];</code>
   * @return The questionId.
   */
  long getQuestionId();

  /**
   * <pre>
   * The risk level of the evaluation question.
   * </pre>
   *
   * <code>.api.commons.RiskLevel risk_level = 14 [json_name = "riskLevel"];</code>
   * @return The enum numeric value on the wire for riskLevel.
   */
  int getRiskLevelValue();
  /**
   * <pre>
   * The risk level of the evaluation question.
   * </pre>
   *
   * <code>.api.commons.RiskLevel risk_level = 14 [json_name = "riskLevel"];</code>
   * @return The riskLevel.
   */
  com.tcn.cloud.api.api.commons.RiskLevel getRiskLevel();
}
