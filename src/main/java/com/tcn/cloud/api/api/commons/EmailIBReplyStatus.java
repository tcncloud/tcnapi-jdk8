// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/email.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.EmailIBReplyStatus}
 */
public enum EmailIBReplyStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>IB_EMAIL_REPLY_UNKNOWN = 0;</code>
   */
  IB_EMAIL_REPLY_UNKNOWN(0),
  /**
   * <pre>
   *Inbound Email reply received successfully
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_RECEIVED = 12000;</code>
   */
  IB_EMAIL_REPLY_RECEIVED(12000),
  /**
   * <pre>
   *Inbound Email while agent sending reply
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENDING = 12010;</code>
   */
  IB_EMAIL_AGENT_REPLY_SENDING(12010),
  /**
   * <pre>
   *Inbound Email failed while agent sending reply
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENDING_FAILED = 12020;</code>
   */
  IB_EMAIL_AGENT_REPLY_SENDING_FAILED(12020),
  /**
   * <pre>
   *Inbound Email Reply has been flagged for having an invalid destination
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_INVALID = 12030;</code>
   */
  IB_EMAIL_AGENT_REPLY_INVALID(12030),
  /**
   * <pre>
   *Inbound Email agent reply queued/sent successfully
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENT = 12040;</code>
   */
  IB_EMAIL_AGENT_REPLY_SENT(12040),
  /**
   * <pre>
   *Inbound Email agent reply delivered successfully
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DELIVERED = 12050;</code>
   */
  IB_EMAIL_AGENT_REPLY_DELIVERED(12050),
  /**
   * <pre>
   *Inbound Email agent reply dropped with reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DROPPED = 12060;</code>
   */
  IB_EMAIL_AGENT_REPLY_DROPPED(12060),
  /**
   * <pre>
   *Inbound Email agent reply "Deferred", "DFR" because Recipient’s email server temporarily rejected message
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DEFERRED = 12070;</code>
   */
  IB_EMAIL_AGENT_REPLY_DEFERRED(12070),
  /**
   * <pre>
   *Inbound Email agent reply "Bounced","BNC", "Receiving server could not or would not accept message
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_BOUNCED = 12080;</code>
   */
  IB_EMAIL_AGENT_REPLY_BOUNCED(12080),
  /**
   * <pre>
   *Inbound Email agent reply "Opened","OPN", "Recipient has opened the HTML message.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_OPENED = 12090;</code>
   */
  IB_EMAIL_AGENT_REPLY_OPENED(12090),
  /**
   * <pre>
   *Inbound Email agent reply "Clicked","CLK", "Recipient clicked on a link within the message.,
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_CLICKED = 12100;</code>
   */
  IB_EMAIL_AGENT_REPLY_CLICKED(12100),
  /**
   * <pre>
   *Inbound Email agent reply "Unsubscribed","USB", "Recipient clicked on the 'Opt Out of All Emails' link
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_UNSUBSCRIBED = 12110;</code>
   */
  IB_EMAIL_AGENT_REPLY_UNSUBSCRIBED(12110),
  /**
   * <pre>
   * Inbound Email agent reply "Marked As Spam","SPM", "Recipient marked message as spam.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_MARKED_AS_SPAM = 12120;</code>
   */
  IB_EMAIL_AGENT_REPLY_MARKED_AS_SPAM(12120),
  /**
   * <pre>
   *Inbound Email agent reply recipient marked message as blocked.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_BLOCKED = 12130;</code>
   */
  IB_EMAIL_AGENT_REPLY_BLOCKED(12130),
  /**
   * <pre>
   *Inbound Email Reply has been scrubbed because it is on EMAIL DNC list
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_DNC = 12140;</code>
   */
  IB_EMAIL_REPLY_DNC(12140),
  /**
   * <pre>
   *Inbound Email Reply has been cancelled
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_CANCELLED = 12150;</code>
   */
  IB_EMAIL_REPLY_CANCELLED(12150),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>IB_EMAIL_REPLY_UNKNOWN = 0;</code>
   */
  public static final int IB_EMAIL_REPLY_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   *Inbound Email reply received successfully
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_RECEIVED = 12000;</code>
   */
  public static final int IB_EMAIL_REPLY_RECEIVED_VALUE = 12000;
  /**
   * <pre>
   *Inbound Email while agent sending reply
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENDING = 12010;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_SENDING_VALUE = 12010;
  /**
   * <pre>
   *Inbound Email failed while agent sending reply
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENDING_FAILED = 12020;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_SENDING_FAILED_VALUE = 12020;
  /**
   * <pre>
   *Inbound Email Reply has been flagged for having an invalid destination
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_INVALID = 12030;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_INVALID_VALUE = 12030;
  /**
   * <pre>
   *Inbound Email agent reply queued/sent successfully
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_SENT = 12040;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_SENT_VALUE = 12040;
  /**
   * <pre>
   *Inbound Email agent reply delivered successfully
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DELIVERED = 12050;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_DELIVERED_VALUE = 12050;
  /**
   * <pre>
   *Inbound Email agent reply dropped with reasons: Invalid SMTPAPI header, Spam Content (if spam checker app enabled), Unsubscribed Address, Bounced Address, Spam Reporting Address, Invalid, Recipient List over Package Quota
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DROPPED = 12060;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_DROPPED_VALUE = 12060;
  /**
   * <pre>
   *Inbound Email agent reply "Deferred", "DFR" because Recipient’s email server temporarily rejected message
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_DEFERRED = 12070;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_DEFERRED_VALUE = 12070;
  /**
   * <pre>
   *Inbound Email agent reply "Bounced","BNC", "Receiving server could not or would not accept message
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_BOUNCED = 12080;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_BOUNCED_VALUE = 12080;
  /**
   * <pre>
   *Inbound Email agent reply "Opened","OPN", "Recipient has opened the HTML message.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_OPENED = 12090;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_OPENED_VALUE = 12090;
  /**
   * <pre>
   *Inbound Email agent reply "Clicked","CLK", "Recipient clicked on a link within the message.,
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_CLICKED = 12100;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_CLICKED_VALUE = 12100;
  /**
   * <pre>
   *Inbound Email agent reply "Unsubscribed","USB", "Recipient clicked on the 'Opt Out of All Emails' link
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_UNSUBSCRIBED = 12110;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_UNSUBSCRIBED_VALUE = 12110;
  /**
   * <pre>
   * Inbound Email agent reply "Marked As Spam","SPM", "Recipient marked message as spam.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_MARKED_AS_SPAM = 12120;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_MARKED_AS_SPAM_VALUE = 12120;
  /**
   * <pre>
   *Inbound Email agent reply recipient marked message as blocked.
   * </pre>
   *
   * <code>IB_EMAIL_AGENT_REPLY_BLOCKED = 12130;</code>
   */
  public static final int IB_EMAIL_AGENT_REPLY_BLOCKED_VALUE = 12130;
  /**
   * <pre>
   *Inbound Email Reply has been scrubbed because it is on EMAIL DNC list
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_DNC = 12140;</code>
   */
  public static final int IB_EMAIL_REPLY_DNC_VALUE = 12140;
  /**
   * <pre>
   *Inbound Email Reply has been cancelled
   * </pre>
   *
   * <code>IB_EMAIL_REPLY_CANCELLED = 12150;</code>
   */
  public static final int IB_EMAIL_REPLY_CANCELLED_VALUE = 12150;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EmailIBReplyStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EmailIBReplyStatus forNumber(int value) {
    switch (value) {
      case 0: return IB_EMAIL_REPLY_UNKNOWN;
      case 12000: return IB_EMAIL_REPLY_RECEIVED;
      case 12010: return IB_EMAIL_AGENT_REPLY_SENDING;
      case 12020: return IB_EMAIL_AGENT_REPLY_SENDING_FAILED;
      case 12030: return IB_EMAIL_AGENT_REPLY_INVALID;
      case 12040: return IB_EMAIL_AGENT_REPLY_SENT;
      case 12050: return IB_EMAIL_AGENT_REPLY_DELIVERED;
      case 12060: return IB_EMAIL_AGENT_REPLY_DROPPED;
      case 12070: return IB_EMAIL_AGENT_REPLY_DEFERRED;
      case 12080: return IB_EMAIL_AGENT_REPLY_BOUNCED;
      case 12090: return IB_EMAIL_AGENT_REPLY_OPENED;
      case 12100: return IB_EMAIL_AGENT_REPLY_CLICKED;
      case 12110: return IB_EMAIL_AGENT_REPLY_UNSUBSCRIBED;
      case 12120: return IB_EMAIL_AGENT_REPLY_MARKED_AS_SPAM;
      case 12130: return IB_EMAIL_AGENT_REPLY_BLOCKED;
      case 12140: return IB_EMAIL_REPLY_DNC;
      case 12150: return IB_EMAIL_REPLY_CANCELLED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EmailIBReplyStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EmailIBReplyStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EmailIBReplyStatus>() {
          public EmailIBReplyStatus findValueByNumber(int number) {
            return EmailIBReplyStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.EmailProto.getDescriptor().getEnumTypes().get(3);
  }

  private static final EmailIBReplyStatus[] VALUES = values();

  public static EmailIBReplyStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EmailIBReplyStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.EmailIBReplyStatus)
}

