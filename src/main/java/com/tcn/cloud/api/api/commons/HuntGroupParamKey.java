// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/acd.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf type {@code api.commons.HuntGroupParamKey}
 */
public final class HuntGroupParamKey extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.commons.HuntGroupParamKey)
    HuntGroupParamKeyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HuntGroupParamKey.newBuilder() to construct.
  private HuntGroupParamKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HuntGroupParamKey() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new HuntGroupParamKey();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.AcdProto.internal_static_api_commons_HuntGroupParamKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.commons.AcdProto.internal_static_api_commons_HuntGroupParamKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.commons.HuntGroupParamKey.class, com.tcn.cloud.api.api.commons.HuntGroupParamKey.Builder.class);
  }

  /**
   * Protobuf enum {@code api.commons.HuntGroupParamKey.Enum}
   */
  public enum Enum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AGENT_DIAL_IN_NUMBER = 0;</code>
     */
    AGENT_DIAL_IN_NUMBER(0),
    /**
     * <code>AGENT_LOGIN_GUI_STATISTICS_TEMPLATE = 1;</code>
     */
    AGENT_LOGIN_GUI_STATISTICS_TEMPLATE(1),
    /**
     * <code>AGENT_PASSWORD_REQUIRES_LETTER = 2;</code>
     */
    AGENT_PASSWORD_REQUIRES_LETTER(2),
    /**
     * <code>AGENT_PASSWORD_REQUIRES_NUMBER = 3;</code>
     */
    AGENT_PASSWORD_REQUIRES_NUMBER(3),
    /**
     * <code>AGENT_PASSWORD_REQUIRES_SYMBOL = 4;</code>
     */
    AGENT_PASSWORD_REQUIRES_SYMBOL(4),
    /**
     * <code>AGENT_PASSWORD_REQUIRES_UPPER_LOWER = 5;</code>
     */
    AGENT_PASSWORD_REQUIRES_UPPER_LOWER(5),
    /**
     * <code>AGENT_SKILLS_REASSIGNMENT = 6;</code>
     */
    AGENT_SKILLS_REASSIGNMENT(6),
    /**
     * <code>AGENT_STATS_CALL_HISTORY = 7;</code>
     */
    AGENT_STATS_CALL_HISTORY(7),
    /**
     * <code>AGENT_TRIGGER = 8;</code>
     */
    AGENT_TRIGGER(8),
    /**
     * <code>AGENT_DISPOSITION_CONDITIONAL_DNCL = 9;</code>
     */
    AGENT_DISPOSITION_CONDITIONAL_DNCL(9),
    /**
     * <code>ALLOWED_IPS = 10;</code>
     */
    ALLOWED_IPS(10),
    /**
     * <code>ALLOW_AGENT_HOLD = 11;</code>
     */
    ALLOW_AGENT_HOLD(11),
    /**
     * <code>ALLOW_AGENT_INTERCOM = 12;</code>
     */
    ALLOW_AGENT_INTERCOM(12),
    /**
     * <code>ALLOW_AGENT_PASSWORD_RESET = 13;</code>
     */
    ALLOW_AGENT_PASSWORD_RESET(13),
    /**
     * <code>ALLOW_AGENT_PAUSE_CODE_RESET = 14;</code>
     */
    ALLOW_AGENT_PAUSE_CODE_RESET(14),
    /**
     * <code>ALLOW_AGENT_TO_PAUSE = 15;</code>
     */
    ALLOW_AGENT_TO_PAUSE(15),
    /**
     * <code>ALLOW_CALLBACK_SCHEDULING = 16;</code>
     */
    ALLOW_CALLBACK_SCHEDULING(16),
    /**
     * <code>ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY = 17;</code>
     */
    ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY(17),
    /**
     * <code>ALLOW_MANUAL_APPROVAL_OF_CALLS = 18;</code>
     */
    ALLOW_MANUAL_APPROVAL_OF_CALLS(18),
    /**
     * <code>ALLOW_MANUAL_DIALING = 19;</code>
     */
    ALLOW_MANUAL_DIALING(19),
    /**
     * <code>ALLOW_PHONE_NUMBER_ACTIVITY = 20;</code>
     */
    ALLOW_PHONE_NUMBER_ACTIVITY(20),
    /**
     * <code>ALLOW_PREVIEW_DIAL_CANCEL = 21;</code>
     */
    ALLOW_PREVIEW_DIAL_CANCEL(21),
    /**
     * <code>ALLOW_SCHEDULED_CALLBACK_CALLING = 22;</code>
     */
    ALLOW_SCHEDULED_CALLBACK_CALLING(22),
    /**
     * <code>ALLOW_TRANSFER_CALLS = 23;</code>
     */
    ALLOW_TRANSFER_CALLS(23),
    /**
     * <code>ALPHANUMERIC_KEYPAD = 24;</code>
     */
    ALPHANUMERIC_KEYPAD(24),
    /**
     * <code>AUTO_PAUSE_ON_MULTI_HOLD = 25;</code>
     */
    AUTO_PAUSE_ON_MULTI_HOLD(25),
    /**
     * <code>AUTO_PAUSE_ON_PREVIEW_CANCEL = 26;</code>
     */
    AUTO_PAUSE_ON_PREVIEW_CANCEL(26),
    /**
     * <code>DEFAULT_AGENT_PAUSE_CODE = 27;</code>
     */
    DEFAULT_AGENT_PAUSE_CODE(27),
    /**
     * <code>DEFAULT_AGENT_TRANSFERS_FILTERING = 28;</code>
     */
    DEFAULT_AGENT_TRANSFERS_FILTERING(28),
    /**
     * <code>DEFAULT_DNCL_COUNTRY = 29;</code>
     */
    DEFAULT_DNCL_COUNTRY(29),
    /**
     * <code>DEFAULT_DNCL_EXPIRATION = 30;</code>
     */
    DEFAULT_DNCL_EXPIRATION(30),
    /**
     * <code>DEFAULT_INBOUND_CALL_DNCL_EXPIRATION = 31;</code>
     */
    DEFAULT_INBOUND_CALL_DNCL_EXPIRATION(31),
    /**
     * <code>DEFAULT_MANUAL_CALL_DNCL_EXPIRATION = 32;</code>
     */
    DEFAULT_MANUAL_CALL_DNCL_EXPIRATION(32),
    /**
     * <code>DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION = 33;</code>
     */
    DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION(33),
    /**
     * <code>DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION = 34;</code>
     */
    DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION(34),
    /**
     * <code>DEFAULT_SCHEDULED_CALLBACK_ROUTING = 35;</code>
     */
    DEFAULT_SCHEDULED_CALLBACK_ROUTING(35),
    /**
     * <code>DISCONNECT_CALL_CONFIRMATION = 36;</code>
     */
    DISCONNECT_CALL_CONFIRMATION(36),
    /**
     * <code>DISPLAY_AGENT_TRANSFERS_FILTERING = 37;</code>
     */
    DISPLAY_AGENT_TRANSFERS_FILTERING(37),
    /**
     * <code>DISPLAY_DATA_COLLECT_DATA = 38;</code>
     */
    DISPLAY_DATA_COLLECT_DATA(38),
    /**
     * <code>DISPLAY_DATA_DIPPED_DATA = 39;</code>
     */
    DISPLAY_DATA_DIPPED_DATA(39),
    /**
     * <code>DISPLAY_IVR_KEYS_PRESSED = 40;</code>
     */
    DISPLAY_IVR_KEYS_PRESSED(40),
    /**
     * <code>DISPLAY_PHONE_ZIP_METADATA = 41;</code>
     */
    DISPLAY_PHONE_ZIP_METADATA(41),
    /**
     * <code>DISPLAY_RECORDING_INDICATOR = 42;</code>
     */
    DISPLAY_RECORDING_INDICATOR(42),
    /**
     * <code>DO_ALLOW_ADD_DNCL = 43;</code>
     */
    DO_ALLOW_ADD_DNCL(43),
    /**
     * <code>ENABLE_RECORDING_PAUSE = 44;</code>
     */
    ENABLE_RECORDING_PAUSE(44),
    /**
     * <code>HOLD_QUEUE_MONITORING = 45;</code>
     */
    HOLD_QUEUE_MONITORING(45),
    /**
     * <code>HOLD_QUEUE_MONITORING_AGENT_ROUTING = 46;</code>
     */
    HOLD_QUEUE_MONITORING_AGENT_ROUTING(46),
    /**
     * <code>HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING = 47;</code>
     */
    HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING(47),
    /**
     * <code>HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING = 48;</code>
     */
    HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING(48),
    /**
     * <code>HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE = 49;</code>
     */
    HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE(49),
    /**
     * <code>HUNT_GROUP_SCRIPT = 50;</code>
     */
    HUNT_GROUP_SCRIPT(50),
    /**
     * <code>HUNT_GROUP_WEB_LINK = 51;</code>
     */
    HUNT_GROUP_WEB_LINK(51),
    /**
     * <code>MANUAL_APPROVAL_NUMBER_CONFIRMATION = 52;</code>
     */
    MANUAL_APPROVAL_NUMBER_CONFIRMATION(52),
    /**
     * <code>MANUAL_DIAL_AUTO_DNCL_ADD = 53;</code>
     */
    MANUAL_DIAL_AUTO_DNCL_ADD(53),
    /**
     * <code>MANUAL_DIAL_DEFAULT_CALLER_ID = 54;</code>
     */
    MANUAL_DIAL_DEFAULT_CALLER_ID(54),
    /**
     * <code>MANUAL_DIAL_DEFAULT_COUNTRY = 55;</code>
     */
    MANUAL_DIAL_DEFAULT_COUNTRY(55),
    /**
     * <code>MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU = 56;</code>
     */
    MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU(56),
    /**
     * <code>MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY = 57;</code>
     */
    MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY(57),
    /**
     * <code>MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU = 58;</code>
     */
    MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU(58),
    /**
     * <code>MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK = 59;</code>
     */
    MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK(59),
    /**
     * <code>MANUAL_DIAL_DISPLAY_PHONE_BOOK = 60;</code>
     */
    MANUAL_DIAL_DISPLAY_PHONE_BOOK(60),
    /**
     * <code>MANUAL_DIAL_NUMBER_WHITE_LIST = 61;</code>
     */
    MANUAL_DIAL_NUMBER_WHITE_LIST(61),
    /**
     * <code>MANUAL_DIAL_OVERRIDE_CELL_SCRUB = 62;</code>
     */
    MANUAL_DIAL_OVERRIDE_CELL_SCRUB(62),
    /**
     * <code>MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS = 64;</code>
     */
    MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS(64),
    /**
     * <code>MANUAL_DIAL_SCRUB_OVERRIDE = 65;</code>
     */
    MANUAL_DIAL_SCRUB_OVERRIDE(65),
    /**
     * <code>MANUAL_DIAL_TIMEZONE_OVERRIDE = 66;</code>
     */
    MANUAL_DIAL_TIMEZONE_OVERRIDE(66),
    /**
     * <code>MANUAL_DIAL_USER_EDITABLE_CALLER_ID = 67;</code>
     */
    MANUAL_DIAL_USER_EDITABLE_CALLER_ID(67),
    /**
     * <code>MANUAL_QUEUE_CONFIGURATION_NAME = 68;</code>
     */
    MANUAL_QUEUE_CONFIGURATION_NAME(68),
    /**
     * <code>MINIMUM_AGENT_PASSWORD_LENGTH = 69;</code>
     */
    MINIMUM_AGENT_PASSWORD_LENGTH(69),
    /**
     * <code>PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES = 70;</code>
     */
    PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES(70),
    /**
     * <code>PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD = 71;</code>
     */
    PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD(71),
    /**
     * <code>PREVIEW_DIAL_AUTO_DNCL_ADD = 72;</code>
     */
    PREVIEW_DIAL_AUTO_DNCL_ADD(72),
    /**
     * <code>PREVIEW_DIAL_CALL_TIMEOUT = 73;</code>
     */
    PREVIEW_DIAL_CALL_TIMEOUT(73),
    /**
     * <code>PREVIEW_DIAL_CONFIRMATION = 74;</code>
     */
    PREVIEW_DIAL_CONFIRMATION(74),
    /**
     * <code>PREVIEW_QUEUE_CONFIGURATION_NAME = 75;</code>
     */
    PREVIEW_QUEUE_CONFIGURATION_NAME(75),
    /**
     * <code>RECORDING_DELAY = 76;</code>
     */
    RECORDING_DELAY(76),
    /**
     * <code>REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME = 77;</code>
     */
    REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME(77),
    /**
     * <code>SCHEDULED_CALLBACKS_RETRIEVAL_MODE = 78;</code>
     */
    SCHEDULED_CALLBACKS_RETRIEVAL_MODE(78),
    /**
     * <code>SCHEDULED_CALLBACK_ROUTING_DISALLOWED = 79;</code>
     */
    SCHEDULED_CALLBACK_ROUTING_DISALLOWED(79),
    /**
     * <code>TRANSFER_CALLS_DEFAULT_CALLER_ID = 80;</code>
     */
    TRANSFER_CALLS_DEFAULT_CALLER_ID(80),
    /**
     * <code>TRANSFER_CALLS_DEFAULT_COUNTRY = 81;</code>
     */
    TRANSFER_CALLS_DEFAULT_COUNTRY(81),
    /**
     * <code>TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER = 82;</code>
     */
    TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER(82),
    /**
     * <code>TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK = 83;</code>
     */
    TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK(83),
    /**
     * <code>TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU = 84;</code>
     */
    TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU(84),
    /**
     * <code>TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK = 85;</code>
     */
    TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK(85),
    /**
     * <code>TRANSFER_CALLS_HAND_OFF_TYPE = 86;</code>
     */
    TRANSFER_CALLS_HAND_OFF_TYPE(86),
    /**
     * <code>TRANSFER_CALLS_TRANSFER_TYPE = 87;</code>
     */
    TRANSFER_CALLS_TRANSFER_TYPE(87),
    /**
     * <code>TRANSFER_CALLS_USER_EDITABLE_CALLER_ID = 88;</code>
     */
    TRANSFER_CALLS_USER_EDITABLE_CALLER_ID(88),
    /**
     * <code>TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER = 89;</code>
     */
    TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER(89),
    /**
     * <code>TRANSFER_RECORDING_STATUS = 90;</code>
     */
    TRANSFER_RECORDING_STATUS(90),
    /**
     * <code>USE_ADVANCED_GATEWAY_TITLE = 91;</code>
     */
    USE_ADVANCED_GATEWAY_TITLE(91),
    /**
     * <code>USE_AGENT_PAUSE_CODES = 92;</code>
     */
    USE_AGENT_PAUSE_CODES(92),
    /**
     * <code>USE_IP_BASED_AUTH = 93;</code>
     */
    USE_IP_BASED_AUTH(93),
    /**
     * <code>HUNT_GROUP_REASSIGNMENT_DISALLOWED = 94;</code>
     */
    HUNT_GROUP_REASSIGNMENT_DISALLOWED(94),
    /**
     * <code>REQUEUE_TRANSFER_DISALLOWED_SKILLS = 95;</code>
     */
    REQUEUE_TRANSFER_DISALLOWED_SKILLS(95),
    /**
     * <code>ALLOW_MANUAL_APPROVAL_FOR_MESSAGING = 96;</code>
     */
    ALLOW_MANUAL_APPROVAL_FOR_MESSAGING(96),
    /**
     * <code>DISPLAY_SKILLS = 97;</code>
     */
    DISPLAY_SKILLS(97),
    /**
     * <code>PBX_TRANSFER_DISALLOWED_EXTENSIONS = 98;</code>
     */
    PBX_TRANSFER_DISALLOWED_EXTENSIONS(98),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AGENT_DIAL_IN_NUMBER = 0;</code>
     */
    public static final int AGENT_DIAL_IN_NUMBER_VALUE = 0;
    /**
     * <code>AGENT_LOGIN_GUI_STATISTICS_TEMPLATE = 1;</code>
     */
    public static final int AGENT_LOGIN_GUI_STATISTICS_TEMPLATE_VALUE = 1;
    /**
     * <code>AGENT_PASSWORD_REQUIRES_LETTER = 2;</code>
     */
    public static final int AGENT_PASSWORD_REQUIRES_LETTER_VALUE = 2;
    /**
     * <code>AGENT_PASSWORD_REQUIRES_NUMBER = 3;</code>
     */
    public static final int AGENT_PASSWORD_REQUIRES_NUMBER_VALUE = 3;
    /**
     * <code>AGENT_PASSWORD_REQUIRES_SYMBOL = 4;</code>
     */
    public static final int AGENT_PASSWORD_REQUIRES_SYMBOL_VALUE = 4;
    /**
     * <code>AGENT_PASSWORD_REQUIRES_UPPER_LOWER = 5;</code>
     */
    public static final int AGENT_PASSWORD_REQUIRES_UPPER_LOWER_VALUE = 5;
    /**
     * <code>AGENT_SKILLS_REASSIGNMENT = 6;</code>
     */
    public static final int AGENT_SKILLS_REASSIGNMENT_VALUE = 6;
    /**
     * <code>AGENT_STATS_CALL_HISTORY = 7;</code>
     */
    public static final int AGENT_STATS_CALL_HISTORY_VALUE = 7;
    /**
     * <code>AGENT_TRIGGER = 8;</code>
     */
    public static final int AGENT_TRIGGER_VALUE = 8;
    /**
     * <code>AGENT_DISPOSITION_CONDITIONAL_DNCL = 9;</code>
     */
    public static final int AGENT_DISPOSITION_CONDITIONAL_DNCL_VALUE = 9;
    /**
     * <code>ALLOWED_IPS = 10;</code>
     */
    public static final int ALLOWED_IPS_VALUE = 10;
    /**
     * <code>ALLOW_AGENT_HOLD = 11;</code>
     */
    public static final int ALLOW_AGENT_HOLD_VALUE = 11;
    /**
     * <code>ALLOW_AGENT_INTERCOM = 12;</code>
     */
    public static final int ALLOW_AGENT_INTERCOM_VALUE = 12;
    /**
     * <code>ALLOW_AGENT_PASSWORD_RESET = 13;</code>
     */
    public static final int ALLOW_AGENT_PASSWORD_RESET_VALUE = 13;
    /**
     * <code>ALLOW_AGENT_PAUSE_CODE_RESET = 14;</code>
     */
    public static final int ALLOW_AGENT_PAUSE_CODE_RESET_VALUE = 14;
    /**
     * <code>ALLOW_AGENT_TO_PAUSE = 15;</code>
     */
    public static final int ALLOW_AGENT_TO_PAUSE_VALUE = 15;
    /**
     * <code>ALLOW_CALLBACK_SCHEDULING = 16;</code>
     */
    public static final int ALLOW_CALLBACK_SCHEDULING_VALUE = 16;
    /**
     * <code>ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY = 17;</code>
     */
    public static final int ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY_VALUE = 17;
    /**
     * <code>ALLOW_MANUAL_APPROVAL_OF_CALLS = 18;</code>
     */
    public static final int ALLOW_MANUAL_APPROVAL_OF_CALLS_VALUE = 18;
    /**
     * <code>ALLOW_MANUAL_DIALING = 19;</code>
     */
    public static final int ALLOW_MANUAL_DIALING_VALUE = 19;
    /**
     * <code>ALLOW_PHONE_NUMBER_ACTIVITY = 20;</code>
     */
    public static final int ALLOW_PHONE_NUMBER_ACTIVITY_VALUE = 20;
    /**
     * <code>ALLOW_PREVIEW_DIAL_CANCEL = 21;</code>
     */
    public static final int ALLOW_PREVIEW_DIAL_CANCEL_VALUE = 21;
    /**
     * <code>ALLOW_SCHEDULED_CALLBACK_CALLING = 22;</code>
     */
    public static final int ALLOW_SCHEDULED_CALLBACK_CALLING_VALUE = 22;
    /**
     * <code>ALLOW_TRANSFER_CALLS = 23;</code>
     */
    public static final int ALLOW_TRANSFER_CALLS_VALUE = 23;
    /**
     * <code>ALPHANUMERIC_KEYPAD = 24;</code>
     */
    public static final int ALPHANUMERIC_KEYPAD_VALUE = 24;
    /**
     * <code>AUTO_PAUSE_ON_MULTI_HOLD = 25;</code>
     */
    public static final int AUTO_PAUSE_ON_MULTI_HOLD_VALUE = 25;
    /**
     * <code>AUTO_PAUSE_ON_PREVIEW_CANCEL = 26;</code>
     */
    public static final int AUTO_PAUSE_ON_PREVIEW_CANCEL_VALUE = 26;
    /**
     * <code>DEFAULT_AGENT_PAUSE_CODE = 27;</code>
     */
    public static final int DEFAULT_AGENT_PAUSE_CODE_VALUE = 27;
    /**
     * <code>DEFAULT_AGENT_TRANSFERS_FILTERING = 28;</code>
     */
    public static final int DEFAULT_AGENT_TRANSFERS_FILTERING_VALUE = 28;
    /**
     * <code>DEFAULT_DNCL_COUNTRY = 29;</code>
     */
    public static final int DEFAULT_DNCL_COUNTRY_VALUE = 29;
    /**
     * <code>DEFAULT_DNCL_EXPIRATION = 30;</code>
     */
    public static final int DEFAULT_DNCL_EXPIRATION_VALUE = 30;
    /**
     * <code>DEFAULT_INBOUND_CALL_DNCL_EXPIRATION = 31;</code>
     */
    public static final int DEFAULT_INBOUND_CALL_DNCL_EXPIRATION_VALUE = 31;
    /**
     * <code>DEFAULT_MANUAL_CALL_DNCL_EXPIRATION = 32;</code>
     */
    public static final int DEFAULT_MANUAL_CALL_DNCL_EXPIRATION_VALUE = 32;
    /**
     * <code>DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION = 33;</code>
     */
    public static final int DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION_VALUE = 33;
    /**
     * <code>DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION = 34;</code>
     */
    public static final int DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION_VALUE = 34;
    /**
     * <code>DEFAULT_SCHEDULED_CALLBACK_ROUTING = 35;</code>
     */
    public static final int DEFAULT_SCHEDULED_CALLBACK_ROUTING_VALUE = 35;
    /**
     * <code>DISCONNECT_CALL_CONFIRMATION = 36;</code>
     */
    public static final int DISCONNECT_CALL_CONFIRMATION_VALUE = 36;
    /**
     * <code>DISPLAY_AGENT_TRANSFERS_FILTERING = 37;</code>
     */
    public static final int DISPLAY_AGENT_TRANSFERS_FILTERING_VALUE = 37;
    /**
     * <code>DISPLAY_DATA_COLLECT_DATA = 38;</code>
     */
    public static final int DISPLAY_DATA_COLLECT_DATA_VALUE = 38;
    /**
     * <code>DISPLAY_DATA_DIPPED_DATA = 39;</code>
     */
    public static final int DISPLAY_DATA_DIPPED_DATA_VALUE = 39;
    /**
     * <code>DISPLAY_IVR_KEYS_PRESSED = 40;</code>
     */
    public static final int DISPLAY_IVR_KEYS_PRESSED_VALUE = 40;
    /**
     * <code>DISPLAY_PHONE_ZIP_METADATA = 41;</code>
     */
    public static final int DISPLAY_PHONE_ZIP_METADATA_VALUE = 41;
    /**
     * <code>DISPLAY_RECORDING_INDICATOR = 42;</code>
     */
    public static final int DISPLAY_RECORDING_INDICATOR_VALUE = 42;
    /**
     * <code>DO_ALLOW_ADD_DNCL = 43;</code>
     */
    public static final int DO_ALLOW_ADD_DNCL_VALUE = 43;
    /**
     * <code>ENABLE_RECORDING_PAUSE = 44;</code>
     */
    public static final int ENABLE_RECORDING_PAUSE_VALUE = 44;
    /**
     * <code>HOLD_QUEUE_MONITORING = 45;</code>
     */
    public static final int HOLD_QUEUE_MONITORING_VALUE = 45;
    /**
     * <code>HOLD_QUEUE_MONITORING_AGENT_ROUTING = 46;</code>
     */
    public static final int HOLD_QUEUE_MONITORING_AGENT_ROUTING_VALUE = 46;
    /**
     * <code>HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING = 47;</code>
     */
    public static final int HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING_VALUE = 47;
    /**
     * <code>HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING = 48;</code>
     */
    public static final int HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING_VALUE = 48;
    /**
     * <code>HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE = 49;</code>
     */
    public static final int HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE_VALUE = 49;
    /**
     * <code>HUNT_GROUP_SCRIPT = 50;</code>
     */
    public static final int HUNT_GROUP_SCRIPT_VALUE = 50;
    /**
     * <code>HUNT_GROUP_WEB_LINK = 51;</code>
     */
    public static final int HUNT_GROUP_WEB_LINK_VALUE = 51;
    /**
     * <code>MANUAL_APPROVAL_NUMBER_CONFIRMATION = 52;</code>
     */
    public static final int MANUAL_APPROVAL_NUMBER_CONFIRMATION_VALUE = 52;
    /**
     * <code>MANUAL_DIAL_AUTO_DNCL_ADD = 53;</code>
     */
    public static final int MANUAL_DIAL_AUTO_DNCL_ADD_VALUE = 53;
    /**
     * <code>MANUAL_DIAL_DEFAULT_CALLER_ID = 54;</code>
     */
    public static final int MANUAL_DIAL_DEFAULT_CALLER_ID_VALUE = 54;
    /**
     * <code>MANUAL_DIAL_DEFAULT_COUNTRY = 55;</code>
     */
    public static final int MANUAL_DIAL_DEFAULT_COUNTRY_VALUE = 55;
    /**
     * <code>MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU = 56;</code>
     */
    public static final int MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU_VALUE = 56;
    /**
     * <code>MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY = 57;</code>
     */
    public static final int MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY_VALUE = 57;
    /**
     * <code>MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU = 58;</code>
     */
    public static final int MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU_VALUE = 58;
    /**
     * <code>MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK = 59;</code>
     */
    public static final int MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK_VALUE = 59;
    /**
     * <code>MANUAL_DIAL_DISPLAY_PHONE_BOOK = 60;</code>
     */
    public static final int MANUAL_DIAL_DISPLAY_PHONE_BOOK_VALUE = 60;
    /**
     * <code>MANUAL_DIAL_NUMBER_WHITE_LIST = 61;</code>
     */
    public static final int MANUAL_DIAL_NUMBER_WHITE_LIST_VALUE = 61;
    /**
     * <code>MANUAL_DIAL_OVERRIDE_CELL_SCRUB = 62;</code>
     */
    public static final int MANUAL_DIAL_OVERRIDE_CELL_SCRUB_VALUE = 62;
    /**
     * <code>MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS = 64;</code>
     */
    public static final int MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS_VALUE = 64;
    /**
     * <code>MANUAL_DIAL_SCRUB_OVERRIDE = 65;</code>
     */
    public static final int MANUAL_DIAL_SCRUB_OVERRIDE_VALUE = 65;
    /**
     * <code>MANUAL_DIAL_TIMEZONE_OVERRIDE = 66;</code>
     */
    public static final int MANUAL_DIAL_TIMEZONE_OVERRIDE_VALUE = 66;
    /**
     * <code>MANUAL_DIAL_USER_EDITABLE_CALLER_ID = 67;</code>
     */
    public static final int MANUAL_DIAL_USER_EDITABLE_CALLER_ID_VALUE = 67;
    /**
     * <code>MANUAL_QUEUE_CONFIGURATION_NAME = 68;</code>
     */
    public static final int MANUAL_QUEUE_CONFIGURATION_NAME_VALUE = 68;
    /**
     * <code>MINIMUM_AGENT_PASSWORD_LENGTH = 69;</code>
     */
    public static final int MINIMUM_AGENT_PASSWORD_LENGTH_VALUE = 69;
    /**
     * <code>PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES = 70;</code>
     */
    public static final int PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES_VALUE = 70;
    /**
     * <code>PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD = 71;</code>
     */
    public static final int PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD_VALUE = 71;
    /**
     * <code>PREVIEW_DIAL_AUTO_DNCL_ADD = 72;</code>
     */
    public static final int PREVIEW_DIAL_AUTO_DNCL_ADD_VALUE = 72;
    /**
     * <code>PREVIEW_DIAL_CALL_TIMEOUT = 73;</code>
     */
    public static final int PREVIEW_DIAL_CALL_TIMEOUT_VALUE = 73;
    /**
     * <code>PREVIEW_DIAL_CONFIRMATION = 74;</code>
     */
    public static final int PREVIEW_DIAL_CONFIRMATION_VALUE = 74;
    /**
     * <code>PREVIEW_QUEUE_CONFIGURATION_NAME = 75;</code>
     */
    public static final int PREVIEW_QUEUE_CONFIGURATION_NAME_VALUE = 75;
    /**
     * <code>RECORDING_DELAY = 76;</code>
     */
    public static final int RECORDING_DELAY_VALUE = 76;
    /**
     * <code>REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME = 77;</code>
     */
    public static final int REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME_VALUE = 77;
    /**
     * <code>SCHEDULED_CALLBACKS_RETRIEVAL_MODE = 78;</code>
     */
    public static final int SCHEDULED_CALLBACKS_RETRIEVAL_MODE_VALUE = 78;
    /**
     * <code>SCHEDULED_CALLBACK_ROUTING_DISALLOWED = 79;</code>
     */
    public static final int SCHEDULED_CALLBACK_ROUTING_DISALLOWED_VALUE = 79;
    /**
     * <code>TRANSFER_CALLS_DEFAULT_CALLER_ID = 80;</code>
     */
    public static final int TRANSFER_CALLS_DEFAULT_CALLER_ID_VALUE = 80;
    /**
     * <code>TRANSFER_CALLS_DEFAULT_COUNTRY = 81;</code>
     */
    public static final int TRANSFER_CALLS_DEFAULT_COUNTRY_VALUE = 81;
    /**
     * <code>TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER = 82;</code>
     */
    public static final int TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER_VALUE = 82;
    /**
     * <code>TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK = 83;</code>
     */
    public static final int TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK_VALUE = 83;
    /**
     * <code>TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU = 84;</code>
     */
    public static final int TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU_VALUE = 84;
    /**
     * <code>TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK = 85;</code>
     */
    public static final int TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK_VALUE = 85;
    /**
     * <code>TRANSFER_CALLS_HAND_OFF_TYPE = 86;</code>
     */
    public static final int TRANSFER_CALLS_HAND_OFF_TYPE_VALUE = 86;
    /**
     * <code>TRANSFER_CALLS_TRANSFER_TYPE = 87;</code>
     */
    public static final int TRANSFER_CALLS_TRANSFER_TYPE_VALUE = 87;
    /**
     * <code>TRANSFER_CALLS_USER_EDITABLE_CALLER_ID = 88;</code>
     */
    public static final int TRANSFER_CALLS_USER_EDITABLE_CALLER_ID_VALUE = 88;
    /**
     * <code>TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER = 89;</code>
     */
    public static final int TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER_VALUE = 89;
    /**
     * <code>TRANSFER_RECORDING_STATUS = 90;</code>
     */
    public static final int TRANSFER_RECORDING_STATUS_VALUE = 90;
    /**
     * <code>USE_ADVANCED_GATEWAY_TITLE = 91;</code>
     */
    public static final int USE_ADVANCED_GATEWAY_TITLE_VALUE = 91;
    /**
     * <code>USE_AGENT_PAUSE_CODES = 92;</code>
     */
    public static final int USE_AGENT_PAUSE_CODES_VALUE = 92;
    /**
     * <code>USE_IP_BASED_AUTH = 93;</code>
     */
    public static final int USE_IP_BASED_AUTH_VALUE = 93;
    /**
     * <code>HUNT_GROUP_REASSIGNMENT_DISALLOWED = 94;</code>
     */
    public static final int HUNT_GROUP_REASSIGNMENT_DISALLOWED_VALUE = 94;
    /**
     * <code>REQUEUE_TRANSFER_DISALLOWED_SKILLS = 95;</code>
     */
    public static final int REQUEUE_TRANSFER_DISALLOWED_SKILLS_VALUE = 95;
    /**
     * <code>ALLOW_MANUAL_APPROVAL_FOR_MESSAGING = 96;</code>
     */
    public static final int ALLOW_MANUAL_APPROVAL_FOR_MESSAGING_VALUE = 96;
    /**
     * <code>DISPLAY_SKILLS = 97;</code>
     */
    public static final int DISPLAY_SKILLS_VALUE = 97;
    /**
     * <code>PBX_TRANSFER_DISALLOWED_EXTENSIONS = 98;</code>
     */
    public static final int PBX_TRANSFER_DISALLOWED_EXTENSIONS_VALUE = 98;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Enum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Enum forNumber(int value) {
      switch (value) {
        case 0: return AGENT_DIAL_IN_NUMBER;
        case 1: return AGENT_LOGIN_GUI_STATISTICS_TEMPLATE;
        case 2: return AGENT_PASSWORD_REQUIRES_LETTER;
        case 3: return AGENT_PASSWORD_REQUIRES_NUMBER;
        case 4: return AGENT_PASSWORD_REQUIRES_SYMBOL;
        case 5: return AGENT_PASSWORD_REQUIRES_UPPER_LOWER;
        case 6: return AGENT_SKILLS_REASSIGNMENT;
        case 7: return AGENT_STATS_CALL_HISTORY;
        case 8: return AGENT_TRIGGER;
        case 9: return AGENT_DISPOSITION_CONDITIONAL_DNCL;
        case 10: return ALLOWED_IPS;
        case 11: return ALLOW_AGENT_HOLD;
        case 12: return ALLOW_AGENT_INTERCOM;
        case 13: return ALLOW_AGENT_PASSWORD_RESET;
        case 14: return ALLOW_AGENT_PAUSE_CODE_RESET;
        case 15: return ALLOW_AGENT_TO_PAUSE;
        case 16: return ALLOW_CALLBACK_SCHEDULING;
        case 17: return ALLOW_EXPORT_PHONE_NUMBER_ACTIVITY;
        case 18: return ALLOW_MANUAL_APPROVAL_OF_CALLS;
        case 19: return ALLOW_MANUAL_DIALING;
        case 20: return ALLOW_PHONE_NUMBER_ACTIVITY;
        case 21: return ALLOW_PREVIEW_DIAL_CANCEL;
        case 22: return ALLOW_SCHEDULED_CALLBACK_CALLING;
        case 23: return ALLOW_TRANSFER_CALLS;
        case 24: return ALPHANUMERIC_KEYPAD;
        case 25: return AUTO_PAUSE_ON_MULTI_HOLD;
        case 26: return AUTO_PAUSE_ON_PREVIEW_CANCEL;
        case 27: return DEFAULT_AGENT_PAUSE_CODE;
        case 28: return DEFAULT_AGENT_TRANSFERS_FILTERING;
        case 29: return DEFAULT_DNCL_COUNTRY;
        case 30: return DEFAULT_DNCL_EXPIRATION;
        case 31: return DEFAULT_INBOUND_CALL_DNCL_EXPIRATION;
        case 32: return DEFAULT_MANUAL_CALL_DNCL_EXPIRATION;
        case 33: return DEFAULT_OUTBOUND_CALL_DNCL_EXPIRATION;
        case 34: return DEFAULT_PREVIEW_CALL_DNCL_EXPIRATION;
        case 35: return DEFAULT_SCHEDULED_CALLBACK_ROUTING;
        case 36: return DISCONNECT_CALL_CONFIRMATION;
        case 37: return DISPLAY_AGENT_TRANSFERS_FILTERING;
        case 38: return DISPLAY_DATA_COLLECT_DATA;
        case 39: return DISPLAY_DATA_DIPPED_DATA;
        case 40: return DISPLAY_IVR_KEYS_PRESSED;
        case 41: return DISPLAY_PHONE_ZIP_METADATA;
        case 42: return DISPLAY_RECORDING_INDICATOR;
        case 43: return DO_ALLOW_ADD_DNCL;
        case 44: return ENABLE_RECORDING_PAUSE;
        case 45: return HOLD_QUEUE_MONITORING;
        case 46: return HOLD_QUEUE_MONITORING_AGENT_ROUTING;
        case 47: return HOLD_QUEUE_MONITORING_PREFERRED_HUNT_GROUP_ROUTING;
        case 48: return HOLD_QUEUE_MONITORING_REQUIRED_HUNT_GROUP_ROUTING;
        case 49: return HUNT_GROUP_CLIENT_INFO_DISPLAY_TEMPLATE;
        case 50: return HUNT_GROUP_SCRIPT;
        case 51: return HUNT_GROUP_WEB_LINK;
        case 52: return MANUAL_APPROVAL_NUMBER_CONFIRMATION;
        case 53: return MANUAL_DIAL_AUTO_DNCL_ADD;
        case 54: return MANUAL_DIAL_DEFAULT_CALLER_ID;
        case 55: return MANUAL_DIAL_DEFAULT_COUNTRY;
        case 56: return MANUAL_DIAL_DISPLAY_COUNTRY_SELECT_MENU;
        case 57: return MANUAL_DIAL_DEFAULT_CALLER_ID_COUNTRY;
        case 58: return MANUAL_DIAL_DISPLAY_CALLER_ID_COUNTRY_SELECT_MENU;
        case 59: return MANUAL_DIAL_DISPLAY_OUTBOUND_NUMBER_PHONE_BOOK;
        case 60: return MANUAL_DIAL_DISPLAY_PHONE_BOOK;
        case 61: return MANUAL_DIAL_NUMBER_WHITE_LIST;
        case 62: return MANUAL_DIAL_OVERRIDE_CELL_SCRUB;
        case 64: return MANUAL_DIAL_OVERRIDE_RECORDING_SETTINGS;
        case 65: return MANUAL_DIAL_SCRUB_OVERRIDE;
        case 66: return MANUAL_DIAL_TIMEZONE_OVERRIDE;
        case 67: return MANUAL_DIAL_USER_EDITABLE_CALLER_ID;
        case 68: return MANUAL_QUEUE_CONFIGURATION_NAME;
        case 69: return MINIMUM_AGENT_PASSWORD_LENGTH;
        case 70: return PHONE_NUMBER_ACTIVITY_EDIT_RESPONSES;
        case 71: return PHONE_NUMBER_ACTIVITY_RECORDINGS_DOWNLOAD;
        case 72: return PREVIEW_DIAL_AUTO_DNCL_ADD;
        case 73: return PREVIEW_DIAL_CALL_TIMEOUT;
        case 74: return PREVIEW_DIAL_CONFIRMATION;
        case 75: return PREVIEW_QUEUE_CONFIGURATION_NAME;
        case 76: return RECORDING_DELAY;
        case 77: return REQUEUE_TRANSFER_QUEUE_CONFIGURATION_NAME;
        case 78: return SCHEDULED_CALLBACKS_RETRIEVAL_MODE;
        case 79: return SCHEDULED_CALLBACK_ROUTING_DISALLOWED;
        case 80: return TRANSFER_CALLS_DEFAULT_CALLER_ID;
        case 81: return TRANSFER_CALLS_DEFAULT_COUNTRY;
        case 82: return TRANSFER_CALLS_DEFAULT_TRANSFER_NUMBER;
        case 83: return TRANSFER_CALLS_DISPLAY_CALLER_ID_PHONE_BOOK;
        case 84: return TRANSFER_CALLS_DISPLAY_COUNTRY_SELECT_MENU;
        case 85: return TRANSFER_CALLS_DISPLAY_TRANSFER_NUMBER_PHONE_BOOK;
        case 86: return TRANSFER_CALLS_HAND_OFF_TYPE;
        case 87: return TRANSFER_CALLS_TRANSFER_TYPE;
        case 88: return TRANSFER_CALLS_USER_EDITABLE_CALLER_ID;
        case 89: return TRANSFER_CALLS_USER_EDITABLE_TRANSFER_NUMBER;
        case 90: return TRANSFER_RECORDING_STATUS;
        case 91: return USE_ADVANCED_GATEWAY_TITLE;
        case 92: return USE_AGENT_PAUSE_CODES;
        case 93: return USE_IP_BASED_AUTH;
        case 94: return HUNT_GROUP_REASSIGNMENT_DISALLOWED;
        case 95: return REQUEUE_TRANSFER_DISALLOWED_SKILLS;
        case 96: return ALLOW_MANUAL_APPROVAL_FOR_MESSAGING;
        case 97: return DISPLAY_SKILLS;
        case 98: return PBX_TRANSFER_DISALLOWED_EXTENSIONS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
            public Enum findValueByNumber(int number) {
              return Enum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.commons.HuntGroupParamKey.getDescriptor().getEnumTypes().get(0);
    }

    private static final Enum[] VALUES = values();

    public static Enum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:api.commons.HuntGroupParamKey.Enum)
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.commons.HuntGroupParamKey)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.commons.HuntGroupParamKey other = (com.tcn.cloud.api.api.commons.HuntGroupParamKey) obj;

    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.commons.HuntGroupParamKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.commons.HuntGroupParamKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.commons.HuntGroupParamKey)
      com.tcn.cloud.api.api.commons.HuntGroupParamKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.commons.AcdProto.internal_static_api_commons_HuntGroupParamKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.commons.AcdProto.internal_static_api_commons_HuntGroupParamKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.commons.HuntGroupParamKey.class, com.tcn.cloud.api.api.commons.HuntGroupParamKey.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.commons.HuntGroupParamKey.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.commons.AcdProto.internal_static_api_commons_HuntGroupParamKey_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.HuntGroupParamKey getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.commons.HuntGroupParamKey.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.HuntGroupParamKey build() {
      com.tcn.cloud.api.api.commons.HuntGroupParamKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.HuntGroupParamKey buildPartial() {
      com.tcn.cloud.api.api.commons.HuntGroupParamKey result = new com.tcn.cloud.api.api.commons.HuntGroupParamKey(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.commons.HuntGroupParamKey) {
        return mergeFrom((com.tcn.cloud.api.api.commons.HuntGroupParamKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.commons.HuntGroupParamKey other) {
      if (other == com.tcn.cloud.api.api.commons.HuntGroupParamKey.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.commons.HuntGroupParamKey)
  }

  // @@protoc_insertion_point(class_scope:api.commons.HuntGroupParamKey)
  private static final com.tcn.cloud.api.api.commons.HuntGroupParamKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.commons.HuntGroupParamKey();
  }

  public static com.tcn.cloud.api.api.commons.HuntGroupParamKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HuntGroupParamKey>
      PARSER = new com.google.protobuf.AbstractParser<HuntGroupParamKey>() {
    @java.lang.Override
    public HuntGroupParamKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HuntGroupParamKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HuntGroupParamKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.commons.HuntGroupParamKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

