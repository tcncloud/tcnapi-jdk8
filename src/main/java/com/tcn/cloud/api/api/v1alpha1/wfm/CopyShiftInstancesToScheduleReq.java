// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

/**
 * <pre>
 * Request message for the CopyShiftInstancesToSchedule RPC
 * </pre>
 *
 * Protobuf type {@code api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq}
 */
public final class CopyShiftInstancesToScheduleReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)
    CopyShiftInstancesToScheduleReqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CopyShiftInstancesToScheduleReq.newBuilder() to construct.
  private CopyShiftInstancesToScheduleReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CopyShiftInstancesToScheduleReq() {
    shiftInstanceSids_ = emptyLongList();
    sourceScheduleType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CopyShiftInstancesToScheduleReq();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyShiftInstancesToScheduleReq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyShiftInstancesToScheduleReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.class, com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.Builder.class);
  }

  public static final int DESTINATION_SCHEDULE_FIELD_NUMBER = 1;
  private com.tcn.cloud.api.api.commons.ScheduleSelector destinationSchedule_;
  /**
   * <pre>
   * Schedule that the &#64;shift_instance_sids will be copied into.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
   * @return Whether the destinationSchedule field is set.
   */
  @java.lang.Override
  public boolean hasDestinationSchedule() {
    return destinationSchedule_ != null;
  }
  /**
   * <pre>
   * Schedule that the &#64;shift_instance_sids will be copied into.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
   * @return The destinationSchedule.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelector getDestinationSchedule() {
    return destinationSchedule_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationSchedule_;
  }
  /**
   * <pre>
   * Schedule that the &#64;shift_instance_sids will be copied into.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getDestinationScheduleOrBuilder() {
    return destinationSchedule_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationSchedule_;
  }

  public static final int SHIFT_INSTANCE_SIDS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.LongList shiftInstanceSids_;
  /**
   * <pre>
   * IDs of the shift instances to copy into &#64;destination_schedule.
   * </pre>
   *
   * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
   * @return A list containing the shiftInstanceSids.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getShiftInstanceSidsList() {
    return shiftInstanceSids_;
  }
  /**
   * <pre>
   * IDs of the shift instances to copy into &#64;destination_schedule.
   * </pre>
   *
   * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
   * @return The count of shiftInstanceSids.
   */
  public int getShiftInstanceSidsCount() {
    return shiftInstanceSids_.size();
  }
  /**
   * <pre>
   * IDs of the shift instances to copy into &#64;destination_schedule.
   * </pre>
   *
   * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
   * @param index The index of the element to return.
   * @return The shiftInstanceSids at the given index.
   */
  public long getShiftInstanceSids(int index) {
    return shiftInstanceSids_.getLong(index);
  }
  private int shiftInstanceSidsMemoizedSerializedSize = -1;

  public static final int OVERLAP_AS_WARNING_FIELD_NUMBER = 3;
  private boolean overlapAsWarning_ = false;
  /**
   * <pre>
   * If set to true, overlapping shifts will be permitted, and return a warning diagnostic after persisting.
   * Otherwise, any overlapping shifts for agents in the &#64;destination_schedule will return an error diagnostic and no shifts will be copied.
   * </pre>
   *
   * <code>bool overlap_as_warning = 3 [json_name = "overlapAsWarning"];</code>
   * @return The overlapAsWarning.
   */
  @java.lang.Override
  public boolean getOverlapAsWarning() {
    return overlapAsWarning_;
  }

  public static final int SOURCE_SCHEDULE_TYPE_FIELD_NUMBER = 4;
  private int sourceScheduleType_ = 0;
  /**
   * <pre>
   * The type of schedule that the &#64;shift_instance_sids are associated with.
   * </pre>
   *
   * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
   * @return The enum numeric value on the wire for sourceScheduleType.
   */
  @java.lang.Override public int getSourceScheduleTypeValue() {
    return sourceScheduleType_;
  }
  /**
   * <pre>
   * The type of schedule that the &#64;shift_instance_sids are associated with.
   * </pre>
   *
   * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
   * @return The sourceScheduleType.
   */
  @java.lang.Override public com.tcn.cloud.api.api.commons.ScheduleType getSourceScheduleType() {
    com.tcn.cloud.api.api.commons.ScheduleType result = com.tcn.cloud.api.api.commons.ScheduleType.forNumber(sourceScheduleType_);
    return result == null ? com.tcn.cloud.api.api.commons.ScheduleType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (destinationSchedule_ != null) {
      output.writeMessage(1, getDestinationSchedule());
    }
    if (getShiftInstanceSidsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(shiftInstanceSidsMemoizedSerializedSize);
    }
    for (int i = 0; i < shiftInstanceSids_.size(); i++) {
      output.writeInt64NoTag(shiftInstanceSids_.getLong(i));
    }
    if (overlapAsWarning_ != false) {
      output.writeBool(3, overlapAsWarning_);
    }
    if (sourceScheduleType_ != com.tcn.cloud.api.api.commons.ScheduleType.DRAFT.getNumber()) {
      output.writeEnum(4, sourceScheduleType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (destinationSchedule_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDestinationSchedule());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < shiftInstanceSids_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(shiftInstanceSids_.getLong(i));
      }
      size += dataSize;
      if (!getShiftInstanceSidsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      shiftInstanceSidsMemoizedSerializedSize = dataSize;
    }
    if (overlapAsWarning_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, overlapAsWarning_);
    }
    if (sourceScheduleType_ != com.tcn.cloud.api.api.commons.ScheduleType.DRAFT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, sourceScheduleType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq other = (com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq) obj;

    if (hasDestinationSchedule() != other.hasDestinationSchedule()) return false;
    if (hasDestinationSchedule()) {
      if (!getDestinationSchedule()
          .equals(other.getDestinationSchedule())) return false;
    }
    if (!getShiftInstanceSidsList()
        .equals(other.getShiftInstanceSidsList())) return false;
    if (getOverlapAsWarning()
        != other.getOverlapAsWarning()) return false;
    if (sourceScheduleType_ != other.sourceScheduleType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDestinationSchedule()) {
      hash = (37 * hash) + DESTINATION_SCHEDULE_FIELD_NUMBER;
      hash = (53 * hash) + getDestinationSchedule().hashCode();
    }
    if (getShiftInstanceSidsCount() > 0) {
      hash = (37 * hash) + SHIFT_INSTANCE_SIDS_FIELD_NUMBER;
      hash = (53 * hash) + getShiftInstanceSidsList().hashCode();
    }
    hash = (37 * hash) + OVERLAP_AS_WARNING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOverlapAsWarning());
    hash = (37 * hash) + SOURCE_SCHEDULE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + sourceScheduleType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request message for the CopyShiftInstancesToSchedule RPC
   * </pre>
   *
   * Protobuf type {@code api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyShiftInstancesToScheduleReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyShiftInstancesToScheduleReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.class, com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      destinationSchedule_ = null;
      if (destinationScheduleBuilder_ != null) {
        destinationScheduleBuilder_.dispose();
        destinationScheduleBuilder_ = null;
      }
      shiftInstanceSids_ = emptyLongList();
      overlapAsWarning_ = false;
      sourceScheduleType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyShiftInstancesToScheduleReq_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq build() {
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq buildPartial() {
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq result = new com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        shiftInstanceSids_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.shiftInstanceSids_ = shiftInstanceSids_;
    }

    private void buildPartial0(com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.destinationSchedule_ = destinationScheduleBuilder_ == null
            ? destinationSchedule_
            : destinationScheduleBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.overlapAsWarning_ = overlapAsWarning_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.sourceScheduleType_ = sourceScheduleType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq) {
        return mergeFrom((com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq other) {
      if (other == com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq.getDefaultInstance()) return this;
      if (other.hasDestinationSchedule()) {
        mergeDestinationSchedule(other.getDestinationSchedule());
      }
      if (!other.shiftInstanceSids_.isEmpty()) {
        if (shiftInstanceSids_.isEmpty()) {
          shiftInstanceSids_ = other.shiftInstanceSids_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureShiftInstanceSidsIsMutable();
          shiftInstanceSids_.addAll(other.shiftInstanceSids_);
        }
        onChanged();
      }
      if (other.getOverlapAsWarning() != false) {
        setOverlapAsWarning(other.getOverlapAsWarning());
      }
      if (other.sourceScheduleType_ != 0) {
        setSourceScheduleTypeValue(other.getSourceScheduleTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDestinationScheduleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              long v = input.readInt64();
              ensureShiftInstanceSidsIsMutable();
              shiftInstanceSids_.addLong(v);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureShiftInstanceSidsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                shiftInstanceSids_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            } // case 18
            case 24: {
              overlapAsWarning_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              sourceScheduleType_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.tcn.cloud.api.api.commons.ScheduleSelector destinationSchedule_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> destinationScheduleBuilder_;
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     * @return Whether the destinationSchedule field is set.
     */
    public boolean hasDestinationSchedule() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     * @return The destinationSchedule.
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector getDestinationSchedule() {
      if (destinationScheduleBuilder_ == null) {
        return destinationSchedule_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationSchedule_;
      } else {
        return destinationScheduleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public Builder setDestinationSchedule(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (destinationScheduleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        destinationSchedule_ = value;
      } else {
        destinationScheduleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public Builder setDestinationSchedule(
        com.tcn.cloud.api.api.commons.ScheduleSelector.Builder builderForValue) {
      if (destinationScheduleBuilder_ == null) {
        destinationSchedule_ = builderForValue.build();
      } else {
        destinationScheduleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public Builder mergeDestinationSchedule(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (destinationScheduleBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          destinationSchedule_ != null &&
          destinationSchedule_ != com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance()) {
          getDestinationScheduleBuilder().mergeFrom(value);
        } else {
          destinationSchedule_ = value;
        }
      } else {
        destinationScheduleBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public Builder clearDestinationSchedule() {
      bitField0_ = (bitField0_ & ~0x00000001);
      destinationSchedule_ = null;
      if (destinationScheduleBuilder_ != null) {
        destinationScheduleBuilder_.dispose();
        destinationScheduleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector.Builder getDestinationScheduleBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDestinationScheduleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getDestinationScheduleOrBuilder() {
      if (destinationScheduleBuilder_ != null) {
        return destinationScheduleBuilder_.getMessageOrBuilder();
      } else {
        return destinationSchedule_ == null ?
            com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationSchedule_;
      }
    }
    /**
     * <pre>
     * Schedule that the &#64;shift_instance_sids will be copied into.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule = 1 [json_name = "destinationSchedule"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> 
        getDestinationScheduleFieldBuilder() {
      if (destinationScheduleBuilder_ == null) {
        destinationScheduleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder>(
                getDestinationSchedule(),
                getParentForChildren(),
                isClean());
        destinationSchedule_ = null;
      }
      return destinationScheduleBuilder_;
    }

    private com.google.protobuf.Internal.LongList shiftInstanceSids_ = emptyLongList();
    private void ensureShiftInstanceSidsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        shiftInstanceSids_ = mutableCopy(shiftInstanceSids_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @return A list containing the shiftInstanceSids.
     */
    public java.util.List<java.lang.Long>
        getShiftInstanceSidsList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(shiftInstanceSids_) : shiftInstanceSids_;
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @return The count of shiftInstanceSids.
     */
    public int getShiftInstanceSidsCount() {
      return shiftInstanceSids_.size();
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @param index The index of the element to return.
     * @return The shiftInstanceSids at the given index.
     */
    public long getShiftInstanceSids(int index) {
      return shiftInstanceSids_.getLong(index);
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @param index The index to set the value at.
     * @param value The shiftInstanceSids to set.
     * @return This builder for chaining.
     */
    public Builder setShiftInstanceSids(
        int index, long value) {

      ensureShiftInstanceSidsIsMutable();
      shiftInstanceSids_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @param value The shiftInstanceSids to add.
     * @return This builder for chaining.
     */
    public Builder addShiftInstanceSids(long value) {

      ensureShiftInstanceSidsIsMutable();
      shiftInstanceSids_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @param values The shiftInstanceSids to add.
     * @return This builder for chaining.
     */
    public Builder addAllShiftInstanceSids(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureShiftInstanceSidsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, shiftInstanceSids_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * IDs of the shift instances to copy into &#64;destination_schedule.
     * </pre>
     *
     * <code>repeated int64 shift_instance_sids = 2 [json_name = "shiftInstanceSids"];</code>
     * @return This builder for chaining.
     */
    public Builder clearShiftInstanceSids() {
      shiftInstanceSids_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private boolean overlapAsWarning_ ;
    /**
     * <pre>
     * If set to true, overlapping shifts will be permitted, and return a warning diagnostic after persisting.
     * Otherwise, any overlapping shifts for agents in the &#64;destination_schedule will return an error diagnostic and no shifts will be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 3 [json_name = "overlapAsWarning"];</code>
     * @return The overlapAsWarning.
     */
    @java.lang.Override
    public boolean getOverlapAsWarning() {
      return overlapAsWarning_;
    }
    /**
     * <pre>
     * If set to true, overlapping shifts will be permitted, and return a warning diagnostic after persisting.
     * Otherwise, any overlapping shifts for agents in the &#64;destination_schedule will return an error diagnostic and no shifts will be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 3 [json_name = "overlapAsWarning"];</code>
     * @param value The overlapAsWarning to set.
     * @return This builder for chaining.
     */
    public Builder setOverlapAsWarning(boolean value) {

      overlapAsWarning_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set to true, overlapping shifts will be permitted, and return a warning diagnostic after persisting.
     * Otherwise, any overlapping shifts for agents in the &#64;destination_schedule will return an error diagnostic and no shifts will be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 3 [json_name = "overlapAsWarning"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOverlapAsWarning() {
      bitField0_ = (bitField0_ & ~0x00000004);
      overlapAsWarning_ = false;
      onChanged();
      return this;
    }

    private int sourceScheduleType_ = 0;
    /**
     * <pre>
     * The type of schedule that the &#64;shift_instance_sids are associated with.
     * </pre>
     *
     * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
     * @return The enum numeric value on the wire for sourceScheduleType.
     */
    @java.lang.Override public int getSourceScheduleTypeValue() {
      return sourceScheduleType_;
    }
    /**
     * <pre>
     * The type of schedule that the &#64;shift_instance_sids are associated with.
     * </pre>
     *
     * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
     * @param value The enum numeric value on the wire for sourceScheduleType to set.
     * @return This builder for chaining.
     */
    public Builder setSourceScheduleTypeValue(int value) {
      sourceScheduleType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of schedule that the &#64;shift_instance_sids are associated with.
     * </pre>
     *
     * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
     * @return The sourceScheduleType.
     */
    @java.lang.Override
    public com.tcn.cloud.api.api.commons.ScheduleType getSourceScheduleType() {
      com.tcn.cloud.api.api.commons.ScheduleType result = com.tcn.cloud.api.api.commons.ScheduleType.forNumber(sourceScheduleType_);
      return result == null ? com.tcn.cloud.api.api.commons.ScheduleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of schedule that the &#64;shift_instance_sids are associated with.
     * </pre>
     *
     * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
     * @param value The sourceScheduleType to set.
     * @return This builder for chaining.
     */
    public Builder setSourceScheduleType(com.tcn.cloud.api.api.commons.ScheduleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      sourceScheduleType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of schedule that the &#64;shift_instance_sids are associated with.
     * </pre>
     *
     * <code>.api.commons.ScheduleType source_schedule_type = 4 [json_name = "sourceScheduleType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceScheduleType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      sourceScheduleType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)
  }

  // @@protoc_insertion_point(class_scope:api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq)
  private static final com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq();
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CopyShiftInstancesToScheduleReq>
      PARSER = new com.google.protobuf.AbstractParser<CopyShiftInstancesToScheduleReq>() {
    @java.lang.Override
    public CopyShiftInstancesToScheduleReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CopyShiftInstancesToScheduleReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CopyShiftInstancesToScheduleReq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.CopyShiftInstancesToScheduleReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

