// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/org/huntgroup.proto

package com.tcn.cloud.api.api.commons.org;

/**
 * <pre>
 * ScriptResponseType differentiates between script responses
 * </pre>
 *
 * Protobuf enum {@code api.commons.org.ScriptResponseType}
 */
public enum ScriptResponseType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Not specified
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_UNSPECIFIED = 0;</code>
   */
  SCRIPT_RESPONSE_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Drop down select menu
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_DROP_DOWN_SELECT_MENU = 1;</code>
   */
  SCRIPT_RESPONSE_TYPE_DROP_DOWN_SELECT_MENU(1),
  /**
   * <pre>
   * Multiple select menu
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_MULTIPLE_SELECT_MENU = 2;</code>
   */
  SCRIPT_RESPONSE_TYPE_MULTIPLE_SELECT_MENU(2),
  /**
   * <pre>
   * Check boxes
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_CHECK_BOXES = 3;</code>
   */
  SCRIPT_RESPONSE_TYPE_CHECK_BOXES(3),
  /**
   * <pre>
   * Radio buttons
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_RADIO_BUTTONS = 4;</code>
   */
  SCRIPT_RESPONSE_TYPE_RADIO_BUTTONS(4),
  /**
   * <pre>
   * Text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX = 5;</code>
   */
  SCRIPT_RESPONSE_TYPE_TEXT_BOX(5),
  /**
   * <pre>
   * Alphanumeric text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX_ALPHANUMERIC = 6;</code>
   */
  SCRIPT_RESPONSE_TYPE_TEXT_BOX_ALPHANUMERIC(6),
  /**
   * <pre>
   * Numerical only text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX_NUMERICAL = 7;</code>
   */
  SCRIPT_RESPONSE_TYPE_TEXT_BOX_NUMERICAL(7),
  /**
   * <pre>
   * Text verification field
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_VERIFICATION_FIELD = 8;</code>
   */
  SCRIPT_RESPONSE_TYPE_TEXT_VERIFICATION_FIELD(8),
  /**
   * <pre>
   * Text area
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_AREA = 9;</code>
   */
  SCRIPT_RESPONSE_TYPE_TEXT_AREA(9),
  /**
   * <pre>
   * Regular expression field
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_FIELD = 10;</code>
   */
  SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_FIELD(10),
  /**
   * <pre>
   * Regular expression area
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_AREA = 11;</code>
   */
  SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_AREA(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Not specified
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Drop down select menu
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_DROP_DOWN_SELECT_MENU = 1;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_DROP_DOWN_SELECT_MENU_VALUE = 1;
  /**
   * <pre>
   * Multiple select menu
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_MULTIPLE_SELECT_MENU = 2;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_MULTIPLE_SELECT_MENU_VALUE = 2;
  /**
   * <pre>
   * Check boxes
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_CHECK_BOXES = 3;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_CHECK_BOXES_VALUE = 3;
  /**
   * <pre>
   * Radio buttons
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_RADIO_BUTTONS = 4;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_RADIO_BUTTONS_VALUE = 4;
  /**
   * <pre>
   * Text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX = 5;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_TEXT_BOX_VALUE = 5;
  /**
   * <pre>
   * Alphanumeric text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX_ALPHANUMERIC = 6;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_TEXT_BOX_ALPHANUMERIC_VALUE = 6;
  /**
   * <pre>
   * Numerical only text box
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_BOX_NUMERICAL = 7;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_TEXT_BOX_NUMERICAL_VALUE = 7;
  /**
   * <pre>
   * Text verification field
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_VERIFICATION_FIELD = 8;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_TEXT_VERIFICATION_FIELD_VALUE = 8;
  /**
   * <pre>
   * Text area
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_TEXT_AREA = 9;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_TEXT_AREA_VALUE = 9;
  /**
   * <pre>
   * Regular expression field
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_FIELD = 10;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_FIELD_VALUE = 10;
  /**
   * <pre>
   * Regular expression area
   * </pre>
   *
   * <code>SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_AREA = 11;</code>
   */
  public static final int SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_AREA_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ScriptResponseType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ScriptResponseType forNumber(int value) {
    switch (value) {
      case 0: return SCRIPT_RESPONSE_TYPE_UNSPECIFIED;
      case 1: return SCRIPT_RESPONSE_TYPE_DROP_DOWN_SELECT_MENU;
      case 2: return SCRIPT_RESPONSE_TYPE_MULTIPLE_SELECT_MENU;
      case 3: return SCRIPT_RESPONSE_TYPE_CHECK_BOXES;
      case 4: return SCRIPT_RESPONSE_TYPE_RADIO_BUTTONS;
      case 5: return SCRIPT_RESPONSE_TYPE_TEXT_BOX;
      case 6: return SCRIPT_RESPONSE_TYPE_TEXT_BOX_ALPHANUMERIC;
      case 7: return SCRIPT_RESPONSE_TYPE_TEXT_BOX_NUMERICAL;
      case 8: return SCRIPT_RESPONSE_TYPE_TEXT_VERIFICATION_FIELD;
      case 9: return SCRIPT_RESPONSE_TYPE_TEXT_AREA;
      case 10: return SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_FIELD;
      case 11: return SCRIPT_RESPONSE_TYPE_REGULAR_EXPRESSION_AREA;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ScriptResponseType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ScriptResponseType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ScriptResponseType>() {
          public ScriptResponseType findValueByNumber(int number) {
            return ScriptResponseType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.org.HuntgroupProto.getDescriptor().getEnumTypes().get(9);
  }

  private static final ScriptResponseType[] VALUES = values();

  public static ScriptResponseType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ScriptResponseType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.org.ScriptResponseType)
}

