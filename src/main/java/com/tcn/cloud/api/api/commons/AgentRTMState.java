// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

/**
 * <pre>
 * Enum representing the real time state of a WFM agent.
 * </pre>
 *
 * Protobuf enum {@code api.commons.AgentRTMState}
 */
public enum AgentRTMState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The agent is logged in, but not in any other call state.
   * </pre>
   *
   * <code>LOGGED_IN = 0;</code>
   */
  LOGGED_IN(0),
  /**
   * <pre>
   * The agent is on an acd inbound call.
   * </pre>
   *
   * <code>ACD_INBOUND_CALL = 1;</code>
   */
  ACD_INBOUND_CALL(1),
  /**
   * <pre>
   * The agent is on a dicrect outbound call.
   * </pre>
   *
   * <code>DIRECT_OUTBOUND_CALL = 2;</code>
   */
  DIRECT_OUTBOUND_CALL(2),
  /**
   * <pre>
   *cdn The agent's call is on hold.
   * </pre>
   *
   * <code>CALL_ON_HOLD = 3;</code>
   */
  CALL_ON_HOLD(3),
  /**
   * <pre>
   * Agent is on an outbound call.
   * </pre>
   *
   * <code>OUTBOUND_CALL = 4;</code>
   */
  OUTBOUND_CALL(4),
  /**
   * <pre>
   * Agent is taking an inbound call.
   * </pre>
   *
   * <code>INBOUND_CALL = 5;</code>
   */
  INBOUND_CALL(5),
  /**
   * <pre>
   * Agent is transferring a call.
   * </pre>
   *
   * <code>TRANSFER = 6;</code>
   */
  TRANSFER(6),
  /**
   * <pre>
   * Agent is on a conference call.
   * </pre>
   *
   * <code>CONFERENCE = 7;</code>
   */
  CONFERENCE(7),
  /**
   * <pre>
   * Agent is ready to accept a call.
   * </pre>
   *
   * <code>READY = 8;</code>
   */
  READY(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The agent is logged in, but not in any other call state.
   * </pre>
   *
   * <code>LOGGED_IN = 0;</code>
   */
  public static final int LOGGED_IN_VALUE = 0;
  /**
   * <pre>
   * The agent is on an acd inbound call.
   * </pre>
   *
   * <code>ACD_INBOUND_CALL = 1;</code>
   */
  public static final int ACD_INBOUND_CALL_VALUE = 1;
  /**
   * <pre>
   * The agent is on a dicrect outbound call.
   * </pre>
   *
   * <code>DIRECT_OUTBOUND_CALL = 2;</code>
   */
  public static final int DIRECT_OUTBOUND_CALL_VALUE = 2;
  /**
   * <pre>
   *cdn The agent's call is on hold.
   * </pre>
   *
   * <code>CALL_ON_HOLD = 3;</code>
   */
  public static final int CALL_ON_HOLD_VALUE = 3;
  /**
   * <pre>
   * Agent is on an outbound call.
   * </pre>
   *
   * <code>OUTBOUND_CALL = 4;</code>
   */
  public static final int OUTBOUND_CALL_VALUE = 4;
  /**
   * <pre>
   * Agent is taking an inbound call.
   * </pre>
   *
   * <code>INBOUND_CALL = 5;</code>
   */
  public static final int INBOUND_CALL_VALUE = 5;
  /**
   * <pre>
   * Agent is transferring a call.
   * </pre>
   *
   * <code>TRANSFER = 6;</code>
   */
  public static final int TRANSFER_VALUE = 6;
  /**
   * <pre>
   * Agent is on a conference call.
   * </pre>
   *
   * <code>CONFERENCE = 7;</code>
   */
  public static final int CONFERENCE_VALUE = 7;
  /**
   * <pre>
   * Agent is ready to accept a call.
   * </pre>
   *
   * <code>READY = 8;</code>
   */
  public static final int READY_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AgentRTMState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AgentRTMState forNumber(int value) {
    switch (value) {
      case 0: return LOGGED_IN;
      case 1: return ACD_INBOUND_CALL;
      case 2: return DIRECT_OUTBOUND_CALL;
      case 3: return CALL_ON_HOLD;
      case 4: return OUTBOUND_CALL;
      case 5: return INBOUND_CALL;
      case 6: return TRANSFER;
      case 7: return CONFERENCE;
      case 8: return READY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AgentRTMState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AgentRTMState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AgentRTMState>() {
          public AgentRTMState findValueByNumber(int number) {
            return AgentRTMState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.WfmProto.getDescriptor().getEnumTypes().get(19);
  }

  private static final AgentRTMState[] VALUES = values();

  public static AgentRTMState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AgentRTMState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.AgentRTMState)
}

