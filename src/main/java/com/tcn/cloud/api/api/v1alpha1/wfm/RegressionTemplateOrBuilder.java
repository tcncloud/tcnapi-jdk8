// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface RegressionTemplateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.RegressionTemplate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID of the regression template.
   * </pre>
   *
   * <code>int64 regression_template_sid = 1 [json_name = "regressionTemplateSid"];</code>
   * @return The regressionTemplateSid.
   */
  long getRegressionTemplateSid();

  /**
   * <pre>
   * Name of the regression template.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the regression template.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Selected algorithmic method to be used
   * </pre>
   *
   * <code>.api.commons.RegressionForecasterModelTypes model_type = 3 [json_name = "modelType"];</code>
   * @return The enum numeric value on the wire for modelType.
   */
  int getModelTypeValue();
  /**
   * <pre>
   * Selected algorithmic method to be used
   * </pre>
   *
   * <code>.api.commons.RegressionForecasterModelTypes model_type = 3 [json_name = "modelType"];</code>
   * @return The modelType.
   */
  com.tcn.cloud.api.api.commons.RegressionForecasterModelTypes getModelType();

  /**
   * <pre>
   * Number of weeks of training data to exclude when building a forecast.
   * </pre>
   *
   * <code>int32 exclude_call_data_for_n_weeks = 4 [json_name = "excludeCallDataForNWeeks"];</code>
   * @return The excludeCallDataForNWeeks.
   */
  int getExcludeCallDataForNWeeks();

  /**
   * <pre>
   * Number of weeks in the past to emphasize;
   * </pre>
   *
   * <code>int32 num_weeks_ago_to_emphasize = 5 [json_name = "numWeeksAgoToEmphasize"];</code>
   * @return The numWeeksAgoToEmphasize.
   */
  int getNumWeeksAgoToEmphasize();

  /**
   * <pre>
   * Value that especificies the max value of deviations to use. Greater deviations than the specified values will be excluded.
   * optional
   * </pre>
   *
   * <code>float max_deviation = 6 [json_name = "maxDeviation"];</code>
   * @return The maxDeviation.
   */
  float getMaxDeviation();

  /**
   * <pre>
   * Percentage from 0 to 100 that specifies the trend sensitivity.
   * </pre>
   *
   * <code>float trend_sensitivity = 7 [json_name = "trendSensitivity"];</code>
   * @return The trendSensitivity.
   */
  float getTrendSensitivity();

  /**
   * <pre>
   * Whether or not to exclude intervals with no calls.
   * </pre>
   *
   * <code>bool exclude_intervals_with_no_calls = 8 [json_name = "excludeIntervalsWithNoCalls"];</code>
   * @return The excludeIntervalsWithNoCalls.
   */
  boolean getExcludeIntervalsWithNoCalls();

  /**
   * <pre>
   * Processing type for the averages.
   * </pre>
   *
   * <code>.api.commons.RegressionForecasterAvgsProcessingType avgs_processing_type = 9 [json_name = "avgsProcessingType"];</code>
   * @return The enum numeric value on the wire for avgsProcessingType.
   */
  int getAvgsProcessingTypeValue();
  /**
   * <pre>
   * Processing type for the averages.
   * </pre>
   *
   * <code>.api.commons.RegressionForecasterAvgsProcessingType avgs_processing_type = 9 [json_name = "avgsProcessingType"];</code>
   * @return The avgsProcessingType.
   */
  com.tcn.cloud.api.api.commons.RegressionForecasterAvgsProcessingType getAvgsProcessingType();

  /**
   * <pre>
   * Whether or not to include seasonality.
   * </pre>
   *
   * <code>bool include_seasonality = 10 [json_name = "includeSeasonality"];</code>
   * @return The includeSeasonality.
   */
  boolean getIncludeSeasonality();

  /**
   * <pre>
   * Whether or not to include trend.
   * </pre>
   *
   * <code>bool include_trend = 11 [json_name = "includeTrend"];</code>
   * @return The includeTrend.
   */
  boolean getIncludeTrend();
}
