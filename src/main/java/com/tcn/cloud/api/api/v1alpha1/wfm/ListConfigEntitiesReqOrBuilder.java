// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface ListConfigEntitiesReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.ListConfigEntitiesReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Entity type of the entities to retrieve.
   * </pre>
   *
   * <code>.api.commons.ConfigEntityType entity_type = 1 [json_name = "entityType"];</code>
   * @return The enum numeric value on the wire for entityType.
   */
  int getEntityTypeValue();
  /**
   * <pre>
   * Entity type of the entities to retrieve.
   * </pre>
   *
   * <code>.api.commons.ConfigEntityType entity_type = 1 [json_name = "entityType"];</code>
   * @return The entityType.
   */
  com.tcn.cloud.api.api.commons.ConfigEntityType getEntityType();

  /**
   * <pre>
   * Entity that the entities to return will belong to.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity belongs_to_entity = 2 [json_name = "belongsToEntity"];</code>
   * @return Whether the belongsToEntity field is set.
   */
  boolean hasBelongsToEntity();
  /**
   * <pre>
   * Entity that the entities to return will belong to.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity belongs_to_entity = 2 [json_name = "belongsToEntity"];</code>
   * @return The belongsToEntity.
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity getBelongsToEntity();
  /**
   * <pre>
   * Entity that the entities to return will belong to.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity belongs_to_entity = 2 [json_name = "belongsToEntity"];</code>
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder getBelongsToEntityOrBuilder();

  /**
   * <pre>
   * Indicates whether or not to retrieve inactive entities (true=active and inactive, false=active only).
   * </pre>
   *
   * <code>bool include_inactive = 3 [json_name = "includeInactive"];</code>
   * @return The includeInactive.
   */
  boolean getIncludeInactive();

  /**
   * <pre>
   * Depth to go down the config tree for children and member entities.
   * e.g: a value of 0 will only get the entities requested with no children/member.
   *      a value of 1 will get the entities with children/member entities included 1 level down.
   * </pre>
   *
   * <code>int32 member_depth = 4 [json_name = "memberDepth"];</code>
   * @return The memberDepth.
   */
  int getMemberDepth();

  /**
   * <pre>
   * ID of the scenario that the entities desired belong to, must match the scenario of &#64;belongs_to_entity.
   * </pre>
   *
   * <code>int64 schedule_scenario_sid = 5 [json_name = "scheduleScenarioSid"];</code>
   * @return The scheduleScenarioSid.
   */
  long getScheduleScenarioSid();
}
