// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface ParseResOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.ParseRes)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the session_id should be returned on future requests to make things faster
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <pre>
   * the session_id should be returned on future requests to make things faster
   * </pre>
   *
   * <code>string session_id = 1 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <code>string expression = 2 [json_name = "expression"];</code>
   * @return The expression.
   */
  java.lang.String getExpression();
  /**
   * <code>string expression = 2 [json_name = "expression"];</code>
   * @return The bytes for expression.
   */
  com.google.protobuf.ByteString
      getExpressionBytes();

  /**
   * <pre>
   * a list of valid tokens we can use at this point
   * </pre>
   *
   * <code>repeated string next_tokens = 3 [json_name = "nextTokens"];</code>
   * @return A list containing the nextTokens.
   */
  java.util.List<java.lang.String>
      getNextTokensList();
  /**
   * <pre>
   * a list of valid tokens we can use at this point
   * </pre>
   *
   * <code>repeated string next_tokens = 3 [json_name = "nextTokens"];</code>
   * @return The count of nextTokens.
   */
  int getNextTokensCount();
  /**
   * <pre>
   * a list of valid tokens we can use at this point
   * </pre>
   *
   * <code>repeated string next_tokens = 3 [json_name = "nextTokens"];</code>
   * @param index The index of the element to return.
   * @return The nextTokens at the given index.
   */
  java.lang.String getNextTokens(int index);
  /**
   * <pre>
   * a list of valid tokens we can use at this point
   * </pre>
   *
   * <code>repeated string next_tokens = 3 [json_name = "nextTokens"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the nextTokens at the given index.
   */
  com.google.protobuf.ByteString
      getNextTokensBytes(int index);

  /**
   * <pre>
   * if not a valid expression, error should have the message why
   * </pre>
   *
   * <code>string error = 5 [json_name = "error"];</code>
   * @return The error.
   */
  java.lang.String getError();
  /**
   * <pre>
   * if not a valid expression, error should have the message why
   * </pre>
   *
   * <code>string error = 5 [json_name = "error"];</code>
   * @return The bytes for error.
   */
  com.google.protobuf.ByteString
      getErrorBytes();

  /**
   * <pre>
   * whether the result_expression is complete
   * </pre>
   *
   * <code>bool complete = 6 [json_name = "complete"];</code>
   * @return The complete.
   */
  boolean getComplete();

  /**
   * <pre>
   * if complete is true, process will have a completed Process defined.
   * if complete is true, you will be able to send process to lms_api through
   * CreatePipelineElement.
   * </pre>
   *
   * <code>.api.v0alpha.Process process = 7 [json_name = "process"];</code>
   * @return Whether the process field is set.
   */
  boolean hasProcess();
  /**
   * <pre>
   * if complete is true, process will have a completed Process defined.
   * if complete is true, you will be able to send process to lms_api through
   * CreatePipelineElement.
   * </pre>
   *
   * <code>.api.v0alpha.Process process = 7 [json_name = "process"];</code>
   * @return The process.
   */
  com.tcn.cloud.api.api.v0alpha.Process getProcess();
  /**
   * <pre>
   * if complete is true, process will have a completed Process defined.
   * if complete is true, you will be able to send process to lms_api through
   * CreatePipelineElement.
   * </pre>
   *
   * <code>.api.v0alpha.Process process = 7 [json_name = "process"];</code>
   */
  com.tcn.cloud.api.api.v0alpha.ProcessOrBuilder getProcessOrBuilder();
}
