// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface ListAdherenceAgentStateViolationsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.ListAdherenceAgentStateViolationsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The datetime range to get violations across. If left empty, violations will be obtained across all datetimes.
   * Any violation that starts within the given range will be included in the response.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 1 [json_name = "datetimeRange"];</code>
   * @return Whether the datetimeRange field is set.
   */
  boolean hasDatetimeRange();
  /**
   * <pre>
   * The datetime range to get violations across. If left empty, violations will be obtained across all datetimes.
   * Any violation that starts within the given range will be included in the response.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 1 [json_name = "datetimeRange"];</code>
   * @return The datetimeRange.
   */
  com.tcn.cloud.api.api.commons.DatetimeRange getDatetimeRange();
  /**
   * <pre>
   * The datetime range to get violations across. If left empty, violations will be obtained across all datetimes.
   * Any violation that starts within the given range will be included in the response.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 1 [json_name = "datetimeRange"];</code>
   */
  com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDatetimeRangeOrBuilder();

  /**
   * <pre>
   * IDs of the agents to get violations for.
   * If left empty, violations will be returned for all agents.
   * </pre>
   *
   * <code>repeated int64 wfm_agent_sids = 2 [json_name = "wfmAgentSids"];</code>
   * @return A list containing the wfmAgentSids.
   */
  java.util.List<java.lang.Long> getWfmAgentSidsList();
  /**
   * <pre>
   * IDs of the agents to get violations for.
   * If left empty, violations will be returned for all agents.
   * </pre>
   *
   * <code>repeated int64 wfm_agent_sids = 2 [json_name = "wfmAgentSids"];</code>
   * @return The count of wfmAgentSids.
   */
  int getWfmAgentSidsCount();
  /**
   * <pre>
   * IDs of the agents to get violations for.
   * If left empty, violations will be returned for all agents.
   * </pre>
   *
   * <code>repeated int64 wfm_agent_sids = 2 [json_name = "wfmAgentSids"];</code>
   * @param index The index of the element to return.
   * @return The wfmAgentSids at the given index.
   */
  long getWfmAgentSids(int index);

  /**
   * <pre>
   * If set to True, resolved violations will be included in the response.
   * Otherwise, only unresolved violations will be included.
   * </pre>
   *
   * <code>bool include_resolved = 3 [json_name = "includeResolved"];</code>
   * @return The includeResolved.
   */
  boolean getIncludeResolved();
}
