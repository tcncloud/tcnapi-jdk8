// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface FieldMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.FieldMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string time_format = 1 [json_name = "timeFormat"];</code>
   * @return The timeFormat.
   */
  java.lang.String getTimeFormat();
  /**
   * <code>string time_format = 1 [json_name = "timeFormat"];</code>
   * @return The bytes for timeFormat.
   */
  com.google.protobuf.ByteString
      getTimeFormatBytes();

  /**
   * <code>.api.commons.DateTimePrecision precision = 2 [json_name = "precision"];</code>
   * @return The enum numeric value on the wire for precision.
   */
  int getPrecisionValue();
  /**
   * <code>.api.commons.DateTimePrecision precision = 2 [json_name = "precision"];</code>
   * @return The precision.
   */
  com.tcn.cloud.api.api.commons.DateTimePrecision getPrecision();

  /**
   * <pre>
   * 3-10 are Parsing Options
   * Remove any characters that are in this string
   * `remove_characters` will override leave_characters
   * </pre>
   *
   * <code>string remove_characters = 3 [json_name = "removeCharacters"];</code>
   * @return The removeCharacters.
   */
  java.lang.String getRemoveCharacters();
  /**
   * <pre>
   * 3-10 are Parsing Options
   * Remove any characters that are in this string
   * `remove_characters` will override leave_characters
   * </pre>
   *
   * <code>string remove_characters = 3 [json_name = "removeCharacters"];</code>
   * @return The bytes for removeCharacters.
   */
  com.google.protobuf.ByteString
      getRemoveCharactersBytes();

  /**
   * <pre>
   * If the parsed value is empty
   * it will be replaced with this value
   * </pre>
   *
   * <code>string replace_empty = 4 [json_name = "replaceEmpty"];</code>
   * @return The replaceEmpty.
   */
  java.lang.String getReplaceEmpty();
  /**
   * <pre>
   * If the parsed value is empty
   * it will be replaced with this value
   * </pre>
   *
   * <code>string replace_empty = 4 [json_name = "replaceEmpty"];</code>
   * @return The bytes for replaceEmpty.
   */
  com.google.protobuf.ByteString
      getReplaceEmptyBytes();

  /**
   * <pre>
   * If an error is encountered with parsing
   * then the field will be replaced with this value
   * </pre>
   *
   * <code>string replace_error = 5 [json_name = "replaceError"];</code>
   * @return The replaceError.
   */
  java.lang.String getReplaceError();
  /**
   * <pre>
   * If an error is encountered with parsing
   * then the field will be replaced with this value
   * </pre>
   *
   * <code>string replace_error = 5 [json_name = "replaceError"];</code>
   * @return The bytes for replaceError.
   */
  com.google.protobuf.ByteString
      getReplaceErrorBytes();

  /**
   * <pre>
   * Remove any letters (a-zA-Z) from the field
   * </pre>
   *
   * <code>bool remove_letters = 6 [json_name = "removeLetters"];</code>
   * @return The removeLetters.
   */
  boolean getRemoveLetters();

  /**
   * <pre>
   * Remove any numbers (digits 0-9) from the field
   * </pre>
   *
   * <code>bool remove_numbers = 7 [json_name = "removeNumbers"];</code>
   * @return The removeNumbers.
   */
  boolean getRemoveNumbers();

  /**
   * <pre>
   * Removes any symbols or punctuation from the field
   * </pre>
   *
   * <code>bool remove_symbols = 8 [json_name = "removeSymbols"];</code>
   * @return The removeSymbols.
   */
  boolean getRemoveSymbols();

  /**
   * <pre>
   * Any characters in this string will not be remove
   * can be overridden by remove_characters
   * </pre>
   *
   * <code>string leave_characters = 9 [json_name = "leaveCharacters"];</code>
   * @return The leaveCharacters.
   */
  java.lang.String getLeaveCharacters();
  /**
   * <pre>
   * Any characters in this string will not be remove
   * can be overridden by remove_characters
   * </pre>
   *
   * <code>string leave_characters = 9 [json_name = "leaveCharacters"];</code>
   * @return The bytes for leaveCharacters.
   */
  com.google.protobuf.ByteString
      getLeaveCharactersBytes();

  /**
   * <pre>
   * Remove any matches of this entire string
   * </pre>
   *
   * <code>string remove_string = 10 [json_name = "removeString"];</code>
   * @return The removeString.
   */
  java.lang.String getRemoveString();
  /**
   * <pre>
   * Remove any matches of this entire string
   * </pre>
   *
   * <code>string remove_string = 10 [json_name = "removeString"];</code>
   * @return The bytes for removeString.
   */
  com.google.protobuf.ByteString
      getRemoveStringBytes();

  /**
   * <pre>
   * 'json_dot_path' holds the json path that will fetch the  value for this field by walking path
   * over a json object via:
   * https://github.com/tidwall/gjson
   * ex: dot_path = a.b.0.firstName
   * Values must resolve to one thing, not a range of things. If a range is retrieved, the first value is taken
   * the rest are ignored.
   * If string is empty, we just use the field name for the path
   * </pre>
   *
   * <code>string json_dot_path = 11 [json_name = "jsonDotPath"];</code>
   * @return The jsonDotPath.
   */
  java.lang.String getJsonDotPath();
  /**
   * <pre>
   * 'json_dot_path' holds the json path that will fetch the  value for this field by walking path
   * over a json object via:
   * https://github.com/tidwall/gjson
   * ex: dot_path = a.b.0.firstName
   * Values must resolve to one thing, not a range of things. If a range is retrieved, the first value is taken
   * the rest are ignored.
   * If string is empty, we just use the field name for the path
   * </pre>
   *
   * <code>string json_dot_path = 11 [json_name = "jsonDotPath"];</code>
   * @return The bytes for jsonDotPath.
   */
  com.google.protobuf.ByteString
      getJsonDotPathBytes();

  /**
   * <pre>
   * If true value retrieved from json *must* match the field definition, or error.
   * If true, the value if a string, will be 'parsed' into the correct type.
   * If false, the value will be used as is, meaning time_strings, number_strings and the like will remain as strings.
   * </pre>
   *
   * <code>bool json_force_type_match = 12 [json_name = "jsonForceTypeMatch"];</code>
   * @return The jsonForceTypeMatch.
   */
  boolean getJsonForceTypeMatch();

  /**
   * <pre>
   * for fixed width files indicates the starting position of the data.
   * if it is -1, starting position is one character after the previous fields starting position + length.
   * if this is the first field and it is -1, starting position is 0
   * </pre>
   *
   * <code>int32 starting_position = 13 [json_name = "startingPosition"];</code>
   * @return The startingPosition.
   */
  int getStartingPosition();

  /**
   * <pre>
   * for fixed width files indicates how many characters to the right of starting position we will read.
   * this field is required to be greater than 0.
   * </pre>
   *
   * <code>int32 field_length = 14 [json_name = "fieldLength"];</code>
   * @return The fieldLength.
   */
  int getFieldLength();
}
