// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/learn.proto

package com.tcn.cloud.api.api.v0alpha;

public interface SearchContentReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.SearchContentReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * search for the specific content in markdown contents
   * </pre>
   *
   * <code>string search_content = 1 [json_name = "searchContent"];</code>
   * @return The searchContent.
   */
  java.lang.String getSearchContent();
  /**
   * <pre>
   * search for the specific content in markdown contents
   * </pre>
   *
   * <code>string search_content = 1 [json_name = "searchContent"];</code>
   * @return The bytes for searchContent.
   */
  com.google.protobuf.ByteString
      getSearchContentBytes();

  /**
   * <pre>
   * locale used for the markdown contents
   * </pre>
   *
   * <code>string locale = 2 [json_name = "locale"];</code>
   * @return The locale.
   */
  java.lang.String getLocale();
  /**
   * <pre>
   * locale used for the markdown contents
   * </pre>
   *
   * <code>string locale = 2 [json_name = "locale"];</code>
   * @return The bytes for locale.
   */
  com.google.protobuf.ByteString
      getLocaleBytes();

  /**
   * <pre>
   * field mask to filter apps that are accessible to be searched
   * </pre>
   *
   * <code>.google.protobuf.FieldMask field_mask = 5 [json_name = "fieldMask"];</code>
   * @return Whether the fieldMask field is set.
   */
  boolean hasFieldMask();
  /**
   * <pre>
   * field mask to filter apps that are accessible to be searched
   * </pre>
   *
   * <code>.google.protobuf.FieldMask field_mask = 5 [json_name = "fieldMask"];</code>
   * @return The fieldMask.
   */
  com.google.protobuf.FieldMask getFieldMask();
  /**
   * <pre>
   * field mask to filter apps that are accessible to be searched
   * </pre>
   *
   * <code>.google.protobuf.FieldMask field_mask = 5 [json_name = "fieldMask"];</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getFieldMaskOrBuilder();
}
