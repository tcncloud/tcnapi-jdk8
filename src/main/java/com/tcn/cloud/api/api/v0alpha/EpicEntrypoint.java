// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

/**
 * <pre>
 *EHR EPIC
 * </pre>
 *
 * Protobuf type {@code api.v0alpha.EpicEntrypoint}
 */
public final class EpicEntrypoint extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v0alpha.EpicEntrypoint)
    EpicEntrypointOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EpicEntrypoint.newBuilder() to construct.
  private EpicEntrypoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EpicEntrypoint() {
    cron_ = "";
    entityTypes_ = java.util.Collections.emptyList();
    groupBaseUrl_ = "";
    groupFhirId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EpicEntrypoint();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_EpicEntrypoint_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_EpicEntrypoint_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.class, com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.Builder.class);
  }

  private int bitField0_;
  public static final int CRON_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cron_ = "";
  /**
   * <pre>
   * how often this event needs to run.
   * this cron string will be restricted differently depending
   * on the specific operation being run. For example, Epic
   * only allows calls once per 24 hours.
   * </pre>
   *
   * <code>string cron = 2 [json_name = "cron"];</code>
   * @return The cron.
   */
  @java.lang.Override
  public java.lang.String getCron() {
    java.lang.Object ref = cron_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cron_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * how often this event needs to run.
   * this cron string will be restricted differently depending
   * on the specific operation being run. For example, Epic
   * only allows calls once per 24 hours.
   * </pre>
   *
   * <code>string cron = 2 [json_name = "cron"];</code>
   * @return The bytes for cron.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCronBytes() {
    java.lang.Object ref = cron_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cron_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_WAIT_TIME_FIELD_NUMBER = 3;
  private double maxWaitTime_ = 0D;
  /**
   * <pre>
   * how long in minutes we will wait with the entrypoint
   * in the CHECK state. 0 is interpreted as wait indefinitely.
   * </pre>
   *
   * <code>double max_wait_time = 3 [json_name = "maxWaitTime"];</code>
   * @return The maxWaitTime.
   */
  @java.lang.Override
  public double getMaxWaitTime() {
    return maxWaitTime_;
  }

  public static final int ENTITY_TYPES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> entityTypes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.tcn.cloud.api.api.v0alpha.EpicEntityType> entityTypes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.tcn.cloud.api.api.v0alpha.EpicEntityType>() {
            public com.tcn.cloud.api.api.v0alpha.EpicEntityType convert(java.lang.Integer from) {
              com.tcn.cloud.api.api.v0alpha.EpicEntityType result = com.tcn.cloud.api.api.v0alpha.EpicEntityType.forNumber(from);
              return result == null ? com.tcn.cloud.api.api.v0alpha.EpicEntityType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * the types of entities we want retrieved
   * </pre>
   *
   * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
   * @return A list containing the entityTypes.
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.api.v0alpha.EpicEntityType> getEntityTypesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.tcn.cloud.api.api.v0alpha.EpicEntityType>(entityTypes_, entityTypes_converter_);
  }
  /**
   * <pre>
   * the types of entities we want retrieved
   * </pre>
   *
   * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
   * @return The count of entityTypes.
   */
  @java.lang.Override
  public int getEntityTypesCount() {
    return entityTypes_.size();
  }
  /**
   * <pre>
   * the types of entities we want retrieved
   * </pre>
   *
   * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
   * @param index The index of the element to return.
   * @return The entityTypes at the given index.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.EpicEntityType getEntityTypes(int index) {
    return entityTypes_converter_.convert(entityTypes_.get(index));
  }
  /**
   * <pre>
   * the types of entities we want retrieved
   * </pre>
   *
   * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
   * @return A list containing the enum numeric values on the wire for entityTypes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getEntityTypesValueList() {
    return entityTypes_;
  }
  /**
   * <pre>
   * the types of entities we want retrieved
   * </pre>
   *
   * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of entityTypes at the given index.
   */
  @java.lang.Override
  public int getEntityTypesValue(int index) {
    return entityTypes_.get(index);
  }
  private int entityTypesMemoizedSerializedSize;

  public static final int GROUP_BASE_URL_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupBaseUrl_ = "";
  /**
   * <pre>
   * the base url that points to the group of entites we are querying.
   * Each group can be contacted once every 24 hours max.
   * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
   * </pre>
   *
   * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
   * @return The groupBaseUrl.
   */
  @java.lang.Override
  public java.lang.String getGroupBaseUrl() {
    java.lang.Object ref = groupBaseUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupBaseUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the base url that points to the group of entites we are querying.
   * Each group can be contacted once every 24 hours max.
   * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
   * </pre>
   *
   * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
   * @return The bytes for groupBaseUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupBaseUrlBytes() {
    java.lang.Object ref = groupBaseUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupBaseUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_FHIR_ID_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object groupFhirId_ = "";
  /**
   * <pre>
   * the id for the group we are matching.
   * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
   * </pre>
   *
   * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
   * @return The groupFhirId.
   */
  @java.lang.Override
  public java.lang.String getGroupFhirId() {
    java.lang.Object ref = groupFhirId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      groupFhirId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the id for the group we are matching.
   * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
   * </pre>
   *
   * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
   * @return The bytes for groupFhirId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupFhirIdBytes() {
    java.lang.Object ref = groupFhirId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      groupFhirId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RUNTIME_VALUES_FIELD_NUMBER = 7;
  private com.tcn.cloud.api.api.v0alpha.RuntimeValues runtimeValues_;
  /**
   * <pre>
   * values during event processing.
   * Not visible to user.
   * </pre>
   *
   * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
   * @return Whether the runtimeValues field is set.
   */
  @java.lang.Override
  public boolean hasRuntimeValues() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * values during event processing.
   * Not visible to user.
   * </pre>
   *
   * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
   * @return The runtimeValues.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.RuntimeValues getRuntimeValues() {
    return runtimeValues_ == null ? com.tcn.cloud.api.api.v0alpha.RuntimeValues.getDefaultInstance() : runtimeValues_;
  }
  /**
   * <pre>
   * values during event processing.
   * Not visible to user.
   * </pre>
   *
   * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.RuntimeValuesOrBuilder getRuntimeValuesOrBuilder() {
    return runtimeValues_ == null ? com.tcn.cloud.api.api.v0alpha.RuntimeValues.getDefaultInstance() : runtimeValues_;
  }

  public static final int FLUSH_PAGE_COUNT_FIELD_NUMBER = 8;
  private long flushPageCount_ = 0L;
  /**
   * <pre>
   * how many pages we should save before aggregating the data and sending downstream
   * default is 100. Max is 10000.
   * If a termination state hasn't been reached, the event will be re-queued and continue
   * where it left off.
   * </pre>
   *
   * <code>int64 flush_page_count = 8 [json_name = "flushPageCount"];</code>
   * @return The flushPageCount.
   */
  @java.lang.Override
  public long getFlushPageCount() {
    return flushPageCount_;
  }

  public static final int FLUSH_MINUTE_COUNT_FIELD_NUMBER = 9;
  private long flushMinuteCount_ = 0L;
  /**
   * <pre>
   * how much total elapsed time (in minutes) we want to wait before flushing records.
   * if total time spent aggregating the data goes over this many minutes, we will flush
   * the current records downstream.
   * default is 20. Max is 120. Min is 1.
   * If a termination state hasn't been reached, the event will be re-queued and continue
   * where it left off.
   * </pre>
   *
   * <code>int64 flush_minute_count = 9 [json_name = "flushMinuteCount"];</code>
   * @return The flushMinuteCount.
   */
  @java.lang.Override
  public long getFlushMinuteCount() {
    return flushMinuteCount_;
  }

  public static final int FLUSH_DURING_CHECK_FIELD_NUMBER = 10;
  private boolean flushDuringCheck_ = false;
  /**
   * <pre>
   * if true, we will switch to processing mode when we have enough records to flush
   * even if we haven't downloaded all the pages yet.
   * after the current records are flushed, we switch back to downloading the remaining records.
   * If false (default), we download all the pages before we start processing any records.
   * </pre>
   *
   * <code>bool flush_during_check = 10 [json_name = "flushDuringCheck"];</code>
   * @return The flushDuringCheck.
   */
  @java.lang.Override
  public boolean getFlushDuringCheck() {
    return flushDuringCheck_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cron_);
    }
    if (java.lang.Double.doubleToRawLongBits(maxWaitTime_) != 0) {
      output.writeDouble(3, maxWaitTime_);
    }
    if (getEntityTypesList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(entityTypesMemoizedSerializedSize);
    }
    for (int i = 0; i < entityTypes_.size(); i++) {
      output.writeEnumNoTag(entityTypes_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupBaseUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, groupBaseUrl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupFhirId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, groupFhirId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(7, getRuntimeValues());
    }
    if (flushPageCount_ != 0L) {
      output.writeInt64(8, flushPageCount_);
    }
    if (flushMinuteCount_ != 0L) {
      output.writeInt64(9, flushMinuteCount_);
    }
    if (flushDuringCheck_ != false) {
      output.writeBool(10, flushDuringCheck_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cron_);
    }
    if (java.lang.Double.doubleToRawLongBits(maxWaitTime_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, maxWaitTime_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < entityTypes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(entityTypes_.get(i));
      }
      size += dataSize;
      if (!getEntityTypesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }entityTypesMemoizedSerializedSize = dataSize;
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupBaseUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, groupBaseUrl_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(groupFhirId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, groupFhirId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getRuntimeValues());
    }
    if (flushPageCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, flushPageCount_);
    }
    if (flushMinuteCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, flushMinuteCount_);
    }
    if (flushDuringCheck_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, flushDuringCheck_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v0alpha.EpicEntrypoint)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v0alpha.EpicEntrypoint other = (com.tcn.cloud.api.api.v0alpha.EpicEntrypoint) obj;

    if (!getCron()
        .equals(other.getCron())) return false;
    if (java.lang.Double.doubleToLongBits(getMaxWaitTime())
        != java.lang.Double.doubleToLongBits(
            other.getMaxWaitTime())) return false;
    if (!entityTypes_.equals(other.entityTypes_)) return false;
    if (!getGroupBaseUrl()
        .equals(other.getGroupBaseUrl())) return false;
    if (!getGroupFhirId()
        .equals(other.getGroupFhirId())) return false;
    if (hasRuntimeValues() != other.hasRuntimeValues()) return false;
    if (hasRuntimeValues()) {
      if (!getRuntimeValues()
          .equals(other.getRuntimeValues())) return false;
    }
    if (getFlushPageCount()
        != other.getFlushPageCount()) return false;
    if (getFlushMinuteCount()
        != other.getFlushMinuteCount()) return false;
    if (getFlushDuringCheck()
        != other.getFlushDuringCheck()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CRON_FIELD_NUMBER;
    hash = (53 * hash) + getCron().hashCode();
    hash = (37 * hash) + MAX_WAIT_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMaxWaitTime()));
    if (getEntityTypesCount() > 0) {
      hash = (37 * hash) + ENTITY_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + entityTypes_.hashCode();
    }
    hash = (37 * hash) + GROUP_BASE_URL_FIELD_NUMBER;
    hash = (53 * hash) + getGroupBaseUrl().hashCode();
    hash = (37 * hash) + GROUP_FHIR_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGroupFhirId().hashCode();
    if (hasRuntimeValues()) {
      hash = (37 * hash) + RUNTIME_VALUES_FIELD_NUMBER;
      hash = (53 * hash) + getRuntimeValues().hashCode();
    }
    hash = (37 * hash) + FLUSH_PAGE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFlushPageCount());
    hash = (37 * hash) + FLUSH_MINUTE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFlushMinuteCount());
    hash = (37 * hash) + FLUSH_DURING_CHECK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFlushDuringCheck());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v0alpha.EpicEntrypoint prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *EHR EPIC
   * </pre>
   *
   * Protobuf type {@code api.v0alpha.EpicEntrypoint}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v0alpha.EpicEntrypoint)
      com.tcn.cloud.api.api.v0alpha.EpicEntrypointOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_EpicEntrypoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_EpicEntrypoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.class, com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRuntimeValuesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      cron_ = "";
      maxWaitTime_ = 0D;
      entityTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      groupBaseUrl_ = "";
      groupFhirId_ = "";
      runtimeValues_ = null;
      if (runtimeValuesBuilder_ != null) {
        runtimeValuesBuilder_.dispose();
        runtimeValuesBuilder_ = null;
      }
      flushPageCount_ = 0L;
      flushMinuteCount_ = 0L;
      flushDuringCheck_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_EpicEntrypoint_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.EpicEntrypoint getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.EpicEntrypoint build() {
      com.tcn.cloud.api.api.v0alpha.EpicEntrypoint result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.EpicEntrypoint buildPartial() {
      com.tcn.cloud.api.api.v0alpha.EpicEntrypoint result = new com.tcn.cloud.api.api.v0alpha.EpicEntrypoint(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.tcn.cloud.api.api.v0alpha.EpicEntrypoint result) {
      if (((bitField0_ & 0x00000004) != 0)) {
        entityTypes_ = java.util.Collections.unmodifiableList(entityTypes_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.entityTypes_ = entityTypes_;
    }

    private void buildPartial0(com.tcn.cloud.api.api.v0alpha.EpicEntrypoint result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.cron_ = cron_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxWaitTime_ = maxWaitTime_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.groupBaseUrl_ = groupBaseUrl_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.groupFhirId_ = groupFhirId_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.runtimeValues_ = runtimeValuesBuilder_ == null
            ? runtimeValues_
            : runtimeValuesBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.flushPageCount_ = flushPageCount_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.flushMinuteCount_ = flushMinuteCount_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.flushDuringCheck_ = flushDuringCheck_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v0alpha.EpicEntrypoint) {
        return mergeFrom((com.tcn.cloud.api.api.v0alpha.EpicEntrypoint)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v0alpha.EpicEntrypoint other) {
      if (other == com.tcn.cloud.api.api.v0alpha.EpicEntrypoint.getDefaultInstance()) return this;
      if (!other.getCron().isEmpty()) {
        cron_ = other.cron_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getMaxWaitTime() != 0D) {
        setMaxWaitTime(other.getMaxWaitTime());
      }
      if (!other.entityTypes_.isEmpty()) {
        if (entityTypes_.isEmpty()) {
          entityTypes_ = other.entityTypes_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureEntityTypesIsMutable();
          entityTypes_.addAll(other.entityTypes_);
        }
        onChanged();
      }
      if (!other.getGroupBaseUrl().isEmpty()) {
        groupBaseUrl_ = other.groupBaseUrl_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getGroupFhirId().isEmpty()) {
        groupFhirId_ = other.groupFhirId_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasRuntimeValues()) {
        mergeRuntimeValues(other.getRuntimeValues());
      }
      if (other.getFlushPageCount() != 0L) {
        setFlushPageCount(other.getFlushPageCount());
      }
      if (other.getFlushMinuteCount() != 0L) {
        setFlushMinuteCount(other.getFlushMinuteCount());
      }
      if (other.getFlushDuringCheck() != false) {
        setFlushDuringCheck(other.getFlushDuringCheck());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              cron_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 18
            case 25: {
              maxWaitTime_ = input.readDouble();
              bitField0_ |= 0x00000002;
              break;
            } // case 25
            case 32: {
              int tmpRaw = input.readEnum();
              ensureEntityTypesIsMutable();
              entityTypes_.add(tmpRaw);
              break;
            } // case 32
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureEntityTypesIsMutable();
                entityTypes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 34
            case 42: {
              groupBaseUrl_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 42
            case 50: {
              groupFhirId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getRuntimeValuesFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 58
            case 64: {
              flushPageCount_ = input.readInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 64
            case 72: {
              flushMinuteCount_ = input.readInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 72
            case 80: {
              flushDuringCheck_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object cron_ = "";
    /**
     * <pre>
     * how often this event needs to run.
     * this cron string will be restricted differently depending
     * on the specific operation being run. For example, Epic
     * only allows calls once per 24 hours.
     * </pre>
     *
     * <code>string cron = 2 [json_name = "cron"];</code>
     * @return The cron.
     */
    public java.lang.String getCron() {
      java.lang.Object ref = cron_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cron_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * how often this event needs to run.
     * this cron string will be restricted differently depending
     * on the specific operation being run. For example, Epic
     * only allows calls once per 24 hours.
     * </pre>
     *
     * <code>string cron = 2 [json_name = "cron"];</code>
     * @return The bytes for cron.
     */
    public com.google.protobuf.ByteString
        getCronBytes() {
      java.lang.Object ref = cron_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cron_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * how often this event needs to run.
     * this cron string will be restricted differently depending
     * on the specific operation being run. For example, Epic
     * only allows calls once per 24 hours.
     * </pre>
     *
     * <code>string cron = 2 [json_name = "cron"];</code>
     * @param value The cron to set.
     * @return This builder for chaining.
     */
    public Builder setCron(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cron_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * how often this event needs to run.
     * this cron string will be restricted differently depending
     * on the specific operation being run. For example, Epic
     * only allows calls once per 24 hours.
     * </pre>
     *
     * <code>string cron = 2 [json_name = "cron"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCron() {
      cron_ = getDefaultInstance().getCron();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * how often this event needs to run.
     * this cron string will be restricted differently depending
     * on the specific operation being run. For example, Epic
     * only allows calls once per 24 hours.
     * </pre>
     *
     * <code>string cron = 2 [json_name = "cron"];</code>
     * @param value The bytes for cron to set.
     * @return This builder for chaining.
     */
    public Builder setCronBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cron_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private double maxWaitTime_ ;
    /**
     * <pre>
     * how long in minutes we will wait with the entrypoint
     * in the CHECK state. 0 is interpreted as wait indefinitely.
     * </pre>
     *
     * <code>double max_wait_time = 3 [json_name = "maxWaitTime"];</code>
     * @return The maxWaitTime.
     */
    @java.lang.Override
    public double getMaxWaitTime() {
      return maxWaitTime_;
    }
    /**
     * <pre>
     * how long in minutes we will wait with the entrypoint
     * in the CHECK state. 0 is interpreted as wait indefinitely.
     * </pre>
     *
     * <code>double max_wait_time = 3 [json_name = "maxWaitTime"];</code>
     * @param value The maxWaitTime to set.
     * @return This builder for chaining.
     */
    public Builder setMaxWaitTime(double value) {

      maxWaitTime_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * how long in minutes we will wait with the entrypoint
     * in the CHECK state. 0 is interpreted as wait indefinitely.
     * </pre>
     *
     * <code>double max_wait_time = 3 [json_name = "maxWaitTime"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxWaitTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxWaitTime_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> entityTypes_ =
      java.util.Collections.emptyList();
    private void ensureEntityTypesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        entityTypes_ = new java.util.ArrayList<java.lang.Integer>(entityTypes_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @return A list containing the entityTypes.
     */
    public java.util.List<com.tcn.cloud.api.api.v0alpha.EpicEntityType> getEntityTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.tcn.cloud.api.api.v0alpha.EpicEntityType>(entityTypes_, entityTypes_converter_);
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @return The count of entityTypes.
     */
    public int getEntityTypesCount() {
      return entityTypes_.size();
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param index The index of the element to return.
     * @return The entityTypes at the given index.
     */
    public com.tcn.cloud.api.api.v0alpha.EpicEntityType getEntityTypes(int index) {
      return entityTypes_converter_.convert(entityTypes_.get(index));
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param index The index to set the value at.
     * @param value The entityTypes to set.
     * @return This builder for chaining.
     */
    public Builder setEntityTypes(
        int index, com.tcn.cloud.api.api.v0alpha.EpicEntityType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEntityTypesIsMutable();
      entityTypes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param value The entityTypes to add.
     * @return This builder for chaining.
     */
    public Builder addEntityTypes(com.tcn.cloud.api.api.v0alpha.EpicEntityType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEntityTypesIsMutable();
      entityTypes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param values The entityTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllEntityTypes(
        java.lang.Iterable<? extends com.tcn.cloud.api.api.v0alpha.EpicEntityType> values) {
      ensureEntityTypesIsMutable();
      for (com.tcn.cloud.api.api.v0alpha.EpicEntityType value : values) {
        entityTypes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntityTypes() {
      entityTypes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @return A list containing the enum numeric values on the wire for entityTypes.
     */
    public java.util.List<java.lang.Integer>
    getEntityTypesValueList() {
      return java.util.Collections.unmodifiableList(entityTypes_);
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of entityTypes at the given index.
     */
    public int getEntityTypesValue(int index) {
      return entityTypes_.get(index);
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for entityTypes to set.
     * @return This builder for chaining.
     */
    public Builder setEntityTypesValue(
        int index, int value) {
      ensureEntityTypesIsMutable();
      entityTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param value The enum numeric value on the wire for entityTypes to add.
     * @return This builder for chaining.
     */
    public Builder addEntityTypesValue(int value) {
      ensureEntityTypesIsMutable();
      entityTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the types of entities we want retrieved
     * </pre>
     *
     * <code>repeated .api.v0alpha.EpicEntityType entity_types = 4 [json_name = "entityTypes"];</code>
     * @param values The enum numeric values on the wire for entityTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllEntityTypesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureEntityTypesIsMutable();
      for (int value : values) {
        entityTypes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.lang.Object groupBaseUrl_ = "";
    /**
     * <pre>
     * the base url that points to the group of entites we are querying.
     * Each group can be contacted once every 24 hours max.
     * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
     * </pre>
     *
     * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
     * @return The groupBaseUrl.
     */
    public java.lang.String getGroupBaseUrl() {
      java.lang.Object ref = groupBaseUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupBaseUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the base url that points to the group of entites we are querying.
     * Each group can be contacted once every 24 hours max.
     * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
     * </pre>
     *
     * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
     * @return The bytes for groupBaseUrl.
     */
    public com.google.protobuf.ByteString
        getGroupBaseUrlBytes() {
      java.lang.Object ref = groupBaseUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupBaseUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the base url that points to the group of entites we are querying.
     * Each group can be contacted once every 24 hours max.
     * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
     * </pre>
     *
     * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
     * @param value The groupBaseUrl to set.
     * @return This builder for chaining.
     */
    public Builder setGroupBaseUrl(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupBaseUrl_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the base url that points to the group of entites we are querying.
     * Each group can be contacted once every 24 hours max.
     * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
     * </pre>
     *
     * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupBaseUrl() {
      groupBaseUrl_ = getDefaultInstance().getGroupBaseUrl();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the base url that points to the group of entites we are querying.
     * Each group can be contacted once every 24 hours max.
     * Example: https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4
     * </pre>
     *
     * <code>string group_base_url = 5 [json_name = "groupBaseUrl"];</code>
     * @param value The bytes for groupBaseUrl to set.
     * @return This builder for chaining.
     */
    public Builder setGroupBaseUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupBaseUrl_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object groupFhirId_ = "";
    /**
     * <pre>
     * the id for the group we are matching.
     * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
     * </pre>
     *
     * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
     * @return The groupFhirId.
     */
    public java.lang.String getGroupFhirId() {
      java.lang.Object ref = groupFhirId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        groupFhirId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the id for the group we are matching.
     * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
     * </pre>
     *
     * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
     * @return The bytes for groupFhirId.
     */
    public com.google.protobuf.ByteString
        getGroupFhirIdBytes() {
      java.lang.Object ref = groupFhirId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupFhirId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the id for the group we are matching.
     * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
     * </pre>
     *
     * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
     * @param value The groupFhirId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupFhirId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      groupFhirId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the id for the group we are matching.
     * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
     * </pre>
     *
     * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupFhirId() {
      groupFhirId_ = getDefaultInstance().getGroupFhirId();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the id for the group we are matching.
     * Example: eIscQb2HmqkT.aPxBKDR1mIj3721CpVk1suC7rlu3yX83
     * </pre>
     *
     * <code>string group_fhir_id = 6 [json_name = "groupFhirId"];</code>
     * @param value The bytes for groupFhirId to set.
     * @return This builder for chaining.
     */
    public Builder setGroupFhirIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      groupFhirId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private com.tcn.cloud.api.api.v0alpha.RuntimeValues runtimeValues_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.v0alpha.RuntimeValues, com.tcn.cloud.api.api.v0alpha.RuntimeValues.Builder, com.tcn.cloud.api.api.v0alpha.RuntimeValuesOrBuilder> runtimeValuesBuilder_;
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     * @return Whether the runtimeValues field is set.
     */
    public boolean hasRuntimeValues() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     * @return The runtimeValues.
     */
    public com.tcn.cloud.api.api.v0alpha.RuntimeValues getRuntimeValues() {
      if (runtimeValuesBuilder_ == null) {
        return runtimeValues_ == null ? com.tcn.cloud.api.api.v0alpha.RuntimeValues.getDefaultInstance() : runtimeValues_;
      } else {
        return runtimeValuesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public Builder setRuntimeValues(com.tcn.cloud.api.api.v0alpha.RuntimeValues value) {
      if (runtimeValuesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        runtimeValues_ = value;
      } else {
        runtimeValuesBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public Builder setRuntimeValues(
        com.tcn.cloud.api.api.v0alpha.RuntimeValues.Builder builderForValue) {
      if (runtimeValuesBuilder_ == null) {
        runtimeValues_ = builderForValue.build();
      } else {
        runtimeValuesBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public Builder mergeRuntimeValues(com.tcn.cloud.api.api.v0alpha.RuntimeValues value) {
      if (runtimeValuesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          runtimeValues_ != null &&
          runtimeValues_ != com.tcn.cloud.api.api.v0alpha.RuntimeValues.getDefaultInstance()) {
          getRuntimeValuesBuilder().mergeFrom(value);
        } else {
          runtimeValues_ = value;
        }
      } else {
        runtimeValuesBuilder_.mergeFrom(value);
      }
      if (runtimeValues_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public Builder clearRuntimeValues() {
      bitField0_ = (bitField0_ & ~0x00000020);
      runtimeValues_ = null;
      if (runtimeValuesBuilder_ != null) {
        runtimeValuesBuilder_.dispose();
        runtimeValuesBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public com.tcn.cloud.api.api.v0alpha.RuntimeValues.Builder getRuntimeValuesBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getRuntimeValuesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    public com.tcn.cloud.api.api.v0alpha.RuntimeValuesOrBuilder getRuntimeValuesOrBuilder() {
      if (runtimeValuesBuilder_ != null) {
        return runtimeValuesBuilder_.getMessageOrBuilder();
      } else {
        return runtimeValues_ == null ?
            com.tcn.cloud.api.api.v0alpha.RuntimeValues.getDefaultInstance() : runtimeValues_;
      }
    }
    /**
     * <pre>
     * values during event processing.
     * Not visible to user.
     * </pre>
     *
     * <code>.api.v0alpha.RuntimeValues runtime_values = 7 [json_name = "runtimeValues"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.v0alpha.RuntimeValues, com.tcn.cloud.api.api.v0alpha.RuntimeValues.Builder, com.tcn.cloud.api.api.v0alpha.RuntimeValuesOrBuilder> 
        getRuntimeValuesFieldBuilder() {
      if (runtimeValuesBuilder_ == null) {
        runtimeValuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.v0alpha.RuntimeValues, com.tcn.cloud.api.api.v0alpha.RuntimeValues.Builder, com.tcn.cloud.api.api.v0alpha.RuntimeValuesOrBuilder>(
                getRuntimeValues(),
                getParentForChildren(),
                isClean());
        runtimeValues_ = null;
      }
      return runtimeValuesBuilder_;
    }

    private long flushPageCount_ ;
    /**
     * <pre>
     * how many pages we should save before aggregating the data and sending downstream
     * default is 100. Max is 10000.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_page_count = 8 [json_name = "flushPageCount"];</code>
     * @return The flushPageCount.
     */
    @java.lang.Override
    public long getFlushPageCount() {
      return flushPageCount_;
    }
    /**
     * <pre>
     * how many pages we should save before aggregating the data and sending downstream
     * default is 100. Max is 10000.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_page_count = 8 [json_name = "flushPageCount"];</code>
     * @param value The flushPageCount to set.
     * @return This builder for chaining.
     */
    public Builder setFlushPageCount(long value) {

      flushPageCount_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * how many pages we should save before aggregating the data and sending downstream
     * default is 100. Max is 10000.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_page_count = 8 [json_name = "flushPageCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFlushPageCount() {
      bitField0_ = (bitField0_ & ~0x00000040);
      flushPageCount_ = 0L;
      onChanged();
      return this;
    }

    private long flushMinuteCount_ ;
    /**
     * <pre>
     * how much total elapsed time (in minutes) we want to wait before flushing records.
     * if total time spent aggregating the data goes over this many minutes, we will flush
     * the current records downstream.
     * default is 20. Max is 120. Min is 1.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_minute_count = 9 [json_name = "flushMinuteCount"];</code>
     * @return The flushMinuteCount.
     */
    @java.lang.Override
    public long getFlushMinuteCount() {
      return flushMinuteCount_;
    }
    /**
     * <pre>
     * how much total elapsed time (in minutes) we want to wait before flushing records.
     * if total time spent aggregating the data goes over this many minutes, we will flush
     * the current records downstream.
     * default is 20. Max is 120. Min is 1.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_minute_count = 9 [json_name = "flushMinuteCount"];</code>
     * @param value The flushMinuteCount to set.
     * @return This builder for chaining.
     */
    public Builder setFlushMinuteCount(long value) {

      flushMinuteCount_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * how much total elapsed time (in minutes) we want to wait before flushing records.
     * if total time spent aggregating the data goes over this many minutes, we will flush
     * the current records downstream.
     * default is 20. Max is 120. Min is 1.
     * If a termination state hasn't been reached, the event will be re-queued and continue
     * where it left off.
     * </pre>
     *
     * <code>int64 flush_minute_count = 9 [json_name = "flushMinuteCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFlushMinuteCount() {
      bitField0_ = (bitField0_ & ~0x00000080);
      flushMinuteCount_ = 0L;
      onChanged();
      return this;
    }

    private boolean flushDuringCheck_ ;
    /**
     * <pre>
     * if true, we will switch to processing mode when we have enough records to flush
     * even if we haven't downloaded all the pages yet.
     * after the current records are flushed, we switch back to downloading the remaining records.
     * If false (default), we download all the pages before we start processing any records.
     * </pre>
     *
     * <code>bool flush_during_check = 10 [json_name = "flushDuringCheck"];</code>
     * @return The flushDuringCheck.
     */
    @java.lang.Override
    public boolean getFlushDuringCheck() {
      return flushDuringCheck_;
    }
    /**
     * <pre>
     * if true, we will switch to processing mode when we have enough records to flush
     * even if we haven't downloaded all the pages yet.
     * after the current records are flushed, we switch back to downloading the remaining records.
     * If false (default), we download all the pages before we start processing any records.
     * </pre>
     *
     * <code>bool flush_during_check = 10 [json_name = "flushDuringCheck"];</code>
     * @param value The flushDuringCheck to set.
     * @return This builder for chaining.
     */
    public Builder setFlushDuringCheck(boolean value) {

      flushDuringCheck_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if true, we will switch to processing mode when we have enough records to flush
     * even if we haven't downloaded all the pages yet.
     * after the current records are flushed, we switch back to downloading the remaining records.
     * If false (default), we download all the pages before we start processing any records.
     * </pre>
     *
     * <code>bool flush_during_check = 10 [json_name = "flushDuringCheck"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFlushDuringCheck() {
      bitField0_ = (bitField0_ & ~0x00000100);
      flushDuringCheck_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v0alpha.EpicEntrypoint)
  }

  // @@protoc_insertion_point(class_scope:api.v0alpha.EpicEntrypoint)
  private static final com.tcn.cloud.api.api.v0alpha.EpicEntrypoint DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v0alpha.EpicEntrypoint();
  }

  public static com.tcn.cloud.api.api.v0alpha.EpicEntrypoint getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EpicEntrypoint>
      PARSER = new com.google.protobuf.AbstractParser<EpicEntrypoint>() {
    @java.lang.Override
    public EpicEntrypoint parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<EpicEntrypoint> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EpicEntrypoint> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.EpicEntrypoint getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

