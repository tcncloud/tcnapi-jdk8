// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface ResolveAgentLeavePetitionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.ResolveAgentLeavePetitionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID of the agent leave petition to approve or deny.
   * </pre>
   *
   * <code>int64 agent_leave_petition_id = 1 [json_name = "agentLeavePetitionId", jstype = JS_STRING];</code>
   * @return The agentLeavePetitionId.
   */
  long getAgentLeavePetitionId();

  /**
   * <pre>
   * The status to resolve the petition to.
   * </pre>
   *
   * <code>.api.commons.AgentLeavePetitionStatus petition_status = 2 [json_name = "petitionStatus"];</code>
   * @return The enum numeric value on the wire for petitionStatus.
   */
  int getPetitionStatusValue();
  /**
   * <pre>
   * The status to resolve the petition to.
   * </pre>
   *
   * <code>.api.commons.AgentLeavePetitionStatus petition_status = 2 [json_name = "petitionStatus"];</code>
   * @return The petitionStatus.
   */
  com.tcn.cloud.api.api.commons.AgentLeavePetitionStatus getPetitionStatus();

  /**
   * <pre>
   * An optional comment to explain the approval or denial of the leave petition.
   * </pre>
   *
   * <code>string response_comment = 3 [json_name = "responseComment"];</code>
   * @return The responseComment.
   */
  java.lang.String getResponseComment();
  /**
   * <pre>
   * An optional comment to explain the approval or denial of the leave petition.
   * </pre>
   *
   * <code>string response_comment = 3 [json_name = "responseComment"];</code>
   * @return The bytes for responseComment.
   */
  com.google.protobuf.ByteString
      getResponseCommentBytes();

  /**
   * <pre>
   * If true, partial shifts overlapping the requested_datetime_ranges will have the remaining portion of the shift retained
   *    if the remaining portion is at least 30 minutes wide.
   * If false, the entirety of shifts overlapping the requested_datetime_ranges will be deleted or transfered, depending on &#64;replace_with_unassigned_agent.
   * </pre>
   *
   * <code>bool retain_partial_shifts = 4 [json_name = "retainPartialShifts"];</code>
   * @return The retainPartialShifts.
   */
  boolean getRetainPartialShifts();

  /**
   * <pre>
   * If &#64;replace_with_unassigned_agent is true, an unassigned agent sid will be assigned to the shifts instead of deleting them.
   * If &#64;retain_partial_shifts is also true, only the portion of the shift in the requested datetime ranges will be transfered.
   * if &#64;retain_partial_shifts is false, the entirety of any overlapping shifts will be transfered.
   * </pre>
   *
   * <code>bool replace_with_unassigned_agent = 5 [json_name = "replaceWithUnassignedAgent"];</code>
   * @return The replaceWithUnassignedAgent.
   */
  boolean getReplaceWithUnassignedAgent();
}
