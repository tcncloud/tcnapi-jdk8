// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/org.proto

package com.tcn.cloud.api.api.v0alpha;

public interface RecordingPreferencesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.RecordingPreferences)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Controls whether custom file name convention is used
   * </pre>
   *
   * <code>bool convention_enabled = 10 [json_name = "conventionEnabled"];</code>
   * @return The conventionEnabled.
   */
  boolean getConventionEnabled();

  /**
   * <pre>
   * Controls file naming conventions for recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsFileNamingConvention file_name_convention = 11 [json_name = "fileNameConvention"];</code>
   * @return Whether the fileNameConvention field is set.
   */
  boolean hasFileNameConvention();
  /**
   * <pre>
   * Controls file naming conventions for recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsFileNamingConvention file_name_convention = 11 [json_name = "fileNameConvention"];</code>
   * @return The fileNameConvention.
   */
  com.tcn.cloud.api.api.v0alpha.RecordingsFileNamingConvention getFileNameConvention();
  /**
   * <pre>
   * Controls file naming conventions for recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsFileNamingConvention file_name_convention = 11 [json_name = "fileNameConvention"];</code>
   */
  com.tcn.cloud.api.api.v0alpha.RecordingsFileNamingConventionOrBuilder getFileNameConventionOrBuilder();

  /**
   * <pre>
   * Controls whether custom file name convention is used (for *.zip)
   * </pre>
   *
   * <code>bool zip_convention_enabled = 12 [json_name = "zipConventionEnabled"];</code>
   * @return The zipConventionEnabled.
   */
  boolean getZipConventionEnabled();

  /**
   * <pre>
   * Controls file naming conventions for compressed recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsZipFileNamingConvention zip_file_name_convention = 13 [json_name = "zipFileNameConvention"];</code>
   * @return Whether the zipFileNameConvention field is set.
   */
  boolean hasZipFileNameConvention();
  /**
   * <pre>
   * Controls file naming conventions for compressed recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsZipFileNamingConvention zip_file_name_convention = 13 [json_name = "zipFileNameConvention"];</code>
   * @return The zipFileNameConvention.
   */
  com.tcn.cloud.api.api.v0alpha.RecordingsZipFileNamingConvention getZipFileNameConvention();
  /**
   * <pre>
   * Controls file naming conventions for compressed recordings
   * </pre>
   *
   * <code>.api.v0alpha.RecordingsZipFileNamingConvention zip_file_name_convention = 13 [json_name = "zipFileNameConvention"];</code>
   */
  com.tcn.cloud.api.api.v0alpha.RecordingsZipFileNamingConventionOrBuilder getZipFileNameConventionOrBuilder();

  /**
   * <pre>
   * Export audio recordings as either .mp3 or .wav
   * </pre>
   *
   * <code>.api.commons.RecordingFileType export_file_type = 14 [json_name = "exportFileType"];</code>
   * @return The enum numeric value on the wire for exportFileType.
   */
  int getExportFileTypeValue();
  /**
   * <pre>
   * Export audio recordings as either .mp3 or .wav
   * </pre>
   *
   * <code>.api.commons.RecordingFileType export_file_type = 14 [json_name = "exportFileType"];</code>
   * @return The exportFileType.
   */
  com.tcn.cloud.api.api.commons.RecordingFileType getExportFileType();
}
