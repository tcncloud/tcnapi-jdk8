// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/asm.proto

package com.tcn.cloud.api.api.commons;

public interface QueueCallAddOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.QueueCallAdd)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * number dialed when the call was placed.
   * </pre>
   *
   * <code>string phone_number = 1 [json_name = "phoneNumber"];</code>
   * @return The phoneNumber.
   */
  java.lang.String getPhoneNumber();
  /**
   * <pre>
   * number dialed when the call was placed.
   * </pre>
   *
   * <code>string phone_number = 1 [json_name = "phoneNumber"];</code>
   * @return The bytes for phoneNumber.
   */
  com.google.protobuf.ByteString
      getPhoneNumberBytes();

  /**
   * <pre>
   * caller_id used when the call was placed.
   * </pre>
   *
   * <code>string caller_id = 2 [json_name = "callerId"];</code>
   * @return The callerId.
   */
  java.lang.String getCallerId();
  /**
   * <pre>
   * caller_id used when the call was placed.
   * </pre>
   *
   * <code>string caller_id = 2 [json_name = "callerId"];</code>
   * @return The bytes for callerId.
   */
  com.google.protobuf.ByteString
      getCallerIdBytes();

  /**
   * <pre>
   * timestamp indicating when the call started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_date = 3 [json_name = "startDate"];</code>
   * @return Whether the startDate field is set.
   */
  boolean hasStartDate();
  /**
   * <pre>
   * timestamp indicating when the call started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_date = 3 [json_name = "startDate"];</code>
   * @return The startDate.
   */
  com.google.protobuf.Timestamp getStartDate();
  /**
   * <pre>
   * timestamp indicating when the call started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_date = 3 [json_name = "startDate"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getStartDateOrBuilder();

  /**
   * <pre>
   * timestamp indicating when the call was put on hold (only set when call is a hold call).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp hold_date = 4 [json_name = "holdDate"];</code>
   * @return Whether the holdDate field is set.
   */
  boolean hasHoldDate();
  /**
   * <pre>
   * timestamp indicating when the call was put on hold (only set when call is a hold call).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp hold_date = 4 [json_name = "holdDate"];</code>
   * @return The holdDate.
   */
  com.google.protobuf.Timestamp getHoldDate();
  /**
   * <pre>
   * timestamp indicating when the call was put on hold (only set when call is a hold call).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp hold_date = 4 [json_name = "holdDate"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getHoldDateOrBuilder();

  /**
   * <pre>
   * formatted skills that the call requires.
   * </pre>
   *
   * <code>map&lt;string, string&gt; formatted_skills = 5 [json_name = "formattedSkills"];</code>
   */
  int getFormattedSkillsCount();
  /**
   * <pre>
   * formatted skills that the call requires.
   * </pre>
   *
   * <code>map&lt;string, string&gt; formatted_skills = 5 [json_name = "formattedSkills"];</code>
   */
  boolean containsFormattedSkills(
      java.lang.String key);
  /**
   * Use {@link #getFormattedSkillsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getFormattedSkills();
  /**
   * <pre>
   * formatted skills that the call requires.
   * </pre>
   *
   * <code>map&lt;string, string&gt; formatted_skills = 5 [json_name = "formattedSkills"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getFormattedSkillsMap();
  /**
   * <pre>
   * formatted skills that the call requires.
   * </pre>
   *
   * <code>map&lt;string, string&gt; formatted_skills = 5 [json_name = "formattedSkills"];</code>
   */
  /* nullable */
java.lang.String getFormattedSkillsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * formatted skills that the call requires.
   * </pre>
   *
   * <code>map&lt;string, string&gt; formatted_skills = 5 [json_name = "formattedSkills"];</code>
   */
  java.lang.String getFormattedSkillsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * indicates if the call is specific to the agent (multi-hold) or it can be picked up by multiple agents (queued and HQM calls).
   * </pre>
   *
   * <code>bool agent_specific = 6 [json_name = "agentSpecific"];</code>
   * @return The agentSpecific.
   */
  boolean getAgentSpecific();

  /**
   * <pre>
   * queued notification type of the call.
   * </pre>
   *
   * <code>.api.commons.QueuedNotificationType queued_notification_type = 7 [json_name = "queuedNotificationType"];</code>
   * @return The enum numeric value on the wire for queuedNotificationType.
   */
  int getQueuedNotificationTypeValue();
  /**
   * <pre>
   * queued notification type of the call.
   * </pre>
   *
   * <code>.api.commons.QueuedNotificationType queued_notification_type = 7 [json_name = "queuedNotificationType"];</code>
   * @return The queuedNotificationType.
   */
  com.tcn.cloud.api.api.commons.QueuedNotificationType getQueuedNotificationType();

  /**
   * <pre>
   * callersid
   * </pre>
   *
   * <code>.api.commons.CallerSid caller_sid = 8 [json_name = "callerSid"];</code>
   * @return Whether the callerSid field is set.
   */
  boolean hasCallerSid();
  /**
   * <pre>
   * callersid
   * </pre>
   *
   * <code>.api.commons.CallerSid caller_sid = 8 [json_name = "callerSid"];</code>
   * @return The callerSid.
   */
  com.tcn.cloud.api.api.commons.CallerSid getCallerSid();
  /**
   * <pre>
   * callersid
   * </pre>
   *
   * <code>.api.commons.CallerSid caller_sid = 8 [json_name = "callerSid"];</code>
   */
  com.tcn.cloud.api.api.commons.CallerSidOrBuilder getCallerSidOrBuilder();

  /**
   * <pre>
   * skills
   * </pre>
   *
   * <code>map&lt;string, bool&gt; skills = 9 [json_name = "skills"];</code>
   */
  int getSkillsCount();
  /**
   * <pre>
   * skills
   * </pre>
   *
   * <code>map&lt;string, bool&gt; skills = 9 [json_name = "skills"];</code>
   */
  boolean containsSkills(
      java.lang.String key);
  /**
   * Use {@link #getSkillsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Boolean>
  getSkills();
  /**
   * <pre>
   * skills
   * </pre>
   *
   * <code>map&lt;string, bool&gt; skills = 9 [json_name = "skills"];</code>
   */
  java.util.Map<java.lang.String, java.lang.Boolean>
  getSkillsMap();
  /**
   * <pre>
   * skills
   * </pre>
   *
   * <code>map&lt;string, bool&gt; skills = 9 [json_name = "skills"];</code>
   */
  boolean getSkillsOrDefault(
      java.lang.String key,
      boolean defaultValue);
  /**
   * <pre>
   * skills
   * </pre>
   *
   * <code>map&lt;string, bool&gt; skills = 9 [json_name = "skills"];</code>
   */
  boolean getSkillsOrThrow(
      java.lang.String key);
}
