// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

/**
 * <pre>
 * Request message for the CopyScheduleToSchedule RPC
 * </pre>
 *
 * Protobuf type {@code api.v1alpha1.wfm.CopyScheduleToScheduleReq}
 */
public final class CopyScheduleToScheduleReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v1alpha1.wfm.CopyScheduleToScheduleReq)
    CopyScheduleToScheduleReqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CopyScheduleToScheduleReq.newBuilder() to construct.
  private CopyScheduleToScheduleReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CopyScheduleToScheduleReq() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CopyScheduleToScheduleReq();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyScheduleToScheduleReq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyScheduleToScheduleReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.class, com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.Builder.class);
  }

  private int bitField0_;
  public static final int SOURCE_SCHEDULE_SELECTOR_FIELD_NUMBER = 1;
  private com.tcn.cloud.api.api.commons.ScheduleSelector sourceScheduleSelector_;
  /**
   * <pre>
   * The schedule that shifts will be copied from.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
   * @return Whether the sourceScheduleSelector field is set.
   */
  @java.lang.Override
  public boolean hasSourceScheduleSelector() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The schedule that shifts will be copied from.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
   * @return The sourceScheduleSelector.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelector getSourceScheduleSelector() {
    return sourceScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : sourceScheduleSelector_;
  }
  /**
   * <pre>
   * The schedule that shifts will be copied from.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getSourceScheduleSelectorOrBuilder() {
    return sourceScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : sourceScheduleSelector_;
  }

  public static final int DESTINATION_SCHEDULE_SELECTOR_FIELD_NUMBER = 2;
  private com.tcn.cloud.api.api.commons.ScheduleSelector destinationScheduleSelector_;
  /**
   * <pre>
   * The schedule that the shifts will be copied to.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
   * @return Whether the destinationScheduleSelector field is set.
   */
  @java.lang.Override
  public boolean hasDestinationScheduleSelector() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The schedule that the shifts will be copied to.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
   * @return The destinationScheduleSelector.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelector getDestinationScheduleSelector() {
    return destinationScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationScheduleSelector_;
  }
  /**
   * <pre>
   * The schedule that the shifts will be copied to.
   * </pre>
   *
   * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getDestinationScheduleSelectorOrBuilder() {
    return destinationScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationScheduleSelector_;
  }

  public static final int NODE_SELECTOR_FIELD_NUMBER = 3;
  private com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity nodeSelector_;
  /**
   * <pre>
   * The node that the shifts to copy should be associated with.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
   * @return Whether the nodeSelector field is set.
   */
  @java.lang.Override
  public boolean hasNodeSelector() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The node that the shifts to copy should be associated with.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
   * @return The nodeSelector.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity getNodeSelector() {
    return nodeSelector_ == null ? com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.getDefaultInstance() : nodeSelector_;
  }
  /**
   * <pre>
   * The node that the shifts to copy should be associated with.
   * </pre>
   *
   * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder getNodeSelectorOrBuilder() {
    return nodeSelector_ == null ? com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.getDefaultInstance() : nodeSelector_;
  }

  public static final int DATETIME_RANGE_FIELD_NUMBER = 4;
  private com.tcn.cloud.api.api.commons.DatetimeRange datetimeRange_;
  /**
   * <pre>
   * The datetime range over which to get the shift instance sids.
   * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
   * @return Whether the datetimeRange field is set.
   */
  @java.lang.Override
  public boolean hasDatetimeRange() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The datetime range over which to get the shift instance sids.
   * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
   * @return The datetimeRange.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRange getDatetimeRange() {
    return datetimeRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : datetimeRange_;
  }
  /**
   * <pre>
   * The datetime range over which to get the shift instance sids.
   * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDatetimeRangeOrBuilder() {
    return datetimeRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : datetimeRange_;
  }

  public static final int START_DATETIMES_ONLY_FIELD_NUMBER = 5;
  private boolean startDatetimesOnly_ = false;
  /**
   * <pre>
   * Set to true to copy shifts that start within the range being copied, otherwise any shift that overlaps the range will be copied.
   * </pre>
   *
   * <code>bool start_datetimes_only = 5 [json_name = "startDatetimesOnly"];</code>
   * @return The startDatetimesOnly.
   */
  @java.lang.Override
  public boolean getStartDatetimesOnly() {
    return startDatetimesOnly_;
  }

  public static final int OVERLAP_AS_WARNING_FIELD_NUMBER = 6;
  private boolean overlapAsWarning_ = false;
  /**
   * <pre>
   * Set to true to allow the shifts to be copied when there is a resulting overlap conflict for an agents shifts, with diagnostic warnings being returned after.
   * Otherwise, overlap conflicts will return diagnostic errors and cause no shifts to be copied.
   * </pre>
   *
   * <code>bool overlap_as_warning = 6 [json_name = "overlapAsWarning"];</code>
   * @return The overlapAsWarning.
   */
  @java.lang.Override
  public boolean getOverlapAsWarning() {
    return overlapAsWarning_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getSourceScheduleSelector());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getDestinationScheduleSelector());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getNodeSelector());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getDatetimeRange());
    }
    if (startDatetimesOnly_ != false) {
      output.writeBool(5, startDatetimesOnly_);
    }
    if (overlapAsWarning_ != false) {
      output.writeBool(6, overlapAsWarning_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSourceScheduleSelector());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDestinationScheduleSelector());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getNodeSelector());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDatetimeRange());
    }
    if (startDatetimesOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, startDatetimesOnly_);
    }
    if (overlapAsWarning_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, overlapAsWarning_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq other = (com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq) obj;

    if (hasSourceScheduleSelector() != other.hasSourceScheduleSelector()) return false;
    if (hasSourceScheduleSelector()) {
      if (!getSourceScheduleSelector()
          .equals(other.getSourceScheduleSelector())) return false;
    }
    if (hasDestinationScheduleSelector() != other.hasDestinationScheduleSelector()) return false;
    if (hasDestinationScheduleSelector()) {
      if (!getDestinationScheduleSelector()
          .equals(other.getDestinationScheduleSelector())) return false;
    }
    if (hasNodeSelector() != other.hasNodeSelector()) return false;
    if (hasNodeSelector()) {
      if (!getNodeSelector()
          .equals(other.getNodeSelector())) return false;
    }
    if (hasDatetimeRange() != other.hasDatetimeRange()) return false;
    if (hasDatetimeRange()) {
      if (!getDatetimeRange()
          .equals(other.getDatetimeRange())) return false;
    }
    if (getStartDatetimesOnly()
        != other.getStartDatetimesOnly()) return false;
    if (getOverlapAsWarning()
        != other.getOverlapAsWarning()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSourceScheduleSelector()) {
      hash = (37 * hash) + SOURCE_SCHEDULE_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getSourceScheduleSelector().hashCode();
    }
    if (hasDestinationScheduleSelector()) {
      hash = (37 * hash) + DESTINATION_SCHEDULE_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getDestinationScheduleSelector().hashCode();
    }
    if (hasNodeSelector()) {
      hash = (37 * hash) + NODE_SELECTOR_FIELD_NUMBER;
      hash = (53 * hash) + getNodeSelector().hashCode();
    }
    if (hasDatetimeRange()) {
      hash = (37 * hash) + DATETIME_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getDatetimeRange().hashCode();
    }
    hash = (37 * hash) + START_DATETIMES_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStartDatetimesOnly());
    hash = (37 * hash) + OVERLAP_AS_WARNING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOverlapAsWarning());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request message for the CopyScheduleToSchedule RPC
   * </pre>
   *
   * Protobuf type {@code api.v1alpha1.wfm.CopyScheduleToScheduleReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v1alpha1.wfm.CopyScheduleToScheduleReq)
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyScheduleToScheduleReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyScheduleToScheduleReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.class, com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSourceScheduleSelectorFieldBuilder();
        getDestinationScheduleSelectorFieldBuilder();
        getNodeSelectorFieldBuilder();
        getDatetimeRangeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sourceScheduleSelector_ = null;
      if (sourceScheduleSelectorBuilder_ != null) {
        sourceScheduleSelectorBuilder_.dispose();
        sourceScheduleSelectorBuilder_ = null;
      }
      destinationScheduleSelector_ = null;
      if (destinationScheduleSelectorBuilder_ != null) {
        destinationScheduleSelectorBuilder_.dispose();
        destinationScheduleSelectorBuilder_ = null;
      }
      nodeSelector_ = null;
      if (nodeSelectorBuilder_ != null) {
        nodeSelectorBuilder_.dispose();
        nodeSelectorBuilder_ = null;
      }
      datetimeRange_ = null;
      if (datetimeRangeBuilder_ != null) {
        datetimeRangeBuilder_.dispose();
        datetimeRangeBuilder_ = null;
      }
      startDatetimesOnly_ = false;
      overlapAsWarning_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_CopyScheduleToScheduleReq_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq build() {
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq buildPartial() {
      com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq result = new com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sourceScheduleSelector_ = sourceScheduleSelectorBuilder_ == null
            ? sourceScheduleSelector_
            : sourceScheduleSelectorBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.destinationScheduleSelector_ = destinationScheduleSelectorBuilder_ == null
            ? destinationScheduleSelector_
            : destinationScheduleSelectorBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.nodeSelector_ = nodeSelectorBuilder_ == null
            ? nodeSelector_
            : nodeSelectorBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.datetimeRange_ = datetimeRangeBuilder_ == null
            ? datetimeRange_
            : datetimeRangeBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.startDatetimesOnly_ = startDatetimesOnly_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.overlapAsWarning_ = overlapAsWarning_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq) {
        return mergeFrom((com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq other) {
      if (other == com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq.getDefaultInstance()) return this;
      if (other.hasSourceScheduleSelector()) {
        mergeSourceScheduleSelector(other.getSourceScheduleSelector());
      }
      if (other.hasDestinationScheduleSelector()) {
        mergeDestinationScheduleSelector(other.getDestinationScheduleSelector());
      }
      if (other.hasNodeSelector()) {
        mergeNodeSelector(other.getNodeSelector());
      }
      if (other.hasDatetimeRange()) {
        mergeDatetimeRange(other.getDatetimeRange());
      }
      if (other.getStartDatetimesOnly() != false) {
        setStartDatetimesOnly(other.getStartDatetimesOnly());
      }
      if (other.getOverlapAsWarning() != false) {
        setOverlapAsWarning(other.getOverlapAsWarning());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getSourceScheduleSelectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getDestinationScheduleSelectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getNodeSelectorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getDatetimeRangeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              startDatetimesOnly_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              overlapAsWarning_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.tcn.cloud.api.api.commons.ScheduleSelector sourceScheduleSelector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> sourceScheduleSelectorBuilder_;
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     * @return Whether the sourceScheduleSelector field is set.
     */
    public boolean hasSourceScheduleSelector() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     * @return The sourceScheduleSelector.
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector getSourceScheduleSelector() {
      if (sourceScheduleSelectorBuilder_ == null) {
        return sourceScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : sourceScheduleSelector_;
      } else {
        return sourceScheduleSelectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public Builder setSourceScheduleSelector(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (sourceScheduleSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceScheduleSelector_ = value;
      } else {
        sourceScheduleSelectorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public Builder setSourceScheduleSelector(
        com.tcn.cloud.api.api.commons.ScheduleSelector.Builder builderForValue) {
      if (sourceScheduleSelectorBuilder_ == null) {
        sourceScheduleSelector_ = builderForValue.build();
      } else {
        sourceScheduleSelectorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public Builder mergeSourceScheduleSelector(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (sourceScheduleSelectorBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          sourceScheduleSelector_ != null &&
          sourceScheduleSelector_ != com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance()) {
          getSourceScheduleSelectorBuilder().mergeFrom(value);
        } else {
          sourceScheduleSelector_ = value;
        }
      } else {
        sourceScheduleSelectorBuilder_.mergeFrom(value);
      }
      if (sourceScheduleSelector_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public Builder clearSourceScheduleSelector() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sourceScheduleSelector_ = null;
      if (sourceScheduleSelectorBuilder_ != null) {
        sourceScheduleSelectorBuilder_.dispose();
        sourceScheduleSelectorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector.Builder getSourceScheduleSelectorBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getSourceScheduleSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getSourceScheduleSelectorOrBuilder() {
      if (sourceScheduleSelectorBuilder_ != null) {
        return sourceScheduleSelectorBuilder_.getMessageOrBuilder();
      } else {
        return sourceScheduleSelector_ == null ?
            com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : sourceScheduleSelector_;
      }
    }
    /**
     * <pre>
     * The schedule that shifts will be copied from.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector source_schedule_selector = 1 [json_name = "sourceScheduleSelector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> 
        getSourceScheduleSelectorFieldBuilder() {
      if (sourceScheduleSelectorBuilder_ == null) {
        sourceScheduleSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder>(
                getSourceScheduleSelector(),
                getParentForChildren(),
                isClean());
        sourceScheduleSelector_ = null;
      }
      return sourceScheduleSelectorBuilder_;
    }

    private com.tcn.cloud.api.api.commons.ScheduleSelector destinationScheduleSelector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> destinationScheduleSelectorBuilder_;
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     * @return Whether the destinationScheduleSelector field is set.
     */
    public boolean hasDestinationScheduleSelector() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     * @return The destinationScheduleSelector.
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector getDestinationScheduleSelector() {
      if (destinationScheduleSelectorBuilder_ == null) {
        return destinationScheduleSelector_ == null ? com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationScheduleSelector_;
      } else {
        return destinationScheduleSelectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public Builder setDestinationScheduleSelector(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (destinationScheduleSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        destinationScheduleSelector_ = value;
      } else {
        destinationScheduleSelectorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public Builder setDestinationScheduleSelector(
        com.tcn.cloud.api.api.commons.ScheduleSelector.Builder builderForValue) {
      if (destinationScheduleSelectorBuilder_ == null) {
        destinationScheduleSelector_ = builderForValue.build();
      } else {
        destinationScheduleSelectorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public Builder mergeDestinationScheduleSelector(com.tcn.cloud.api.api.commons.ScheduleSelector value) {
      if (destinationScheduleSelectorBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          destinationScheduleSelector_ != null &&
          destinationScheduleSelector_ != com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance()) {
          getDestinationScheduleSelectorBuilder().mergeFrom(value);
        } else {
          destinationScheduleSelector_ = value;
        }
      } else {
        destinationScheduleSelectorBuilder_.mergeFrom(value);
      }
      if (destinationScheduleSelector_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public Builder clearDestinationScheduleSelector() {
      bitField0_ = (bitField0_ & ~0x00000002);
      destinationScheduleSelector_ = null;
      if (destinationScheduleSelectorBuilder_ != null) {
        destinationScheduleSelectorBuilder_.dispose();
        destinationScheduleSelectorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelector.Builder getDestinationScheduleSelectorBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getDestinationScheduleSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    public com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder getDestinationScheduleSelectorOrBuilder() {
      if (destinationScheduleSelectorBuilder_ != null) {
        return destinationScheduleSelectorBuilder_.getMessageOrBuilder();
      } else {
        return destinationScheduleSelector_ == null ?
            com.tcn.cloud.api.api.commons.ScheduleSelector.getDefaultInstance() : destinationScheduleSelector_;
      }
    }
    /**
     * <pre>
     * The schedule that the shifts will be copied to.
     * </pre>
     *
     * <code>.api.commons.ScheduleSelector destination_schedule_selector = 2 [json_name = "destinationScheduleSelector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder> 
        getDestinationScheduleSelectorFieldBuilder() {
      if (destinationScheduleSelectorBuilder_ == null) {
        destinationScheduleSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.ScheduleSelector, com.tcn.cloud.api.api.commons.ScheduleSelector.Builder, com.tcn.cloud.api.api.commons.ScheduleSelectorOrBuilder>(
                getDestinationScheduleSelector(),
                getParentForChildren(),
                isClean());
        destinationScheduleSelector_ = null;
      }
      return destinationScheduleSelectorBuilder_;
    }

    private com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity nodeSelector_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder> nodeSelectorBuilder_;
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     * @return Whether the nodeSelector field is set.
     */
    public boolean hasNodeSelector() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     * @return The nodeSelector.
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity getNodeSelector() {
      if (nodeSelectorBuilder_ == null) {
        return nodeSelector_ == null ? com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.getDefaultInstance() : nodeSelector_;
      } else {
        return nodeSelectorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public Builder setNodeSelector(com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity value) {
      if (nodeSelectorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nodeSelector_ = value;
      } else {
        nodeSelectorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public Builder setNodeSelector(
        com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.Builder builderForValue) {
      if (nodeSelectorBuilder_ == null) {
        nodeSelector_ = builderForValue.build();
      } else {
        nodeSelectorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public Builder mergeNodeSelector(com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity value) {
      if (nodeSelectorBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          nodeSelector_ != null &&
          nodeSelector_ != com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.getDefaultInstance()) {
          getNodeSelectorBuilder().mergeFrom(value);
        } else {
          nodeSelector_ = value;
        }
      } else {
        nodeSelectorBuilder_.mergeFrom(value);
      }
      if (nodeSelector_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public Builder clearNodeSelector() {
      bitField0_ = (bitField0_ & ~0x00000004);
      nodeSelector_ = null;
      if (nodeSelectorBuilder_ != null) {
        nodeSelectorBuilder_.dispose();
        nodeSelectorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.Builder getNodeSelectorBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getNodeSelectorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder getNodeSelectorOrBuilder() {
      if (nodeSelectorBuilder_ != null) {
        return nodeSelectorBuilder_.getMessageOrBuilder();
      } else {
        return nodeSelector_ == null ?
            com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.getDefaultInstance() : nodeSelector_;
      }
    }
    /**
     * <pre>
     * The node that the shifts to copy should be associated with.
     * </pre>
     *
     * <code>.api.v1alpha1.wfm.ParentEntity node_selector = 3 [json_name = "nodeSelector"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder> 
        getNodeSelectorFieldBuilder() {
      if (nodeSelectorBuilder_ == null) {
        nodeSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder>(
                getNodeSelector(),
                getParentForChildren(),
                isClean());
        nodeSelector_ = null;
      }
      return nodeSelectorBuilder_;
    }

    private com.tcn.cloud.api.api.commons.DatetimeRange datetimeRange_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> datetimeRangeBuilder_;
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     * @return Whether the datetimeRange field is set.
     */
    public boolean hasDatetimeRange() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     * @return The datetimeRange.
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange getDatetimeRange() {
      if (datetimeRangeBuilder_ == null) {
        return datetimeRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : datetimeRange_;
      } else {
        return datetimeRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public Builder setDatetimeRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (datetimeRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        datetimeRange_ = value;
      } else {
        datetimeRangeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public Builder setDatetimeRange(
        com.tcn.cloud.api.api.commons.DatetimeRange.Builder builderForValue) {
      if (datetimeRangeBuilder_ == null) {
        datetimeRange_ = builderForValue.build();
      } else {
        datetimeRangeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public Builder mergeDatetimeRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (datetimeRangeBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          datetimeRange_ != null &&
          datetimeRange_ != com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance()) {
          getDatetimeRangeBuilder().mergeFrom(value);
        } else {
          datetimeRange_ = value;
        }
      } else {
        datetimeRangeBuilder_.mergeFrom(value);
      }
      if (datetimeRange_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public Builder clearDatetimeRange() {
      bitField0_ = (bitField0_ & ~0x00000008);
      datetimeRange_ = null;
      if (datetimeRangeBuilder_ != null) {
        datetimeRangeBuilder_.dispose();
        datetimeRangeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange.Builder getDatetimeRangeBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getDatetimeRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDatetimeRangeOrBuilder() {
      if (datetimeRangeBuilder_ != null) {
        return datetimeRangeBuilder_.getMessageOrBuilder();
      } else {
        return datetimeRange_ == null ?
            com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : datetimeRange_;
      }
    }
    /**
     * <pre>
     * The datetime range over which to get the shift instance sids.
     * If no range is provided, the scheduling range for the &#64;destination_schedule_selector will be used if it is a draft schedule, otherwise the range of the &#64;source_schedule_selector will be used.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange datetime_range = 4 [json_name = "datetimeRange"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> 
        getDatetimeRangeFieldBuilder() {
      if (datetimeRangeBuilder_ == null) {
        datetimeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder>(
                getDatetimeRange(),
                getParentForChildren(),
                isClean());
        datetimeRange_ = null;
      }
      return datetimeRangeBuilder_;
    }

    private boolean startDatetimesOnly_ ;
    /**
     * <pre>
     * Set to true to copy shifts that start within the range being copied, otherwise any shift that overlaps the range will be copied.
     * </pre>
     *
     * <code>bool start_datetimes_only = 5 [json_name = "startDatetimesOnly"];</code>
     * @return The startDatetimesOnly.
     */
    @java.lang.Override
    public boolean getStartDatetimesOnly() {
      return startDatetimesOnly_;
    }
    /**
     * <pre>
     * Set to true to copy shifts that start within the range being copied, otherwise any shift that overlaps the range will be copied.
     * </pre>
     *
     * <code>bool start_datetimes_only = 5 [json_name = "startDatetimesOnly"];</code>
     * @param value The startDatetimesOnly to set.
     * @return This builder for chaining.
     */
    public Builder setStartDatetimesOnly(boolean value) {

      startDatetimesOnly_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set to true to copy shifts that start within the range being copied, otherwise any shift that overlaps the range will be copied.
     * </pre>
     *
     * <code>bool start_datetimes_only = 5 [json_name = "startDatetimesOnly"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStartDatetimesOnly() {
      bitField0_ = (bitField0_ & ~0x00000010);
      startDatetimesOnly_ = false;
      onChanged();
      return this;
    }

    private boolean overlapAsWarning_ ;
    /**
     * <pre>
     * Set to true to allow the shifts to be copied when there is a resulting overlap conflict for an agents shifts, with diagnostic warnings being returned after.
     * Otherwise, overlap conflicts will return diagnostic errors and cause no shifts to be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 6 [json_name = "overlapAsWarning"];</code>
     * @return The overlapAsWarning.
     */
    @java.lang.Override
    public boolean getOverlapAsWarning() {
      return overlapAsWarning_;
    }
    /**
     * <pre>
     * Set to true to allow the shifts to be copied when there is a resulting overlap conflict for an agents shifts, with diagnostic warnings being returned after.
     * Otherwise, overlap conflicts will return diagnostic errors and cause no shifts to be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 6 [json_name = "overlapAsWarning"];</code>
     * @param value The overlapAsWarning to set.
     * @return This builder for chaining.
     */
    public Builder setOverlapAsWarning(boolean value) {

      overlapAsWarning_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set to true to allow the shifts to be copied when there is a resulting overlap conflict for an agents shifts, with diagnostic warnings being returned after.
     * Otherwise, overlap conflicts will return diagnostic errors and cause no shifts to be copied.
     * </pre>
     *
     * <code>bool overlap_as_warning = 6 [json_name = "overlapAsWarning"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOverlapAsWarning() {
      bitField0_ = (bitField0_ & ~0x00000020);
      overlapAsWarning_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v1alpha1.wfm.CopyScheduleToScheduleReq)
  }

  // @@protoc_insertion_point(class_scope:api.v1alpha1.wfm.CopyScheduleToScheduleReq)
  private static final com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq();
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CopyScheduleToScheduleReq>
      PARSER = new com.google.protobuf.AbstractParser<CopyScheduleToScheduleReq>() {
    @java.lang.Override
    public CopyScheduleToScheduleReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CopyScheduleToScheduleReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CopyScheduleToScheduleReq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.CopyScheduleToScheduleReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

