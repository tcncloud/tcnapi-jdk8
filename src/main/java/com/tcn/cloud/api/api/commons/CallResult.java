// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/results.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.CallResult}
 */
public enum CallResult
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * it's here only b/c protobuf requires it ... do never use it!
   * </pre>
   *
   * <code>CALL_RESULT_UNKNOWN = 0;</code>
   */
  CALL_RESULT_UNKNOWN(0),
  /**
   * <pre>
   * "CALL_PENDING", "Pending", "PED", "Call is pending result, default call result"),
   * </pre>
   *
   * <code>CALL_RESULT_PENDING = 1000;</code>
   */
  CALL_RESULT_PENDING(1000),
  /**
   * <pre>
   * "CALL_ANSWERED", "Answered", "ANS", "Call was answered, no other detail available"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED = 2000;</code>
   */
  CALL_RESULT_ANSWERED(2000),
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL", "Answered Linkcall", "ANL", "Call was answered and a linkback was attempted"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL = 2100;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL(2100),
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_ABANDONED", "Answered Linkcall Abandoned", "ALA", "Call was answered and a linkback established, but was abandoned  before agent connect"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_ABANDONED = 2110;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_ABANDONED(2110),
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_AGENT_TALK", "Answered Linkcall Agent Talk", "AGT", "Call was answered and a linkback established to agent"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_AGENT_TALK = 2120;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_AGENT_TALK(2120),
  /**
   * <pre>
   * "CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED", "Answered Linkcall suspended", "call was suspended"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED = 2130;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED(2130),
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT", "Suspend linkcall timeout", "call was timedout"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT = 2140;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT(2140),
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_LINKCALL_SUSPENDED_REPLACE_WITH_CALLER", "suspended call reaplaced with caller.)"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_INBOUND_OVERRIDE = 2150;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_INBOUND_OVERRIDE(2150),
  /**
   * <pre>
   * "CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED", "Answered Linkcall Suspended Resume", "suspended call resumed.)"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED = 2160;</code>
   */
  CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED(2160),
  /**
   * <pre>
   * "CALL_ANSWERED_HANGUP", "Answered Hangup", "ANH", "Call was answered and the TCN system hung up"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_HANGUP = 2200;</code>
   */
  CALL_RESULT_ANSWERED_HANGUP(2200),
  /**
   * <pre>
   * "CALL_ANSWERED_VOICEMAIL", "Answered VoiceMail", "ANV", "Call was answered and a linkback was attempted, but went to voicemail" ),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_VOICEMAIL = 2300;</code>
   */
  CALL_RESULT_ANSWERED_VOICEMAIL(2300),
  /**
   * <pre>
   * "CALL_MACHINE", "Machine", "MAC", "Call was detected as answering machine, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE = 3000;</code>
   */
  CALL_RESULT_MACHINE(3000),
  /**
   * <pre>
   * "CALL_MACHINE_DELIVERED", "Machine Delivered", "MAD", "Call was detected as answering machine a message was delivered"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_DELIVERED = 3100;</code>
   */
  CALL_RESULT_MACHINE_DELIVERED(3100),
  /**
   * <pre>
   * "CALL_MACHINE_HANGUP", "Machine Hangup", "MAH", "Call was detected as answering machine and the TCN system hung up"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_HANGUP = 3200;</code>
   */
  CALL_RESULT_MACHINE_HANGUP(3200),
  /**
   * <pre>
   * "CALL_RESULT_MACHINE_FAILED", "Machine Undeliverable", "MAF", "Call was detected as answering machine but remote machine hungup on TCN" ),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_FAILED = 3300;</code>
   */
  CALL_RESULT_MACHINE_FAILED(3300),
  /**
   * <pre>
   * "CALL_FAX", "Fax", "FAX", "Fax was detected, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_FAX = 4000;</code>
   */
  CALL_RESULT_FAX(4000),
  /**
   * <pre>
   * "CALL_FAX_DELIVERED", "Fax Delivered", "FAD", "Fax machine detected and a fax was sent"),
   * </pre>
   *
   * <code>CALL_RESULT_FAX_DELIVERED = 4100;</code>
   */
  CALL_RESULT_FAX_DELIVERED(4100),
  /**
   * <pre>
   * "CALL_BUSY", "Busy", "BZY", "Call was busy, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_BUSY = 5000;</code>
   */
  CALL_RESULT_BUSY(5000),
  /**
   * <pre>
   * "CALL_NOANSWER", "No Answer", "NOA", "Call was not answered, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_NO_ANSWER = 6000;</code>
   */
  CALL_RESULT_NO_ANSWER(6000),
  /**
   * <pre>
   * "CALL_INVALID", "Invalid", "INV", "Call was invalid, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID = 7000;</code>
   */
  CALL_RESULT_INVALID(7000),
  /**
   * <pre>
   * "CALL_INVALID_INCOMPLETE_NUMBER", "Invalid Incomplete Number", "INC", "Call was invalid, incomplete number"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_INCOMPLETE_NUMBER = 7100;</code>
   */
  CALL_RESULT_INVALID_INCOMPLETE_NUMBER(7100),
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX", "Invalid Unknow Prefix", "IUP", "Call was invalid, unknown prefix"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX = 7200;</code>
   */
  CALL_RESULT_INVALID_UNKNOWN_PREFIX(7200),
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX_NPA", "Invalid Unknown NPA", "INP", "Call was invalid, unknown NPA"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPA = 7210;</code>
   */
  CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPA(7210),
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX_NPANXX", "Invalid Unknown NPA-NXX", "INX", "Call was invalid,unknown NPA-NXX"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPANXX = 7220;</code>
   */
  CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPANXX(7220),
  /**
   * <pre>
   * "CALL_INVALID_PREFIX_NPANXX_NOT_FOUND", "Invalid NPA-NXX Not Found", "INF", "Call was invalid, NPA-NXX not found"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_PREFIX_NPANXX_NOT_FOUND = 7230;</code>
   */
  CALL_RESULT_INVALID_PREFIX_NPANXX_NOT_FOUND(7230),
  /**
   * <pre>
   * "CALL_INVALID_NO_ROUTE", "Invalid No Route", "INR", "Call invalid, no route to host"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_NO_ROUTE = 7300;</code>
   */
  CALL_RESULT_INVALID_NO_ROUTE(7300),
  /**
   * <pre>
   * "CALL_INVALID_DISCONNECTED", "Invalid Disconnected", "IDC", "Call invalid, disconnected"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_DISCONNECTED = 7400;</code>
   */
  CALL_RESULT_INVALID_DISCONNECTED(7400),
  /**
   * <pre>
   * "CALL_INVALID_DISCONNECTED_SKIPTRACE", "Invalid Disconnected Skiptrace", "IDS", "Call invalid, disconnected, tcn was able to get a number from the recording"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_DISCONNECTED_SKIPTRACE = 7410;</code>
   */
  CALL_RESULT_INVALID_DISCONNECTED_SKIPTRACE(7410),
  /**
   * <pre>
   * "CALL_FAILED", "Failed", "FAL", "Call failed for unknown reason"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED = 8000;</code>
   */
  CALL_RESULT_FAILED(8000),
  /**
   * <pre>
   * "CALL_FAILED_NO_LINES", "Failed No Lines", "FNL", "Call failed," + " tcn had no available lines to deliver call"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_NO_LINES = 8100;</code>
   */
  CALL_RESULT_FAILED_NO_LINES(8100),
  /**
   * <pre>
   * "CALL_FAILED_CIRCUITS_BUSY", "Failed Busy Circuits", "FBC", "Call failed, all circuits busy"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_CIRCUITS_BUSY = 8200;</code>
   */
  CALL_RESULT_FAILED_CIRCUITS_BUSY(8200),
  /**
   * <pre>
   * "CALL_FAILED_REFUSED", "Failed Refused", "FRE", "Call failed, tcn refused the call"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED = 8300;</code>
   */
  CALL_RESULT_FAILED_REFUSED(8300),
  /**
   * <pre>
   * "CALL_FAILED_REFUSED_LEGAL", "Failed Refused Legal", "FRL", "Call failed, tcn refused the call on legal grounds"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED_LEGAL = 8310;</code>
   */
  CALL_RESULT_FAILED_REFUSED_LEGAL(8310),
  /**
   * <pre>
   * "CALL_FAILED_REFUSED_TECHNICAL", "Failed Refused Technical", "FRT", "Call failed, tcn is unable to dial into requested region for technical reasons"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED_TECHNICAL = 8320;</code>
   */
  CALL_RESULT_FAILED_REFUSED_TECHNICAL(8320),
  /**
   * <pre>
   * "CALL_RESULT_FAILED_INTERNAL_ERROR", "Failed Internal Technical Problem", "FIE", "Task integrity check failed!!!!!!"), // this could happen only in
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_INTERNAL_ERROR = 8330;</code>
   */
  CALL_RESULT_FAILED_INTERNAL_ERROR(8330),
  /**
   * <pre>
   * "CALL_CANCELED", "Canceled", "CAN", "Call canceled, reason unknown"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED = 9000;</code>
   */
  CALL_RESULT_CANCELED(9000),
  /**
   * <pre>
   * "CALL_CANCELED_TIMEZONE", "Canceled Timezone", "CAZ", "Call canceled due to timezone restrictions"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_TIMEZONE = 9100;</code>
   */
  CALL_RESULT_CANCELED_TIMEZONE(9100),
  /**
   * <pre>
   * "CALL_CANCELED_TIMEOUT", "Canceled Timeout", "CAT", "Call canceled due to timeone"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_TIMEOUT = 9200;</code>
   */
  CALL_RESULT_CANCELED_TIMEOUT(9200),
  /**
   * <pre>
   * "CALL_CANCELED_DNCL", "Canceled DNCL", "CDL", "Call canceled due to Do Not Call List"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_DNCL = 9300;</code>
   */
  CALL_RESULT_CANCELED_DNCL(9300),
  /**
   * <pre>
   * "CALL_CANCELED_CELLULAR_DNCL", "Canceled DNC Cellular", "CDC", "Call canceled due to requested cell phone scrubbing"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_CELLULAR_DNCL = 9310;</code>
   */
  CALL_RESULT_CANCELED_CELLULAR_DNCL(9310),
  /**
   * <pre>
   * "CALL_CANCELED_DNCL_ZIP_CODE", "Canceled DNC Zip Code", "CDZ", "Call canceled due to requested zip code scrubbing"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_DNCL_ZIP_CODE = 9320;</code>
   */
  CALL_RESULT_CANCELED_DNCL_ZIP_CODE(9320),
  /**
   * <pre>
   * "CALL_RESULT_CANCELED_MAX_RETRY", "Canceled Max Retry", "CMR", "Call canceled due to Max Retry was reached"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_MAX_RETRY = 9400;</code>
   */
  CALL_RESULT_CANCELED_MAX_RETRY(9400),
  /**
   * <pre>
   * "CALL_CANCELED_INCOMPLETE_NUMBER", "Cancelled Incomplete Number", "CIN", "Call was cancelled, incomplete number");
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_INCOMPLETE_NUMBER = 9500;</code>
   */
  CALL_RESULT_CANCELED_INCOMPLETE_NUMBER(9500),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * it's here only b/c protobuf requires it ... do never use it!
   * </pre>
   *
   * <code>CALL_RESULT_UNKNOWN = 0;</code>
   */
  public static final int CALL_RESULT_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * "CALL_PENDING", "Pending", "PED", "Call is pending result, default call result"),
   * </pre>
   *
   * <code>CALL_RESULT_PENDING = 1000;</code>
   */
  public static final int CALL_RESULT_PENDING_VALUE = 1000;
  /**
   * <pre>
   * "CALL_ANSWERED", "Answered", "ANS", "Call was answered, no other detail available"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED = 2000;</code>
   */
  public static final int CALL_RESULT_ANSWERED_VALUE = 2000;
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL", "Answered Linkcall", "ANL", "Call was answered and a linkback was attempted"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL = 2100;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_VALUE = 2100;
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_ABANDONED", "Answered Linkcall Abandoned", "ALA", "Call was answered and a linkback established, but was abandoned  before agent connect"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_ABANDONED = 2110;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_ABANDONED_VALUE = 2110;
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_AGENT_TALK", "Answered Linkcall Agent Talk", "AGT", "Call was answered and a linkback established to agent"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_AGENT_TALK = 2120;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_AGENT_TALK_VALUE = 2120;
  /**
   * <pre>
   * "CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED", "Answered Linkcall suspended", "call was suspended"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED = 2130;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_VALUE = 2130;
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT", "Suspend linkcall timeout", "call was timedout"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT = 2140;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT_VALUE = 2140;
  /**
   * <pre>
   * "CALL_ANSWERED_LINKCALL_LINKCALL_SUSPENDED_REPLACE_WITH_CALLER", "suspended call reaplaced with caller.)"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_INBOUND_OVERRIDE = 2150;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_INBOUND_OVERRIDE_VALUE = 2150;
  /**
   * <pre>
   * "CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED", "Answered Linkcall Suspended Resume", "suspended call resumed.)"
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED = 2160;</code>
   */
  public static final int CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED_VALUE = 2160;
  /**
   * <pre>
   * "CALL_ANSWERED_HANGUP", "Answered Hangup", "ANH", "Call was answered and the TCN system hung up"),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_HANGUP = 2200;</code>
   */
  public static final int CALL_RESULT_ANSWERED_HANGUP_VALUE = 2200;
  /**
   * <pre>
   * "CALL_ANSWERED_VOICEMAIL", "Answered VoiceMail", "ANV", "Call was answered and a linkback was attempted, but went to voicemail" ),
   * </pre>
   *
   * <code>CALL_RESULT_ANSWERED_VOICEMAIL = 2300;</code>
   */
  public static final int CALL_RESULT_ANSWERED_VOICEMAIL_VALUE = 2300;
  /**
   * <pre>
   * "CALL_MACHINE", "Machine", "MAC", "Call was detected as answering machine, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE = 3000;</code>
   */
  public static final int CALL_RESULT_MACHINE_VALUE = 3000;
  /**
   * <pre>
   * "CALL_MACHINE_DELIVERED", "Machine Delivered", "MAD", "Call was detected as answering machine a message was delivered"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_DELIVERED = 3100;</code>
   */
  public static final int CALL_RESULT_MACHINE_DELIVERED_VALUE = 3100;
  /**
   * <pre>
   * "CALL_MACHINE_HANGUP", "Machine Hangup", "MAH", "Call was detected as answering machine and the TCN system hung up"),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_HANGUP = 3200;</code>
   */
  public static final int CALL_RESULT_MACHINE_HANGUP_VALUE = 3200;
  /**
   * <pre>
   * "CALL_RESULT_MACHINE_FAILED", "Machine Undeliverable", "MAF", "Call was detected as answering machine but remote machine hungup on TCN" ),
   * </pre>
   *
   * <code>CALL_RESULT_MACHINE_FAILED = 3300;</code>
   */
  public static final int CALL_RESULT_MACHINE_FAILED_VALUE = 3300;
  /**
   * <pre>
   * "CALL_FAX", "Fax", "FAX", "Fax was detected, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_FAX = 4000;</code>
   */
  public static final int CALL_RESULT_FAX_VALUE = 4000;
  /**
   * <pre>
   * "CALL_FAX_DELIVERED", "Fax Delivered", "FAD", "Fax machine detected and a fax was sent"),
   * </pre>
   *
   * <code>CALL_RESULT_FAX_DELIVERED = 4100;</code>
   */
  public static final int CALL_RESULT_FAX_DELIVERED_VALUE = 4100;
  /**
   * <pre>
   * "CALL_BUSY", "Busy", "BZY", "Call was busy, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_BUSY = 5000;</code>
   */
  public static final int CALL_RESULT_BUSY_VALUE = 5000;
  /**
   * <pre>
   * "CALL_NOANSWER", "No Answer", "NOA", "Call was not answered, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_NO_ANSWER = 6000;</code>
   */
  public static final int CALL_RESULT_NO_ANSWER_VALUE = 6000;
  /**
   * <pre>
   * "CALL_INVALID", "Invalid", "INV", "Call was invalid, no other details available"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID = 7000;</code>
   */
  public static final int CALL_RESULT_INVALID_VALUE = 7000;
  /**
   * <pre>
   * "CALL_INVALID_INCOMPLETE_NUMBER", "Invalid Incomplete Number", "INC", "Call was invalid, incomplete number"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_INCOMPLETE_NUMBER = 7100;</code>
   */
  public static final int CALL_RESULT_INVALID_INCOMPLETE_NUMBER_VALUE = 7100;
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX", "Invalid Unknow Prefix", "IUP", "Call was invalid, unknown prefix"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX = 7200;</code>
   */
  public static final int CALL_RESULT_INVALID_UNKNOWN_PREFIX_VALUE = 7200;
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX_NPA", "Invalid Unknown NPA", "INP", "Call was invalid, unknown NPA"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPA = 7210;</code>
   */
  public static final int CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPA_VALUE = 7210;
  /**
   * <pre>
   * "CALL_INVALID_UNKNOWN_PREFIX_NPANXX", "Invalid Unknown NPA-NXX", "INX", "Call was invalid,unknown NPA-NXX"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPANXX = 7220;</code>
   */
  public static final int CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPANXX_VALUE = 7220;
  /**
   * <pre>
   * "CALL_INVALID_PREFIX_NPANXX_NOT_FOUND", "Invalid NPA-NXX Not Found", "INF", "Call was invalid, NPA-NXX not found"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_PREFIX_NPANXX_NOT_FOUND = 7230;</code>
   */
  public static final int CALL_RESULT_INVALID_PREFIX_NPANXX_NOT_FOUND_VALUE = 7230;
  /**
   * <pre>
   * "CALL_INVALID_NO_ROUTE", "Invalid No Route", "INR", "Call invalid, no route to host"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_NO_ROUTE = 7300;</code>
   */
  public static final int CALL_RESULT_INVALID_NO_ROUTE_VALUE = 7300;
  /**
   * <pre>
   * "CALL_INVALID_DISCONNECTED", "Invalid Disconnected", "IDC", "Call invalid, disconnected"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_DISCONNECTED = 7400;</code>
   */
  public static final int CALL_RESULT_INVALID_DISCONNECTED_VALUE = 7400;
  /**
   * <pre>
   * "CALL_INVALID_DISCONNECTED_SKIPTRACE", "Invalid Disconnected Skiptrace", "IDS", "Call invalid, disconnected, tcn was able to get a number from the recording"),
   * </pre>
   *
   * <code>CALL_RESULT_INVALID_DISCONNECTED_SKIPTRACE = 7410;</code>
   */
  public static final int CALL_RESULT_INVALID_DISCONNECTED_SKIPTRACE_VALUE = 7410;
  /**
   * <pre>
   * "CALL_FAILED", "Failed", "FAL", "Call failed for unknown reason"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED = 8000;</code>
   */
  public static final int CALL_RESULT_FAILED_VALUE = 8000;
  /**
   * <pre>
   * "CALL_FAILED_NO_LINES", "Failed No Lines", "FNL", "Call failed," + " tcn had no available lines to deliver call"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_NO_LINES = 8100;</code>
   */
  public static final int CALL_RESULT_FAILED_NO_LINES_VALUE = 8100;
  /**
   * <pre>
   * "CALL_FAILED_CIRCUITS_BUSY", "Failed Busy Circuits", "FBC", "Call failed, all circuits busy"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_CIRCUITS_BUSY = 8200;</code>
   */
  public static final int CALL_RESULT_FAILED_CIRCUITS_BUSY_VALUE = 8200;
  /**
   * <pre>
   * "CALL_FAILED_REFUSED", "Failed Refused", "FRE", "Call failed, tcn refused the call"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED = 8300;</code>
   */
  public static final int CALL_RESULT_FAILED_REFUSED_VALUE = 8300;
  /**
   * <pre>
   * "CALL_FAILED_REFUSED_LEGAL", "Failed Refused Legal", "FRL", "Call failed, tcn refused the call on legal grounds"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED_LEGAL = 8310;</code>
   */
  public static final int CALL_RESULT_FAILED_REFUSED_LEGAL_VALUE = 8310;
  /**
   * <pre>
   * "CALL_FAILED_REFUSED_TECHNICAL", "Failed Refused Technical", "FRT", "Call failed, tcn is unable to dial into requested region for technical reasons"),
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_REFUSED_TECHNICAL = 8320;</code>
   */
  public static final int CALL_RESULT_FAILED_REFUSED_TECHNICAL_VALUE = 8320;
  /**
   * <pre>
   * "CALL_RESULT_FAILED_INTERNAL_ERROR", "Failed Internal Technical Problem", "FIE", "Task integrity check failed!!!!!!"), // this could happen only in
   * </pre>
   *
   * <code>CALL_RESULT_FAILED_INTERNAL_ERROR = 8330;</code>
   */
  public static final int CALL_RESULT_FAILED_INTERNAL_ERROR_VALUE = 8330;
  /**
   * <pre>
   * "CALL_CANCELED", "Canceled", "CAN", "Call canceled, reason unknown"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED = 9000;</code>
   */
  public static final int CALL_RESULT_CANCELED_VALUE = 9000;
  /**
   * <pre>
   * "CALL_CANCELED_TIMEZONE", "Canceled Timezone", "CAZ", "Call canceled due to timezone restrictions"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_TIMEZONE = 9100;</code>
   */
  public static final int CALL_RESULT_CANCELED_TIMEZONE_VALUE = 9100;
  /**
   * <pre>
   * "CALL_CANCELED_TIMEOUT", "Canceled Timeout", "CAT", "Call canceled due to timeone"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_TIMEOUT = 9200;</code>
   */
  public static final int CALL_RESULT_CANCELED_TIMEOUT_VALUE = 9200;
  /**
   * <pre>
   * "CALL_CANCELED_DNCL", "Canceled DNCL", "CDL", "Call canceled due to Do Not Call List"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_DNCL = 9300;</code>
   */
  public static final int CALL_RESULT_CANCELED_DNCL_VALUE = 9300;
  /**
   * <pre>
   * "CALL_CANCELED_CELLULAR_DNCL", "Canceled DNC Cellular", "CDC", "Call canceled due to requested cell phone scrubbing"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_CELLULAR_DNCL = 9310;</code>
   */
  public static final int CALL_RESULT_CANCELED_CELLULAR_DNCL_VALUE = 9310;
  /**
   * <pre>
   * "CALL_CANCELED_DNCL_ZIP_CODE", "Canceled DNC Zip Code", "CDZ", "Call canceled due to requested zip code scrubbing"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_DNCL_ZIP_CODE = 9320;</code>
   */
  public static final int CALL_RESULT_CANCELED_DNCL_ZIP_CODE_VALUE = 9320;
  /**
   * <pre>
   * "CALL_RESULT_CANCELED_MAX_RETRY", "Canceled Max Retry", "CMR", "Call canceled due to Max Retry was reached"),
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_MAX_RETRY = 9400;</code>
   */
  public static final int CALL_RESULT_CANCELED_MAX_RETRY_VALUE = 9400;
  /**
   * <pre>
   * "CALL_CANCELED_INCOMPLETE_NUMBER", "Cancelled Incomplete Number", "CIN", "Call was cancelled, incomplete number");
   * </pre>
   *
   * <code>CALL_RESULT_CANCELED_INCOMPLETE_NUMBER = 9500;</code>
   */
  public static final int CALL_RESULT_CANCELED_INCOMPLETE_NUMBER_VALUE = 9500;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CallResult valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CallResult forNumber(int value) {
    switch (value) {
      case 0: return CALL_RESULT_UNKNOWN;
      case 1000: return CALL_RESULT_PENDING;
      case 2000: return CALL_RESULT_ANSWERED;
      case 2100: return CALL_RESULT_ANSWERED_LINKCALL;
      case 2110: return CALL_RESULT_ANSWERED_LINKCALL_ABANDONED;
      case 2120: return CALL_RESULT_ANSWERED_LINKCALL_AGENT_TALK;
      case 2130: return CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED;
      case 2140: return CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_TIMEOUT;
      case 2150: return CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_INBOUND_OVERRIDE;
      case 2160: return CALL_RESULT_ANSWERED_LINKCALL_SUSPENDED_RESUMED;
      case 2200: return CALL_RESULT_ANSWERED_HANGUP;
      case 2300: return CALL_RESULT_ANSWERED_VOICEMAIL;
      case 3000: return CALL_RESULT_MACHINE;
      case 3100: return CALL_RESULT_MACHINE_DELIVERED;
      case 3200: return CALL_RESULT_MACHINE_HANGUP;
      case 3300: return CALL_RESULT_MACHINE_FAILED;
      case 4000: return CALL_RESULT_FAX;
      case 4100: return CALL_RESULT_FAX_DELIVERED;
      case 5000: return CALL_RESULT_BUSY;
      case 6000: return CALL_RESULT_NO_ANSWER;
      case 7000: return CALL_RESULT_INVALID;
      case 7100: return CALL_RESULT_INVALID_INCOMPLETE_NUMBER;
      case 7200: return CALL_RESULT_INVALID_UNKNOWN_PREFIX;
      case 7210: return CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPA;
      case 7220: return CALL_RESULT_INVALID_UNKNOWN_PREFIX_NPANXX;
      case 7230: return CALL_RESULT_INVALID_PREFIX_NPANXX_NOT_FOUND;
      case 7300: return CALL_RESULT_INVALID_NO_ROUTE;
      case 7400: return CALL_RESULT_INVALID_DISCONNECTED;
      case 7410: return CALL_RESULT_INVALID_DISCONNECTED_SKIPTRACE;
      case 8000: return CALL_RESULT_FAILED;
      case 8100: return CALL_RESULT_FAILED_NO_LINES;
      case 8200: return CALL_RESULT_FAILED_CIRCUITS_BUSY;
      case 8300: return CALL_RESULT_FAILED_REFUSED;
      case 8310: return CALL_RESULT_FAILED_REFUSED_LEGAL;
      case 8320: return CALL_RESULT_FAILED_REFUSED_TECHNICAL;
      case 8330: return CALL_RESULT_FAILED_INTERNAL_ERROR;
      case 9000: return CALL_RESULT_CANCELED;
      case 9100: return CALL_RESULT_CANCELED_TIMEZONE;
      case 9200: return CALL_RESULT_CANCELED_TIMEOUT;
      case 9300: return CALL_RESULT_CANCELED_DNCL;
      case 9310: return CALL_RESULT_CANCELED_CELLULAR_DNCL;
      case 9320: return CALL_RESULT_CANCELED_DNCL_ZIP_CODE;
      case 9400: return CALL_RESULT_CANCELED_MAX_RETRY;
      case 9500: return CALL_RESULT_CANCELED_INCOMPLETE_NUMBER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CallResult>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CallResult> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CallResult>() {
          public CallResult findValueByNumber(int number) {
            return CallResult.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.ResultsProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final CallResult[] VALUES = values();

  public static CallResult valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CallResult(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.CallResult)
}

