// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

/**
 * <pre>
 * Takes SFTP credentials and import a file
 * </pre>
 *
 * Protobuf type {@code api.v0alpha.SftpImport}
 */
public final class SftpImport extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v0alpha.SftpImport)
    SftpImportOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SftpImport.newBuilder() to construct.
  private SftpImport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SftpImport() {
    user_ = "";
    password_ = "";
    privateKey_ = "";
    address_ = "";
    port_ = "";
    fileTemplateId_ = "";
    cron_ = "";
    timezone_ = "";
    transferConfigName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SftpImport();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_SftpImport_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_SftpImport_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v0alpha.SftpImport.class, com.tcn.cloud.api.api.v0alpha.SftpImport.Builder.class);
  }

  private int bitField0_;
  public static final int USER_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object user_ = "";
  /**
   * <pre>
   * SFTP credentials. `password` will
   * be tried first for authentication,
   * if left blank, `private_key` will be tried.
   * </pre>
   *
   * <code>string user = 4 [json_name = "user"];</code>
   * @return The user.
   */
  @java.lang.Override
  public java.lang.String getUser() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      user_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SFTP credentials. `password` will
   * be tried first for authentication,
   * if left blank, `private_key` will be tried.
   * </pre>
   *
   * <code>string user = 4 [json_name = "user"];</code>
   * @return The bytes for user.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUserBytes() {
    java.lang.Object ref = user_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      user_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PASSWORD_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object password_ = "";
  /**
   * <code>string password = 5 [json_name = "password"];</code>
   * @return The password.
   */
  @java.lang.Override
  public java.lang.String getPassword() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      password_ = s;
      return s;
    }
  }
  /**
   * <code>string password = 5 [json_name = "password"];</code>
   * @return The bytes for password.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPasswordBytes() {
    java.lang.Object ref = password_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      password_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRIVATE_KEY_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object privateKey_ = "";
  /**
   * <code>string private_key = 6 [json_name = "privateKey"];</code>
   * @return The privateKey.
   */
  @java.lang.Override
  public java.lang.String getPrivateKey() {
    java.lang.Object ref = privateKey_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      privateKey_ = s;
      return s;
    }
  }
  /**
   * <code>string private_key = 6 [json_name = "privateKey"];</code>
   * @return The bytes for privateKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPrivateKeyBytes() {
    java.lang.Object ref = privateKey_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      privateKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADDRESS_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object address_ = "";
  /**
   * <code>string address = 7 [json_name = "address"];</code>
   * @return The address.
   */
  @java.lang.Override
  public java.lang.String getAddress() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      address_ = s;
      return s;
    }
  }
  /**
   * <code>string address = 7 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAddressBytes() {
    java.lang.Object ref = address_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      address_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object port_ = "";
  /**
   * <code>string port = 8 [json_name = "port"];</code>
   * @return The port.
   */
  @java.lang.Override
  public java.lang.String getPort() {
    java.lang.Object ref = port_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      port_ = s;
      return s;
    }
  }
  /**
   * <code>string port = 8 [json_name = "port"];</code>
   * @return The bytes for port.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPortBytes() {
    java.lang.Object ref = port_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      port_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILE_PATTERN_FIELD_NUMBER = 13;
  private com.tcn.cloud.api.api.commons.FilePattern filePattern_;
  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   * @return Whether the filePattern field is set.
   */
  @java.lang.Override
  public boolean hasFilePattern() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   * @return The filePattern.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.FilePattern getFilePattern() {
    return filePattern_ == null ? com.tcn.cloud.api.api.commons.FilePattern.getDefaultInstance() : filePattern_;
  }
  /**
   * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.FilePatternOrBuilder getFilePatternOrBuilder() {
    return filePattern_ == null ? com.tcn.cloud.api.api.commons.FilePattern.getDefaultInstance() : filePattern_;
  }

  public static final int ENABLED_FIELD_NUMBER = 15;
  private boolean enabled_ = false;
  /**
   * <pre>
   * We will only process if enabled
   * </pre>
   *
   * <code>bool enabled = 15 [json_name = "enabled"];</code>
   * @return The enabled.
   */
  @java.lang.Override
  public boolean getEnabled() {
    return enabled_;
  }

  public static final int FILE_TEMPLATE_ID_FIELD_NUMBER = 16;
  @SuppressWarnings("serial")
  private volatile java.lang.Object fileTemplateId_ = "";
  /**
   * <pre>
   * prefered/default template
   * </pre>
   *
   * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
   * @return The fileTemplateId.
   */
  @java.lang.Override
  public java.lang.String getFileTemplateId() {
    java.lang.Object ref = fileTemplateId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fileTemplateId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * prefered/default template
   * </pre>
   *
   * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
   * @return The bytes for fileTemplateId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFileTemplateIdBytes() {
    java.lang.Object ref = fileTemplateId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fileTemplateId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INCREMENTAL_FIELD_NUMBER = 17;
  private boolean incremental_ = false;
  /**
   * <code>bool incremental = 17 [json_name = "incremental"];</code>
   * @return The incremental.
   */
  @java.lang.Override
  public boolean getIncremental() {
    return incremental_;
  }

  public static final int ENCRYPTED_FIELD_NUMBER = 18;
  private boolean encrypted_ = false;
  /**
   * <pre>
   * Specifies whether the files to be imported
   * are encrypted with PGP key
   * </pre>
   *
   * <code>bool encrypted = 18 [json_name = "encrypted"];</code>
   * @return The encrypted.
   */
  @java.lang.Override
  public boolean getEncrypted() {
    return encrypted_;
  }

  public static final int CRON_FIELD_NUMBER = 19;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cron_ = "";
  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 19 [json_name = "cron"];</code>
   * @return The cron.
   */
  @java.lang.Override
  public java.lang.String getCron() {
    java.lang.Object ref = cron_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cron_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 19 [json_name = "cron"];</code>
   * @return The bytes for cron.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCronBytes() {
    java.lang.Object ref = cron_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cron_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMEZONE_FIELD_NUMBER = 20;
  @SuppressWarnings("serial")
  private volatile java.lang.Object timezone_ = "";
  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 20 [json_name = "timezone"];</code>
   * @return The timezone.
   */
  @java.lang.Override
  public java.lang.String getTimezone() {
    java.lang.Object ref = timezone_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      timezone_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 20 [json_name = "timezone"];</code>
   * @return The bytes for timezone.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTimezoneBytes() {
    java.lang.Object ref = timezone_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      timezone_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSFER_CONFIG_NAME_FIELD_NUMBER = 21;
  @SuppressWarnings("serial")
  private volatile java.lang.Object transferConfigName_ = "";
  /**
   * <pre>
   * Name of the transfer_config, used to find sftp configuration
   * </pre>
   *
   * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
   * @return The transferConfigName.
   */
  @java.lang.Override
  public java.lang.String getTransferConfigName() {
    java.lang.Object ref = transferConfigName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      transferConfigName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the transfer_config, used to find sftp configuration
   * </pre>
   *
   * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
   * @return The bytes for transferConfigName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTransferConfigNameBytes() {
    java.lang.Object ref = transferConfigName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      transferConfigName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, user_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, password_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, privateKey_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, address_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(port_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, port_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(13, getFilePattern());
    }
    if (enabled_ != false) {
      output.writeBool(15, enabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileTemplateId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 16, fileTemplateId_);
    }
    if (incremental_ != false) {
      output.writeBool(17, incremental_);
    }
    if (encrypted_ != false) {
      output.writeBool(18, encrypted_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 19, cron_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 20, timezone_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transferConfigName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 21, transferConfigName_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, user_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, password_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, privateKey_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(address_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, address_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(port_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, port_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getFilePattern());
    }
    if (enabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(15, enabled_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fileTemplateId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, fileTemplateId_);
    }
    if (incremental_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(17, incremental_);
    }
    if (encrypted_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(18, encrypted_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cron_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, cron_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, timezone_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transferConfigName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(21, transferConfigName_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v0alpha.SftpImport)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v0alpha.SftpImport other = (com.tcn.cloud.api.api.v0alpha.SftpImport) obj;

    if (!getUser()
        .equals(other.getUser())) return false;
    if (!getPassword()
        .equals(other.getPassword())) return false;
    if (!getPrivateKey()
        .equals(other.getPrivateKey())) return false;
    if (!getAddress()
        .equals(other.getAddress())) return false;
    if (!getPort()
        .equals(other.getPort())) return false;
    if (hasFilePattern() != other.hasFilePattern()) return false;
    if (hasFilePattern()) {
      if (!getFilePattern()
          .equals(other.getFilePattern())) return false;
    }
    if (getEnabled()
        != other.getEnabled()) return false;
    if (!getFileTemplateId()
        .equals(other.getFileTemplateId())) return false;
    if (getIncremental()
        != other.getIncremental()) return false;
    if (getEncrypted()
        != other.getEncrypted()) return false;
    if (!getCron()
        .equals(other.getCron())) return false;
    if (!getTimezone()
        .equals(other.getTimezone())) return false;
    if (!getTransferConfigName()
        .equals(other.getTransferConfigName())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USER_FIELD_NUMBER;
    hash = (53 * hash) + getUser().hashCode();
    hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getPassword().hashCode();
    hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getPrivateKey().hashCode();
    hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getAddress().hashCode();
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort().hashCode();
    if (hasFilePattern()) {
      hash = (37 * hash) + FILE_PATTERN_FIELD_NUMBER;
      hash = (53 * hash) + getFilePattern().hashCode();
    }
    hash = (37 * hash) + ENABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnabled());
    hash = (37 * hash) + FILE_TEMPLATE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getFileTemplateId().hashCode();
    hash = (37 * hash) + INCREMENTAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncremental());
    hash = (37 * hash) + ENCRYPTED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEncrypted());
    hash = (37 * hash) + CRON_FIELD_NUMBER;
    hash = (53 * hash) + getCron().hashCode();
    hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
    hash = (53 * hash) + getTimezone().hashCode();
    hash = (37 * hash) + TRANSFER_CONFIG_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTransferConfigName().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.SftpImport parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v0alpha.SftpImport prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Takes SFTP credentials and import a file
   * </pre>
   *
   * Protobuf type {@code api.v0alpha.SftpImport}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v0alpha.SftpImport)
      com.tcn.cloud.api.api.v0alpha.SftpImportOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_SftpImport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_SftpImport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v0alpha.SftpImport.class, com.tcn.cloud.api.api.v0alpha.SftpImport.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v0alpha.SftpImport.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFilePatternFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      user_ = "";
      password_ = "";
      privateKey_ = "";
      address_ = "";
      port_ = "";
      filePattern_ = null;
      if (filePatternBuilder_ != null) {
        filePatternBuilder_.dispose();
        filePatternBuilder_ = null;
      }
      enabled_ = false;
      fileTemplateId_ = "";
      incremental_ = false;
      encrypted_ = false;
      cron_ = "";
      timezone_ = "";
      transferConfigName_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v0alpha.LmsProto.internal_static_api_v0alpha_SftpImport_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.SftpImport getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v0alpha.SftpImport.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.SftpImport build() {
      com.tcn.cloud.api.api.v0alpha.SftpImport result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.SftpImport buildPartial() {
      com.tcn.cloud.api.api.v0alpha.SftpImport result = new com.tcn.cloud.api.api.v0alpha.SftpImport(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.tcn.cloud.api.api.v0alpha.SftpImport result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.user_ = user_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.password_ = password_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.privateKey_ = privateKey_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.address_ = address_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.port_ = port_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.filePattern_ = filePatternBuilder_ == null
            ? filePattern_
            : filePatternBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.enabled_ = enabled_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.fileTemplateId_ = fileTemplateId_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.incremental_ = incremental_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.encrypted_ = encrypted_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.cron_ = cron_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.timezone_ = timezone_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.transferConfigName_ = transferConfigName_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v0alpha.SftpImport) {
        return mergeFrom((com.tcn.cloud.api.api.v0alpha.SftpImport)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v0alpha.SftpImport other) {
      if (other == com.tcn.cloud.api.api.v0alpha.SftpImport.getDefaultInstance()) return this;
      if (!other.getUser().isEmpty()) {
        user_ = other.user_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getPassword().isEmpty()) {
        password_ = other.password_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getPrivateKey().isEmpty()) {
        privateKey_ = other.privateKey_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getAddress().isEmpty()) {
        address_ = other.address_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getPort().isEmpty()) {
        port_ = other.port_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasFilePattern()) {
        mergeFilePattern(other.getFilePattern());
      }
      if (other.getEnabled() != false) {
        setEnabled(other.getEnabled());
      }
      if (!other.getFileTemplateId().isEmpty()) {
        fileTemplateId_ = other.fileTemplateId_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.getIncremental() != false) {
        setIncremental(other.getIncremental());
      }
      if (other.getEncrypted() != false) {
        setEncrypted(other.getEncrypted());
      }
      if (!other.getCron().isEmpty()) {
        cron_ = other.cron_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (!other.getTimezone().isEmpty()) {
        timezone_ = other.timezone_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (!other.getTransferConfigName().isEmpty()) {
        transferConfigName_ = other.transferConfigName_;
        bitField0_ |= 0x00001000;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 34: {
              user_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 34
            case 42: {
              password_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 42
            case 50: {
              privateKey_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 50
            case 58: {
              address_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 58
            case 66: {
              port_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 66
            case 106: {
              input.readMessage(
                  getFilePatternFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 106
            case 120: {
              enabled_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 120
            case 130: {
              fileTemplateId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 130
            case 136: {
              incremental_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 136
            case 144: {
              encrypted_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 144
            case 154: {
              cron_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000400;
              break;
            } // case 154
            case 162: {
              timezone_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000800;
              break;
            } // case 162
            case 170: {
              transferConfigName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00001000;
              break;
            } // case 170
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object user_ = "";
    /**
     * <pre>
     * SFTP credentials. `password` will
     * be tried first for authentication,
     * if left blank, `private_key` will be tried.
     * </pre>
     *
     * <code>string user = 4 [json_name = "user"];</code>
     * @return The user.
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * SFTP credentials. `password` will
     * be tried first for authentication,
     * if left blank, `private_key` will be tried.
     * </pre>
     *
     * <code>string user = 4 [json_name = "user"];</code>
     * @return The bytes for user.
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SFTP credentials. `password` will
     * be tried first for authentication,
     * if left blank, `private_key` will be tried.
     * </pre>
     *
     * <code>string user = 4 [json_name = "user"];</code>
     * @param value The user to set.
     * @return This builder for chaining.
     */
    public Builder setUser(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      user_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SFTP credentials. `password` will
     * be tried first for authentication,
     * if left blank, `private_key` will be tried.
     * </pre>
     *
     * <code>string user = 4 [json_name = "user"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUser() {
      user_ = getDefaultInstance().getUser();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SFTP credentials. `password` will
     * be tried first for authentication,
     * if left blank, `private_key` will be tried.
     * </pre>
     *
     * <code>string user = 4 [json_name = "user"];</code>
     * @param value The bytes for user to set.
     * @return This builder for chaining.
     */
    public Builder setUserBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      user_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object password_ = "";
    /**
     * <code>string password = 5 [json_name = "password"];</code>
     * @return The password.
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string password = 5 [json_name = "password"];</code>
     * @return The bytes for password.
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string password = 5 [json_name = "password"];</code>
     * @param value The password to set.
     * @return This builder for chaining.
     */
    public Builder setPassword(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      password_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string password = 5 [json_name = "password"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPassword() {
      password_ = getDefaultInstance().getPassword();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string password = 5 [json_name = "password"];</code>
     * @param value The bytes for password to set.
     * @return This builder for chaining.
     */
    public Builder setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      password_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object privateKey_ = "";
    /**
     * <code>string private_key = 6 [json_name = "privateKey"];</code>
     * @return The privateKey.
     */
    public java.lang.String getPrivateKey() {
      java.lang.Object ref = privateKey_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privateKey_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string private_key = 6 [json_name = "privateKey"];</code>
     * @return The bytes for privateKey.
     */
    public com.google.protobuf.ByteString
        getPrivateKeyBytes() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string private_key = 6 [json_name = "privateKey"];</code>
     * @param value The privateKey to set.
     * @return This builder for chaining.
     */
    public Builder setPrivateKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      privateKey_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string private_key = 6 [json_name = "privateKey"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPrivateKey() {
      privateKey_ = getDefaultInstance().getPrivateKey();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string private_key = 6 [json_name = "privateKey"];</code>
     * @param value The bytes for privateKey to set.
     * @return This builder for chaining.
     */
    public Builder setPrivateKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      privateKey_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object address_ = "";
    /**
     * <code>string address = 7 [json_name = "address"];</code>
     * @return The address.
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string address = 7 [json_name = "address"];</code>
     * @return The bytes for address.
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string address = 7 [json_name = "address"];</code>
     * @param value The address to set.
     * @return This builder for chaining.
     */
    public Builder setAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      address_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string address = 7 [json_name = "address"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAddress() {
      address_ = getDefaultInstance().getAddress();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string address = 7 [json_name = "address"];</code>
     * @param value The bytes for address to set.
     * @return This builder for chaining.
     */
    public Builder setAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      address_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object port_ = "";
    /**
     * <code>string port = 8 [json_name = "port"];</code>
     * @return The port.
     */
    public java.lang.String getPort() {
      java.lang.Object ref = port_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        port_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string port = 8 [json_name = "port"];</code>
     * @return The bytes for port.
     */
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = port_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        port_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string port = 8 [json_name = "port"];</code>
     * @param value The port to set.
     * @return This builder for chaining.
     */
    public Builder setPort(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      port_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>string port = 8 [json_name = "port"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPort() {
      port_ = getDefaultInstance().getPort();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>string port = 8 [json_name = "port"];</code>
     * @param value The bytes for port to set.
     * @return This builder for chaining.
     */
    public Builder setPortBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      port_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private com.tcn.cloud.api.api.commons.FilePattern filePattern_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.FilePattern, com.tcn.cloud.api.api.commons.FilePattern.Builder, com.tcn.cloud.api.api.commons.FilePatternOrBuilder> filePatternBuilder_;
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     * @return Whether the filePattern field is set.
     */
    public boolean hasFilePattern() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     * @return The filePattern.
     */
    public com.tcn.cloud.api.api.commons.FilePattern getFilePattern() {
      if (filePatternBuilder_ == null) {
        return filePattern_ == null ? com.tcn.cloud.api.api.commons.FilePattern.getDefaultInstance() : filePattern_;
      } else {
        return filePatternBuilder_.getMessage();
      }
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public Builder setFilePattern(com.tcn.cloud.api.api.commons.FilePattern value) {
      if (filePatternBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filePattern_ = value;
      } else {
        filePatternBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public Builder setFilePattern(
        com.tcn.cloud.api.api.commons.FilePattern.Builder builderForValue) {
      if (filePatternBuilder_ == null) {
        filePattern_ = builderForValue.build();
      } else {
        filePatternBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public Builder mergeFilePattern(com.tcn.cloud.api.api.commons.FilePattern value) {
      if (filePatternBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          filePattern_ != null &&
          filePattern_ != com.tcn.cloud.api.api.commons.FilePattern.getDefaultInstance()) {
          getFilePatternBuilder().mergeFrom(value);
        } else {
          filePattern_ = value;
        }
      } else {
        filePatternBuilder_.mergeFrom(value);
      }
      if (filePattern_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public Builder clearFilePattern() {
      bitField0_ = (bitField0_ & ~0x00000020);
      filePattern_ = null;
      if (filePatternBuilder_ != null) {
        filePatternBuilder_.dispose();
        filePatternBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public com.tcn.cloud.api.api.commons.FilePattern.Builder getFilePatternBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getFilePatternFieldBuilder().getBuilder();
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    public com.tcn.cloud.api.api.commons.FilePatternOrBuilder getFilePatternOrBuilder() {
      if (filePatternBuilder_ != null) {
        return filePatternBuilder_.getMessageOrBuilder();
      } else {
        return filePattern_ == null ?
            com.tcn.cloud.api.api.commons.FilePattern.getDefaultInstance() : filePattern_;
      }
    }
    /**
     * <code>.api.commons.FilePattern file_pattern = 13 [json_name = "filePattern"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.FilePattern, com.tcn.cloud.api.api.commons.FilePattern.Builder, com.tcn.cloud.api.api.commons.FilePatternOrBuilder> 
        getFilePatternFieldBuilder() {
      if (filePatternBuilder_ == null) {
        filePatternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.FilePattern, com.tcn.cloud.api.api.commons.FilePattern.Builder, com.tcn.cloud.api.api.commons.FilePatternOrBuilder>(
                getFilePattern(),
                getParentForChildren(),
                isClean());
        filePattern_ = null;
      }
      return filePatternBuilder_;
    }

    private boolean enabled_ ;
    /**
     * <pre>
     * We will only process if enabled
     * </pre>
     *
     * <code>bool enabled = 15 [json_name = "enabled"];</code>
     * @return The enabled.
     */
    @java.lang.Override
    public boolean getEnabled() {
      return enabled_;
    }
    /**
     * <pre>
     * We will only process if enabled
     * </pre>
     *
     * <code>bool enabled = 15 [json_name = "enabled"];</code>
     * @param value The enabled to set.
     * @return This builder for chaining.
     */
    public Builder setEnabled(boolean value) {

      enabled_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * We will only process if enabled
     * </pre>
     *
     * <code>bool enabled = 15 [json_name = "enabled"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEnabled() {
      bitField0_ = (bitField0_ & ~0x00000040);
      enabled_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object fileTemplateId_ = "";
    /**
     * <pre>
     * prefered/default template
     * </pre>
     *
     * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
     * @return The fileTemplateId.
     */
    public java.lang.String getFileTemplateId() {
      java.lang.Object ref = fileTemplateId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fileTemplateId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * prefered/default template
     * </pre>
     *
     * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
     * @return The bytes for fileTemplateId.
     */
    public com.google.protobuf.ByteString
        getFileTemplateIdBytes() {
      java.lang.Object ref = fileTemplateId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileTemplateId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * prefered/default template
     * </pre>
     *
     * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
     * @param value The fileTemplateId to set.
     * @return This builder for chaining.
     */
    public Builder setFileTemplateId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      fileTemplateId_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * prefered/default template
     * </pre>
     *
     * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFileTemplateId() {
      fileTemplateId_ = getDefaultInstance().getFileTemplateId();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * prefered/default template
     * </pre>
     *
     * <code>string file_template_id = 16 [json_name = "fileTemplateId"];</code>
     * @param value The bytes for fileTemplateId to set.
     * @return This builder for chaining.
     */
    public Builder setFileTemplateIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      fileTemplateId_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private boolean incremental_ ;
    /**
     * <code>bool incremental = 17 [json_name = "incremental"];</code>
     * @return The incremental.
     */
    @java.lang.Override
    public boolean getIncremental() {
      return incremental_;
    }
    /**
     * <code>bool incremental = 17 [json_name = "incremental"];</code>
     * @param value The incremental to set.
     * @return This builder for chaining.
     */
    public Builder setIncremental(boolean value) {

      incremental_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>bool incremental = 17 [json_name = "incremental"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIncremental() {
      bitField0_ = (bitField0_ & ~0x00000100);
      incremental_ = false;
      onChanged();
      return this;
    }

    private boolean encrypted_ ;
    /**
     * <pre>
     * Specifies whether the files to be imported
     * are encrypted with PGP key
     * </pre>
     *
     * <code>bool encrypted = 18 [json_name = "encrypted"];</code>
     * @return The encrypted.
     */
    @java.lang.Override
    public boolean getEncrypted() {
      return encrypted_;
    }
    /**
     * <pre>
     * Specifies whether the files to be imported
     * are encrypted with PGP key
     * </pre>
     *
     * <code>bool encrypted = 18 [json_name = "encrypted"];</code>
     * @param value The encrypted to set.
     * @return This builder for chaining.
     */
    public Builder setEncrypted(boolean value) {

      encrypted_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether the files to be imported
     * are encrypted with PGP key
     * </pre>
     *
     * <code>bool encrypted = 18 [json_name = "encrypted"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEncrypted() {
      bitField0_ = (bitField0_ & ~0x00000200);
      encrypted_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object cron_ = "";
    /**
     * <pre>
     * Should be a valid Cron expression
     * based on https://en.wikipedia.org/wiki/Cron
     * </pre>
     *
     * <code>string cron = 19 [json_name = "cron"];</code>
     * @return The cron.
     */
    public java.lang.String getCron() {
      java.lang.Object ref = cron_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cron_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Should be a valid Cron expression
     * based on https://en.wikipedia.org/wiki/Cron
     * </pre>
     *
     * <code>string cron = 19 [json_name = "cron"];</code>
     * @return The bytes for cron.
     */
    public com.google.protobuf.ByteString
        getCronBytes() {
      java.lang.Object ref = cron_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cron_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Should be a valid Cron expression
     * based on https://en.wikipedia.org/wiki/Cron
     * </pre>
     *
     * <code>string cron = 19 [json_name = "cron"];</code>
     * @param value The cron to set.
     * @return This builder for chaining.
     */
    public Builder setCron(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cron_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Should be a valid Cron expression
     * based on https://en.wikipedia.org/wiki/Cron
     * </pre>
     *
     * <code>string cron = 19 [json_name = "cron"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCron() {
      cron_ = getDefaultInstance().getCron();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Should be a valid Cron expression
     * based on https://en.wikipedia.org/wiki/Cron
     * </pre>
     *
     * <code>string cron = 19 [json_name = "cron"];</code>
     * @param value The bytes for cron to set.
     * @return This builder for chaining.
     */
    public Builder setCronBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cron_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private java.lang.Object timezone_ = "";
    /**
     * <pre>
     * Timezone to be used with the cron,
     * if left blank it will default to the
     * local time of whatever server it is on.
     * e.g. "America/Denver", "America/New_York"
     * Must exist in TZ database
     * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
     * </pre>
     *
     * <code>string timezone = 20 [json_name = "timezone"];</code>
     * @return The timezone.
     */
    public java.lang.String getTimezone() {
      java.lang.Object ref = timezone_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timezone_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Timezone to be used with the cron,
     * if left blank it will default to the
     * local time of whatever server it is on.
     * e.g. "America/Denver", "America/New_York"
     * Must exist in TZ database
     * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
     * </pre>
     *
     * <code>string timezone = 20 [json_name = "timezone"];</code>
     * @return The bytes for timezone.
     */
    public com.google.protobuf.ByteString
        getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Timezone to be used with the cron,
     * if left blank it will default to the
     * local time of whatever server it is on.
     * e.g. "America/Denver", "America/New_York"
     * Must exist in TZ database
     * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
     * </pre>
     *
     * <code>string timezone = 20 [json_name = "timezone"];</code>
     * @param value The timezone to set.
     * @return This builder for chaining.
     */
    public Builder setTimezone(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      timezone_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timezone to be used with the cron,
     * if left blank it will default to the
     * local time of whatever server it is on.
     * e.g. "America/Denver", "America/New_York"
     * Must exist in TZ database
     * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
     * </pre>
     *
     * <code>string timezone = 20 [json_name = "timezone"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTimezone() {
      timezone_ = getDefaultInstance().getTimezone();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Timezone to be used with the cron,
     * if left blank it will default to the
     * local time of whatever server it is on.
     * e.g. "America/Denver", "America/New_York"
     * Must exist in TZ database
     * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
     * </pre>
     *
     * <code>string timezone = 20 [json_name = "timezone"];</code>
     * @param value The bytes for timezone to set.
     * @return This builder for chaining.
     */
    public Builder setTimezoneBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      timezone_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private java.lang.Object transferConfigName_ = "";
    /**
     * <pre>
     * Name of the transfer_config, used to find sftp configuration
     * </pre>
     *
     * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
     * @return The transferConfigName.
     */
    public java.lang.String getTransferConfigName() {
      java.lang.Object ref = transferConfigName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transferConfigName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the transfer_config, used to find sftp configuration
     * </pre>
     *
     * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
     * @return The bytes for transferConfigName.
     */
    public com.google.protobuf.ByteString
        getTransferConfigNameBytes() {
      java.lang.Object ref = transferConfigName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transferConfigName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the transfer_config, used to find sftp configuration
     * </pre>
     *
     * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
     * @param value The transferConfigName to set.
     * @return This builder for chaining.
     */
    public Builder setTransferConfigName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      transferConfigName_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the transfer_config, used to find sftp configuration
     * </pre>
     *
     * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTransferConfigName() {
      transferConfigName_ = getDefaultInstance().getTransferConfigName();
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the transfer_config, used to find sftp configuration
     * </pre>
     *
     * <code>string transfer_config_name = 21 [json_name = "transferConfigName"];</code>
     * @param value The bytes for transferConfigName to set.
     * @return This builder for chaining.
     */
    public Builder setTransferConfigNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      transferConfigName_ = value;
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v0alpha.SftpImport)
  }

  // @@protoc_insertion_point(class_scope:api.v0alpha.SftpImport)
  private static final com.tcn.cloud.api.api.v0alpha.SftpImport DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v0alpha.SftpImport();
  }

  public static com.tcn.cloud.api.api.v0alpha.SftpImport getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SftpImport>
      PARSER = new com.google.protobuf.AbstractParser<SftpImport>() {
    @java.lang.Override
    public SftpImport parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SftpImport> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SftpImport> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.SftpImport getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

