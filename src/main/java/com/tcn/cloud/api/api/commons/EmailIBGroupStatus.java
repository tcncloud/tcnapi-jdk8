// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/email.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.EmailIBGroupStatus}
 */
public enum EmailIBGroupStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>IB_EMAIL_GROUP_UNKNOWN = 0;</code>
   */
  IB_EMAIL_GROUP_UNKNOWN(0),
  /**
   * <pre>
   *Inbound Email Group is being prepared for scheduler
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_PREPARING = 10000;</code>
   */
  IB_EMAIL_GROUP_PREPARING(10000),
  /**
   * <pre>
   *Inbound Email Group is waiting for scheduler
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SCHEDULED = 10010;</code>
   */
  IB_EMAIL_GROUP_SCHEDULED(10010),
  /**
   * <pre>
   *Inbound Email group is currently being executed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RUNNING = 10020;</code>
   */
  IB_EMAIL_GROUP_RUNNING(10020),
  /**
   * <pre>
   *Inbound Email group has been signaled to pause calls until further notice
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_PAUSED = 10030;</code>
   */
  IB_EMAIL_GROUP_PAUSED(10030),
  /**
   * <pre>
   *Inbound Email group is ready to restart after being paused
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RESUME = 10040;</code>
   */
  IB_EMAIL_GROUP_RESUME(10040),
  /**
   * <pre>
   *Inbound Email group running but with errors
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RUNNING_WITH_ERROR = 10041;</code>
   */
  IB_EMAIL_GROUP_RUNNING_WITH_ERROR(10041),
  /**
   * <pre>
   *Inbound Email group ris stopped because it hit a consecutive error limit
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_ERROR_STANDBY = 10042;</code>
   */
  IB_EMAIL_GROUP_ERROR_STANDBY(10042),
  /**
   * <pre>
   *Inbound Email group has been executed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_COMPLETED = 10050;</code>
   */
  IB_EMAIL_GROUP_COMPLETED(10050),
  /**
   * <pre>
   *Inbound Email group has been cancelled by user
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_CANCELLED_USER = 10060;</code>
   */
  IB_EMAIL_GROUP_CANCELLED_USER(10060),
  /**
   * <pre>
   *Inbound Email group has been cancelled by admin
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_CANCELLED_ADMIN = 10070;</code>
   */
  IB_EMAIL_GROUP_CANCELLED_ADMIN(10070),
  /**
   * <pre>
   *Inbound Email group has been executed and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_COMPLETED = 10150;</code>
   */
  IB_EMAIL_GROUP_SUMMED_COMPLETED(10150),
  /**
   * <pre>
   *Inbound Email group has been cancelled by the user and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_CANCELLED_USER = 10160;</code>
   */
  IB_EMAIL_GROUP_SUMMED_CANCELLED_USER(10160),
  /**
   * <pre>
   *Inbound Email group has been cancelled by the admin and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_CANCELLED_ADMIN = 10170;</code>
   */
  IB_EMAIL_GROUP_SUMMED_CANCELLED_ADMIN(10170),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>IB_EMAIL_GROUP_UNKNOWN = 0;</code>
   */
  public static final int IB_EMAIL_GROUP_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   *Inbound Email Group is being prepared for scheduler
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_PREPARING = 10000;</code>
   */
  public static final int IB_EMAIL_GROUP_PREPARING_VALUE = 10000;
  /**
   * <pre>
   *Inbound Email Group is waiting for scheduler
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SCHEDULED = 10010;</code>
   */
  public static final int IB_EMAIL_GROUP_SCHEDULED_VALUE = 10010;
  /**
   * <pre>
   *Inbound Email group is currently being executed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RUNNING = 10020;</code>
   */
  public static final int IB_EMAIL_GROUP_RUNNING_VALUE = 10020;
  /**
   * <pre>
   *Inbound Email group has been signaled to pause calls until further notice
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_PAUSED = 10030;</code>
   */
  public static final int IB_EMAIL_GROUP_PAUSED_VALUE = 10030;
  /**
   * <pre>
   *Inbound Email group is ready to restart after being paused
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RESUME = 10040;</code>
   */
  public static final int IB_EMAIL_GROUP_RESUME_VALUE = 10040;
  /**
   * <pre>
   *Inbound Email group running but with errors
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_RUNNING_WITH_ERROR = 10041;</code>
   */
  public static final int IB_EMAIL_GROUP_RUNNING_WITH_ERROR_VALUE = 10041;
  /**
   * <pre>
   *Inbound Email group ris stopped because it hit a consecutive error limit
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_ERROR_STANDBY = 10042;</code>
   */
  public static final int IB_EMAIL_GROUP_ERROR_STANDBY_VALUE = 10042;
  /**
   * <pre>
   *Inbound Email group has been executed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_COMPLETED = 10050;</code>
   */
  public static final int IB_EMAIL_GROUP_COMPLETED_VALUE = 10050;
  /**
   * <pre>
   *Inbound Email group has been cancelled by user
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_CANCELLED_USER = 10060;</code>
   */
  public static final int IB_EMAIL_GROUP_CANCELLED_USER_VALUE = 10060;
  /**
   * <pre>
   *Inbound Email group has been cancelled by admin
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_CANCELLED_ADMIN = 10070;</code>
   */
  public static final int IB_EMAIL_GROUP_CANCELLED_ADMIN_VALUE = 10070;
  /**
   * <pre>
   *Inbound Email group has been executed and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_COMPLETED = 10150;</code>
   */
  public static final int IB_EMAIL_GROUP_SUMMED_COMPLETED_VALUE = 10150;
  /**
   * <pre>
   *Inbound Email group has been cancelled by the user and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_CANCELLED_USER = 10160;</code>
   */
  public static final int IB_EMAIL_GROUP_SUMMED_CANCELLED_USER_VALUE = 10160;
  /**
   * <pre>
   *Inbound Email group has been cancelled by the admin and is summed
   * </pre>
   *
   * <code>IB_EMAIL_GROUP_SUMMED_CANCELLED_ADMIN = 10170;</code>
   */
  public static final int IB_EMAIL_GROUP_SUMMED_CANCELLED_ADMIN_VALUE = 10170;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EmailIBGroupStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EmailIBGroupStatus forNumber(int value) {
    switch (value) {
      case 0: return IB_EMAIL_GROUP_UNKNOWN;
      case 10000: return IB_EMAIL_GROUP_PREPARING;
      case 10010: return IB_EMAIL_GROUP_SCHEDULED;
      case 10020: return IB_EMAIL_GROUP_RUNNING;
      case 10030: return IB_EMAIL_GROUP_PAUSED;
      case 10040: return IB_EMAIL_GROUP_RESUME;
      case 10041: return IB_EMAIL_GROUP_RUNNING_WITH_ERROR;
      case 10042: return IB_EMAIL_GROUP_ERROR_STANDBY;
      case 10050: return IB_EMAIL_GROUP_COMPLETED;
      case 10060: return IB_EMAIL_GROUP_CANCELLED_USER;
      case 10070: return IB_EMAIL_GROUP_CANCELLED_ADMIN;
      case 10150: return IB_EMAIL_GROUP_SUMMED_COMPLETED;
      case 10160: return IB_EMAIL_GROUP_SUMMED_CANCELLED_USER;
      case 10170: return IB_EMAIL_GROUP_SUMMED_CANCELLED_ADMIN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EmailIBGroupStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EmailIBGroupStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EmailIBGroupStatus>() {
          public EmailIBGroupStatus findValueByNumber(int number) {
            return EmailIBGroupStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.EmailProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final EmailIBGroupStatus[] VALUES = values();

  public static EmailIBGroupStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EmailIBGroupStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.EmailIBGroupStatus)
}

