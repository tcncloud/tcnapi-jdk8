// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

/**
 * <pre>
 * Represents a performance metric
 * </pre>
 *
 * Protobuf type {@code api.v1alpha1.wfm.PerformanceMetric}
 */
public final class PerformanceMetric extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v1alpha1.wfm.PerformanceMetric)
    PerformanceMetricOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PerformanceMetric.newBuilder() to construct.
  private PerformanceMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PerformanceMetric() {
    metricType_ = 0;
    fteIntervals_ = java.util.Collections.emptyList();
    serviceLevelIntervals_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PerformanceMetric();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PerformanceMetric(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.tcn.cloud.api.api.commons.DatetimeRange.Builder subBuilder = null;
            if (dateRange_ != null) {
              subBuilder = dateRange_.toBuilder();
            }
            dateRange_ = input.readMessage(com.tcn.cloud.api.api.commons.DatetimeRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateRange_);
              dateRange_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            totalCallsRequired_ = input.readInt32();
            break;
          }
          case 24: {

            totalFtesAchieved_ = input.readInt32();
            break;
          }
          case 32: {

            numIntervalsWithRequiredCalls_ = input.readInt32();
            break;
          }
          case 40: {

            numIntervalsWithFtesButNoSchedules_ = input.readInt32();
            break;
          }
          case 48: {

            numIntervalsWithFtesButNoForecastedCalls_ = input.readInt32();
            break;
          }
          case 56: {

            totalUnscheduledCalls_ = input.readInt32();
            break;
          }
          case 64: {

            totalUnnecessaryFtes_ = input.readInt32();
            break;
          }
          case 72: {

            intervalWidthInMinutes_ = input.readInt32();
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            metricType_ = rawValue;
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              fteIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval>();
              mutable_bitField0_ |= 0x00000001;
            }
            fteIntervals_.add(
                input.readMessage(com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.parser(), extensionRegistry));
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              serviceLevelIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval>();
              mutable_bitField0_ |= 0x00000002;
            }
            serviceLevelIntervals_.add(
                input.readMessage(com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        fteIntervals_ = java.util.Collections.unmodifiableList(fteIntervals_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        serviceLevelIntervals_ = java.util.Collections.unmodifiableList(serviceLevelIntervals_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetric_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetric_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.class, com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.Builder.class);
  }

  public static final int DATE_RANGE_FIELD_NUMBER = 1;
  private com.tcn.cloud.api.api.commons.DatetimeRange dateRange_;
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   * @return Whether the dateRange field is set.
   */
  @java.lang.Override
  public boolean hasDateRange() {
    return dateRange_ != null;
  }
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   * @return The dateRange.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRange getDateRange() {
    return dateRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
  }
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDateRangeOrBuilder() {
    return getDateRange();
  }

  public static final int TOTAL_CALLS_REQUIRED_FIELD_NUMBER = 2;
  private int totalCallsRequired_;
  /**
   * <pre>
   * The total calls required over the &#64;date_range, as determined by the forecast.
   * </pre>
   *
   * <code>int32 total_calls_required = 2 [json_name = "totalCallsRequired"];</code>
   * @return The totalCallsRequired.
   */
  @java.lang.Override
  public int getTotalCallsRequired() {
    return totalCallsRequired_;
  }

  public static final int TOTAL_FTES_ACHIEVED_FIELD_NUMBER = 3;
  private int totalFtesAchieved_;
  /**
   * <pre>
   * The total calls the the schedule is likely to address with the current shift instances.
   * </pre>
   *
   * <code>int32 total_ftes_achieved = 3 [json_name = "totalFtesAchieved"];</code>
   * @return The totalFtesAchieved.
   */
  @java.lang.Override
  public int getTotalFtesAchieved() {
    return totalFtesAchieved_;
  }

  public static final int NUM_INTERVALS_WITH_REQUIRED_CALLS_FIELD_NUMBER = 4;
  private int numIntervalsWithRequiredCalls_;
  /**
   * <pre>
   * The number of intervals with required calls.
   * </pre>
   *
   * <code>int32 num_intervals_with_required_calls = 4 [json_name = "numIntervalsWithRequiredCalls"];</code>
   * @return The numIntervalsWithRequiredCalls.
   */
  @java.lang.Override
  public int getNumIntervalsWithRequiredCalls() {
    return numIntervalsWithRequiredCalls_;
  }

  public static final int NUM_INTERVALS_WITH_FTES_BUT_NO_SCHEDULES_FIELD_NUMBER = 5;
  private int numIntervalsWithFtesButNoSchedules_;
  /**
   * <pre>
   * The number of intervals with FTE's but no schedules.
   * </pre>
   *
   * <code>int32 num_intervals_with_ftes_but_no_schedules = 5 [json_name = "numIntervalsWithFtesButNoSchedules"];</code>
   * @return The numIntervalsWithFtesButNoSchedules.
   */
  @java.lang.Override
  public int getNumIntervalsWithFtesButNoSchedules() {
    return numIntervalsWithFtesButNoSchedules_;
  }

  public static final int NUM_INTERVALS_WITH_FTES_BUT_NO_FORECASTED_CALLS_FIELD_NUMBER = 6;
  private int numIntervalsWithFtesButNoForecastedCalls_;
  /**
   * <pre>
   * the number of intervals with FTE's but no forecasted calls.
   * </pre>
   *
   * <code>int32 num_intervals_with_ftes_but_no_forecasted_calls = 6 [json_name = "numIntervalsWithFtesButNoForecastedCalls"];</code>
   * @return The numIntervalsWithFtesButNoForecastedCalls.
   */
  @java.lang.Override
  public int getNumIntervalsWithFtesButNoForecastedCalls() {
    return numIntervalsWithFtesButNoForecastedCalls_;
  }

  public static final int TOTAL_UNSCHEDULED_CALLS_FIELD_NUMBER = 7;
  private int totalUnscheduledCalls_;
  /**
   * <pre>
   * The total calls forecsted where there are no FTE's scheduled.
   * </pre>
   *
   * <code>int32 total_unscheduled_calls = 7 [json_name = "totalUnscheduledCalls"];</code>
   * @return The totalUnscheduledCalls.
   */
  @java.lang.Override
  public int getTotalUnscheduledCalls() {
    return totalUnscheduledCalls_;
  }

  public static final int TOTAL_UNNECESSARY_FTES_FIELD_NUMBER = 8;
  private int totalUnnecessaryFtes_;
  /**
   * <pre>
   * The total number of FTE's scheduled where there were no forecasted calls.
   * </pre>
   *
   * <code>int32 total_unnecessary_ftes = 8 [json_name = "totalUnnecessaryFtes"];</code>
   * @return The totalUnnecessaryFtes.
   */
  @java.lang.Override
  public int getTotalUnnecessaryFtes() {
    return totalUnnecessaryFtes_;
  }

  public static final int INTERVAL_WIDTH_IN_MINUTES_FIELD_NUMBER = 9;
  private int intervalWidthInMinutes_;
  /**
   * <pre>
   * Width of each interval in minutes.
   * </pre>
   *
   * <code>int32 interval_width_in_minutes = 9 [json_name = "intervalWidthInMinutes"];</code>
   * @return The intervalWidthInMinutes.
   */
  @java.lang.Override
  public int getIntervalWidthInMinutes() {
    return intervalWidthInMinutes_;
  }

  public static final int METRIC_TYPE_FIELD_NUMBER = 10;
  private int metricType_;
  /**
   * <pre>
   * The type of metric being reported.
   * </pre>
   *
   * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
   * @return The enum numeric value on the wire for metricType.
   */
  @java.lang.Override public int getMetricTypeValue() {
    return metricType_;
  }
  /**
   * <pre>
   * The type of metric being reported.
   * </pre>
   *
   * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
   * @return The metricType.
   */
  @java.lang.Override public com.tcn.cloud.api.api.commons.PerformanceMetricType getMetricType() {
    @SuppressWarnings("deprecation")
    com.tcn.cloud.api.api.commons.PerformanceMetricType result = com.tcn.cloud.api.api.commons.PerformanceMetricType.valueOf(metricType_);
    return result == null ? com.tcn.cloud.api.api.commons.PerformanceMetricType.UNRECOGNIZED : result;
  }

  public static final int FTE_INTERVALS_FIELD_NUMBER = 11;
  private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval> fteIntervals_;
  /**
   * <pre>
   * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval> getFteIntervalsList() {
    return fteIntervals_;
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder> 
      getFteIntervalsOrBuilderList() {
    return fteIntervals_;
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
   */
  @java.lang.Override
  public int getFteIntervalsCount() {
    return fteIntervals_.size();
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval getFteIntervals(int index) {
    return fteIntervals_.get(index);
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder getFteIntervalsOrBuilder(
      int index) {
    return fteIntervals_.get(index);
  }

  public static final int SERVICE_LEVEL_INTERVALS_FIELD_NUMBER = 12;
  private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> serviceLevelIntervals_;
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> getServiceLevelIntervalsList() {
    return serviceLevelIntervals_;
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
      getServiceLevelIntervalsOrBuilderList() {
    return serviceLevelIntervals_;
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public int getServiceLevelIntervalsCount() {
    return serviceLevelIntervals_.size();
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval getServiceLevelIntervals(int index) {
    return serviceLevelIntervals_.get(index);
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder getServiceLevelIntervalsOrBuilder(
      int index) {
    return serviceLevelIntervals_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (dateRange_ != null) {
      output.writeMessage(1, getDateRange());
    }
    if (totalCallsRequired_ != 0) {
      output.writeInt32(2, totalCallsRequired_);
    }
    if (totalFtesAchieved_ != 0) {
      output.writeInt32(3, totalFtesAchieved_);
    }
    if (numIntervalsWithRequiredCalls_ != 0) {
      output.writeInt32(4, numIntervalsWithRequiredCalls_);
    }
    if (numIntervalsWithFtesButNoSchedules_ != 0) {
      output.writeInt32(5, numIntervalsWithFtesButNoSchedules_);
    }
    if (numIntervalsWithFtesButNoForecastedCalls_ != 0) {
      output.writeInt32(6, numIntervalsWithFtesButNoForecastedCalls_);
    }
    if (totalUnscheduledCalls_ != 0) {
      output.writeInt32(7, totalUnscheduledCalls_);
    }
    if (totalUnnecessaryFtes_ != 0) {
      output.writeInt32(8, totalUnnecessaryFtes_);
    }
    if (intervalWidthInMinutes_ != 0) {
      output.writeInt32(9, intervalWidthInMinutes_);
    }
    if (metricType_ != com.tcn.cloud.api.api.commons.PerformanceMetricType.FTE_REQUIRED_VS_ACHIEVED_SIMPLE.getNumber()) {
      output.writeEnum(10, metricType_);
    }
    for (int i = 0; i < fteIntervals_.size(); i++) {
      output.writeMessage(11, fteIntervals_.get(i));
    }
    for (int i = 0; i < serviceLevelIntervals_.size(); i++) {
      output.writeMessage(12, serviceLevelIntervals_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (dateRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDateRange());
    }
    if (totalCallsRequired_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, totalCallsRequired_);
    }
    if (totalFtesAchieved_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, totalFtesAchieved_);
    }
    if (numIntervalsWithRequiredCalls_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, numIntervalsWithRequiredCalls_);
    }
    if (numIntervalsWithFtesButNoSchedules_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, numIntervalsWithFtesButNoSchedules_);
    }
    if (numIntervalsWithFtesButNoForecastedCalls_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, numIntervalsWithFtesButNoForecastedCalls_);
    }
    if (totalUnscheduledCalls_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, totalUnscheduledCalls_);
    }
    if (totalUnnecessaryFtes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, totalUnnecessaryFtes_);
    }
    if (intervalWidthInMinutes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, intervalWidthInMinutes_);
    }
    if (metricType_ != com.tcn.cloud.api.api.commons.PerformanceMetricType.FTE_REQUIRED_VS_ACHIEVED_SIMPLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, metricType_);
    }
    for (int i = 0; i < fteIntervals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, fteIntervals_.get(i));
    }
    for (int i = 0; i < serviceLevelIntervals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, serviceLevelIntervals_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric other = (com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric) obj;

    if (hasDateRange() != other.hasDateRange()) return false;
    if (hasDateRange()) {
      if (!getDateRange()
          .equals(other.getDateRange())) return false;
    }
    if (getTotalCallsRequired()
        != other.getTotalCallsRequired()) return false;
    if (getTotalFtesAchieved()
        != other.getTotalFtesAchieved()) return false;
    if (getNumIntervalsWithRequiredCalls()
        != other.getNumIntervalsWithRequiredCalls()) return false;
    if (getNumIntervalsWithFtesButNoSchedules()
        != other.getNumIntervalsWithFtesButNoSchedules()) return false;
    if (getNumIntervalsWithFtesButNoForecastedCalls()
        != other.getNumIntervalsWithFtesButNoForecastedCalls()) return false;
    if (getTotalUnscheduledCalls()
        != other.getTotalUnscheduledCalls()) return false;
    if (getTotalUnnecessaryFtes()
        != other.getTotalUnnecessaryFtes()) return false;
    if (getIntervalWidthInMinutes()
        != other.getIntervalWidthInMinutes()) return false;
    if (metricType_ != other.metricType_) return false;
    if (!getFteIntervalsList()
        .equals(other.getFteIntervalsList())) return false;
    if (!getServiceLevelIntervalsList()
        .equals(other.getServiceLevelIntervalsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDateRange()) {
      hash = (37 * hash) + DATE_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getDateRange().hashCode();
    }
    hash = (37 * hash) + TOTAL_CALLS_REQUIRED_FIELD_NUMBER;
    hash = (53 * hash) + getTotalCallsRequired();
    hash = (37 * hash) + TOTAL_FTES_ACHIEVED_FIELD_NUMBER;
    hash = (53 * hash) + getTotalFtesAchieved();
    hash = (37 * hash) + NUM_INTERVALS_WITH_REQUIRED_CALLS_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithRequiredCalls();
    hash = (37 * hash) + NUM_INTERVALS_WITH_FTES_BUT_NO_SCHEDULES_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithFtesButNoSchedules();
    hash = (37 * hash) + NUM_INTERVALS_WITH_FTES_BUT_NO_FORECASTED_CALLS_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithFtesButNoForecastedCalls();
    hash = (37 * hash) + TOTAL_UNSCHEDULED_CALLS_FIELD_NUMBER;
    hash = (53 * hash) + getTotalUnscheduledCalls();
    hash = (37 * hash) + TOTAL_UNNECESSARY_FTES_FIELD_NUMBER;
    hash = (53 * hash) + getTotalUnnecessaryFtes();
    hash = (37 * hash) + INTERVAL_WIDTH_IN_MINUTES_FIELD_NUMBER;
    hash = (53 * hash) + getIntervalWidthInMinutes();
    hash = (37 * hash) + METRIC_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + metricType_;
    if (getFteIntervalsCount() > 0) {
      hash = (37 * hash) + FTE_INTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getFteIntervalsList().hashCode();
    }
    if (getServiceLevelIntervalsCount() > 0) {
      hash = (37 * hash) + SERVICE_LEVEL_INTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getServiceLevelIntervalsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a performance metric
   * </pre>
   *
   * Protobuf type {@code api.v1alpha1.wfm.PerformanceMetric}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v1alpha1.wfm.PerformanceMetric)
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetric_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetric_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.class, com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFteIntervalsFieldBuilder();
        getServiceLevelIntervalsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dateRangeBuilder_ == null) {
        dateRange_ = null;
      } else {
        dateRange_ = null;
        dateRangeBuilder_ = null;
      }
      totalCallsRequired_ = 0;

      totalFtesAchieved_ = 0;

      numIntervalsWithRequiredCalls_ = 0;

      numIntervalsWithFtesButNoSchedules_ = 0;

      numIntervalsWithFtesButNoForecastedCalls_ = 0;

      totalUnscheduledCalls_ = 0;

      totalUnnecessaryFtes_ = 0;

      intervalWidthInMinutes_ = 0;

      metricType_ = 0;

      if (fteIntervalsBuilder_ == null) {
        fteIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        fteIntervalsBuilder_.clear();
      }
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        serviceLevelIntervalsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetric_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric build() {
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric buildPartial() {
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric result = new com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric(this);
      int from_bitField0_ = bitField0_;
      if (dateRangeBuilder_ == null) {
        result.dateRange_ = dateRange_;
      } else {
        result.dateRange_ = dateRangeBuilder_.build();
      }
      result.totalCallsRequired_ = totalCallsRequired_;
      result.totalFtesAchieved_ = totalFtesAchieved_;
      result.numIntervalsWithRequiredCalls_ = numIntervalsWithRequiredCalls_;
      result.numIntervalsWithFtesButNoSchedules_ = numIntervalsWithFtesButNoSchedules_;
      result.numIntervalsWithFtesButNoForecastedCalls_ = numIntervalsWithFtesButNoForecastedCalls_;
      result.totalUnscheduledCalls_ = totalUnscheduledCalls_;
      result.totalUnnecessaryFtes_ = totalUnnecessaryFtes_;
      result.intervalWidthInMinutes_ = intervalWidthInMinutes_;
      result.metricType_ = metricType_;
      if (fteIntervalsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fteIntervals_ = java.util.Collections.unmodifiableList(fteIntervals_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fteIntervals_ = fteIntervals_;
      } else {
        result.fteIntervals_ = fteIntervalsBuilder_.build();
      }
      if (serviceLevelIntervalsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          serviceLevelIntervals_ = java.util.Collections.unmodifiableList(serviceLevelIntervals_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.serviceLevelIntervals_ = serviceLevelIntervals_;
      } else {
        result.serviceLevelIntervals_ = serviceLevelIntervalsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric) {
        return mergeFrom((com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric other) {
      if (other == com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric.getDefaultInstance()) return this;
      if (other.hasDateRange()) {
        mergeDateRange(other.getDateRange());
      }
      if (other.getTotalCallsRequired() != 0) {
        setTotalCallsRequired(other.getTotalCallsRequired());
      }
      if (other.getTotalFtesAchieved() != 0) {
        setTotalFtesAchieved(other.getTotalFtesAchieved());
      }
      if (other.getNumIntervalsWithRequiredCalls() != 0) {
        setNumIntervalsWithRequiredCalls(other.getNumIntervalsWithRequiredCalls());
      }
      if (other.getNumIntervalsWithFtesButNoSchedules() != 0) {
        setNumIntervalsWithFtesButNoSchedules(other.getNumIntervalsWithFtesButNoSchedules());
      }
      if (other.getNumIntervalsWithFtesButNoForecastedCalls() != 0) {
        setNumIntervalsWithFtesButNoForecastedCalls(other.getNumIntervalsWithFtesButNoForecastedCalls());
      }
      if (other.getTotalUnscheduledCalls() != 0) {
        setTotalUnscheduledCalls(other.getTotalUnscheduledCalls());
      }
      if (other.getTotalUnnecessaryFtes() != 0) {
        setTotalUnnecessaryFtes(other.getTotalUnnecessaryFtes());
      }
      if (other.getIntervalWidthInMinutes() != 0) {
        setIntervalWidthInMinutes(other.getIntervalWidthInMinutes());
      }
      if (other.metricType_ != 0) {
        setMetricTypeValue(other.getMetricTypeValue());
      }
      if (fteIntervalsBuilder_ == null) {
        if (!other.fteIntervals_.isEmpty()) {
          if (fteIntervals_.isEmpty()) {
            fteIntervals_ = other.fteIntervals_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFteIntervalsIsMutable();
            fteIntervals_.addAll(other.fteIntervals_);
          }
          onChanged();
        }
      } else {
        if (!other.fteIntervals_.isEmpty()) {
          if (fteIntervalsBuilder_.isEmpty()) {
            fteIntervalsBuilder_.dispose();
            fteIntervalsBuilder_ = null;
            fteIntervals_ = other.fteIntervals_;
            bitField0_ = (bitField0_ & ~0x00000001);
            fteIntervalsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFteIntervalsFieldBuilder() : null;
          } else {
            fteIntervalsBuilder_.addAllMessages(other.fteIntervals_);
          }
        }
      }
      if (serviceLevelIntervalsBuilder_ == null) {
        if (!other.serviceLevelIntervals_.isEmpty()) {
          if (serviceLevelIntervals_.isEmpty()) {
            serviceLevelIntervals_ = other.serviceLevelIntervals_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureServiceLevelIntervalsIsMutable();
            serviceLevelIntervals_.addAll(other.serviceLevelIntervals_);
          }
          onChanged();
        }
      } else {
        if (!other.serviceLevelIntervals_.isEmpty()) {
          if (serviceLevelIntervalsBuilder_.isEmpty()) {
            serviceLevelIntervalsBuilder_.dispose();
            serviceLevelIntervalsBuilder_ = null;
            serviceLevelIntervals_ = other.serviceLevelIntervals_;
            bitField0_ = (bitField0_ & ~0x00000002);
            serviceLevelIntervalsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getServiceLevelIntervalsFieldBuilder() : null;
          } else {
            serviceLevelIntervalsBuilder_.addAllMessages(other.serviceLevelIntervals_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.tcn.cloud.api.api.commons.DatetimeRange dateRange_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> dateRangeBuilder_;
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     * @return Whether the dateRange field is set.
     */
    public boolean hasDateRange() {
      return dateRangeBuilder_ != null || dateRange_ != null;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     * @return The dateRange.
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange getDateRange() {
      if (dateRangeBuilder_ == null) {
        return dateRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
      } else {
        return dateRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder setDateRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (dateRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateRange_ = value;
        onChanged();
      } else {
        dateRangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder setDateRange(
        com.tcn.cloud.api.api.commons.DatetimeRange.Builder builderForValue) {
      if (dateRangeBuilder_ == null) {
        dateRange_ = builderForValue.build();
        onChanged();
      } else {
        dateRangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder mergeDateRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (dateRangeBuilder_ == null) {
        if (dateRange_ != null) {
          dateRange_ =
            com.tcn.cloud.api.api.commons.DatetimeRange.newBuilder(dateRange_).mergeFrom(value).buildPartial();
        } else {
          dateRange_ = value;
        }
        onChanged();
      } else {
        dateRangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder clearDateRange() {
      if (dateRangeBuilder_ == null) {
        dateRange_ = null;
        onChanged();
      } else {
        dateRange_ = null;
        dateRangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange.Builder getDateRangeBuilder() {
      
      onChanged();
      return getDateRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDateRangeOrBuilder() {
      if (dateRangeBuilder_ != null) {
        return dateRangeBuilder_.getMessageOrBuilder();
      } else {
        return dateRange_ == null ?
            com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
      }
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> 
        getDateRangeFieldBuilder() {
      if (dateRangeBuilder_ == null) {
        dateRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder>(
                getDateRange(),
                getParentForChildren(),
                isClean());
        dateRange_ = null;
      }
      return dateRangeBuilder_;
    }

    private int totalCallsRequired_ ;
    /**
     * <pre>
     * The total calls required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>int32 total_calls_required = 2 [json_name = "totalCallsRequired"];</code>
     * @return The totalCallsRequired.
     */
    @java.lang.Override
    public int getTotalCallsRequired() {
      return totalCallsRequired_;
    }
    /**
     * <pre>
     * The total calls required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>int32 total_calls_required = 2 [json_name = "totalCallsRequired"];</code>
     * @param value The totalCallsRequired to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCallsRequired(int value) {
      
      totalCallsRequired_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total calls required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>int32 total_calls_required = 2 [json_name = "totalCallsRequired"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCallsRequired() {
      
      totalCallsRequired_ = 0;
      onChanged();
      return this;
    }

    private int totalFtesAchieved_ ;
    /**
     * <pre>
     * The total calls the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>int32 total_ftes_achieved = 3 [json_name = "totalFtesAchieved"];</code>
     * @return The totalFtesAchieved.
     */
    @java.lang.Override
    public int getTotalFtesAchieved() {
      return totalFtesAchieved_;
    }
    /**
     * <pre>
     * The total calls the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>int32 total_ftes_achieved = 3 [json_name = "totalFtesAchieved"];</code>
     * @param value The totalFtesAchieved to set.
     * @return This builder for chaining.
     */
    public Builder setTotalFtesAchieved(int value) {
      
      totalFtesAchieved_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total calls the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>int32 total_ftes_achieved = 3 [json_name = "totalFtesAchieved"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalFtesAchieved() {
      
      totalFtesAchieved_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithRequiredCalls_ ;
    /**
     * <pre>
     * The number of intervals with required calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_required_calls = 4 [json_name = "numIntervalsWithRequiredCalls"];</code>
     * @return The numIntervalsWithRequiredCalls.
     */
    @java.lang.Override
    public int getNumIntervalsWithRequiredCalls() {
      return numIntervalsWithRequiredCalls_;
    }
    /**
     * <pre>
     * The number of intervals with required calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_required_calls = 4 [json_name = "numIntervalsWithRequiredCalls"];</code>
     * @param value The numIntervalsWithRequiredCalls to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithRequiredCalls(int value) {
      
      numIntervalsWithRequiredCalls_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of intervals with required calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_required_calls = 4 [json_name = "numIntervalsWithRequiredCalls"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithRequiredCalls() {
      
      numIntervalsWithRequiredCalls_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithFtesButNoSchedules_ ;
    /**
     * <pre>
     * The number of intervals with FTE's but no schedules.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_schedules = 5 [json_name = "numIntervalsWithFtesButNoSchedules"];</code>
     * @return The numIntervalsWithFtesButNoSchedules.
     */
    @java.lang.Override
    public int getNumIntervalsWithFtesButNoSchedules() {
      return numIntervalsWithFtesButNoSchedules_;
    }
    /**
     * <pre>
     * The number of intervals with FTE's but no schedules.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_schedules = 5 [json_name = "numIntervalsWithFtesButNoSchedules"];</code>
     * @param value The numIntervalsWithFtesButNoSchedules to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithFtesButNoSchedules(int value) {
      
      numIntervalsWithFtesButNoSchedules_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The number of intervals with FTE's but no schedules.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_schedules = 5 [json_name = "numIntervalsWithFtesButNoSchedules"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithFtesButNoSchedules() {
      
      numIntervalsWithFtesButNoSchedules_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithFtesButNoForecastedCalls_ ;
    /**
     * <pre>
     * the number of intervals with FTE's but no forecasted calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_forecasted_calls = 6 [json_name = "numIntervalsWithFtesButNoForecastedCalls"];</code>
     * @return The numIntervalsWithFtesButNoForecastedCalls.
     */
    @java.lang.Override
    public int getNumIntervalsWithFtesButNoForecastedCalls() {
      return numIntervalsWithFtesButNoForecastedCalls_;
    }
    /**
     * <pre>
     * the number of intervals with FTE's but no forecasted calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_forecasted_calls = 6 [json_name = "numIntervalsWithFtesButNoForecastedCalls"];</code>
     * @param value The numIntervalsWithFtesButNoForecastedCalls to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithFtesButNoForecastedCalls(int value) {
      
      numIntervalsWithFtesButNoForecastedCalls_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the number of intervals with FTE's but no forecasted calls.
     * </pre>
     *
     * <code>int32 num_intervals_with_ftes_but_no_forecasted_calls = 6 [json_name = "numIntervalsWithFtesButNoForecastedCalls"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithFtesButNoForecastedCalls() {
      
      numIntervalsWithFtesButNoForecastedCalls_ = 0;
      onChanged();
      return this;
    }

    private int totalUnscheduledCalls_ ;
    /**
     * <pre>
     * The total calls forecsted where there are no FTE's scheduled.
     * </pre>
     *
     * <code>int32 total_unscheduled_calls = 7 [json_name = "totalUnscheduledCalls"];</code>
     * @return The totalUnscheduledCalls.
     */
    @java.lang.Override
    public int getTotalUnscheduledCalls() {
      return totalUnscheduledCalls_;
    }
    /**
     * <pre>
     * The total calls forecsted where there are no FTE's scheduled.
     * </pre>
     *
     * <code>int32 total_unscheduled_calls = 7 [json_name = "totalUnscheduledCalls"];</code>
     * @param value The totalUnscheduledCalls to set.
     * @return This builder for chaining.
     */
    public Builder setTotalUnscheduledCalls(int value) {
      
      totalUnscheduledCalls_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total calls forecsted where there are no FTE's scheduled.
     * </pre>
     *
     * <code>int32 total_unscheduled_calls = 7 [json_name = "totalUnscheduledCalls"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalUnscheduledCalls() {
      
      totalUnscheduledCalls_ = 0;
      onChanged();
      return this;
    }

    private int totalUnnecessaryFtes_ ;
    /**
     * <pre>
     * The total number of FTE's scheduled where there were no forecasted calls.
     * </pre>
     *
     * <code>int32 total_unnecessary_ftes = 8 [json_name = "totalUnnecessaryFtes"];</code>
     * @return The totalUnnecessaryFtes.
     */
    @java.lang.Override
    public int getTotalUnnecessaryFtes() {
      return totalUnnecessaryFtes_;
    }
    /**
     * <pre>
     * The total number of FTE's scheduled where there were no forecasted calls.
     * </pre>
     *
     * <code>int32 total_unnecessary_ftes = 8 [json_name = "totalUnnecessaryFtes"];</code>
     * @param value The totalUnnecessaryFtes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalUnnecessaryFtes(int value) {
      
      totalUnnecessaryFtes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of FTE's scheduled where there were no forecasted calls.
     * </pre>
     *
     * <code>int32 total_unnecessary_ftes = 8 [json_name = "totalUnnecessaryFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalUnnecessaryFtes() {
      
      totalUnnecessaryFtes_ = 0;
      onChanged();
      return this;
    }

    private int intervalWidthInMinutes_ ;
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 9 [json_name = "intervalWidthInMinutes"];</code>
     * @return The intervalWidthInMinutes.
     */
    @java.lang.Override
    public int getIntervalWidthInMinutes() {
      return intervalWidthInMinutes_;
    }
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 9 [json_name = "intervalWidthInMinutes"];</code>
     * @param value The intervalWidthInMinutes to set.
     * @return This builder for chaining.
     */
    public Builder setIntervalWidthInMinutes(int value) {
      
      intervalWidthInMinutes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 9 [json_name = "intervalWidthInMinutes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIntervalWidthInMinutes() {
      
      intervalWidthInMinutes_ = 0;
      onChanged();
      return this;
    }

    private int metricType_ = 0;
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
     * @return The enum numeric value on the wire for metricType.
     */
    @java.lang.Override public int getMetricTypeValue() {
      return metricType_;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
     * @param value The enum numeric value on the wire for metricType to set.
     * @return This builder for chaining.
     */
    public Builder setMetricTypeValue(int value) {
      
      metricType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
     * @return The metricType.
     */
    @java.lang.Override
    public com.tcn.cloud.api.api.commons.PerformanceMetricType getMetricType() {
      @SuppressWarnings("deprecation")
      com.tcn.cloud.api.api.commons.PerformanceMetricType result = com.tcn.cloud.api.api.commons.PerformanceMetricType.valueOf(metricType_);
      return result == null ? com.tcn.cloud.api.api.commons.PerformanceMetricType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
     * @param value The metricType to set.
     * @return This builder for chaining.
     */
    public Builder setMetricType(com.tcn.cloud.api.api.commons.PerformanceMetricType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      metricType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 10 [json_name = "metricType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMetricType() {
      
      metricType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval> fteIntervals_ =
      java.util.Collections.emptyList();
    private void ensureFteIntervalsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fteIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval>(fteIntervals_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder> fteIntervalsBuilder_;

    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval> getFteIntervalsList() {
      if (fteIntervalsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fteIntervals_);
      } else {
        return fteIntervalsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public int getFteIntervalsCount() {
      if (fteIntervalsBuilder_ == null) {
        return fteIntervals_.size();
      } else {
        return fteIntervalsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval getFteIntervals(int index) {
      if (fteIntervalsBuilder_ == null) {
        return fteIntervals_.get(index);
      } else {
        return fteIntervalsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder setFteIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval value) {
      if (fteIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteIntervalsIsMutable();
        fteIntervals_.set(index, value);
        onChanged();
      } else {
        fteIntervalsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder setFteIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder builderForValue) {
      if (fteIntervalsBuilder_ == null) {
        ensureFteIntervalsIsMutable();
        fteIntervals_.set(index, builderForValue.build());
        onChanged();
      } else {
        fteIntervalsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder addFteIntervals(com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval value) {
      if (fteIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteIntervalsIsMutable();
        fteIntervals_.add(value);
        onChanged();
      } else {
        fteIntervalsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder addFteIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval value) {
      if (fteIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteIntervalsIsMutable();
        fteIntervals_.add(index, value);
        onChanged();
      } else {
        fteIntervalsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder addFteIntervals(
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder builderForValue) {
      if (fteIntervalsBuilder_ == null) {
        ensureFteIntervalsIsMutable();
        fteIntervals_.add(builderForValue.build());
        onChanged();
      } else {
        fteIntervalsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder addFteIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder builderForValue) {
      if (fteIntervalsBuilder_ == null) {
        ensureFteIntervalsIsMutable();
        fteIntervals_.add(index, builderForValue.build());
        onChanged();
      } else {
        fteIntervalsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder addAllFteIntervals(
        java.lang.Iterable<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval> values) {
      if (fteIntervalsBuilder_ == null) {
        ensureFteIntervalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fteIntervals_);
        onChanged();
      } else {
        fteIntervalsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder clearFteIntervals() {
      if (fteIntervalsBuilder_ == null) {
        fteIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        fteIntervalsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public Builder removeFteIntervals(int index) {
      if (fteIntervalsBuilder_ == null) {
        ensureFteIntervalsIsMutable();
        fteIntervals_.remove(index);
        onChanged();
      } else {
        fteIntervalsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder getFteIntervalsBuilder(
        int index) {
      return getFteIntervalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder getFteIntervalsOrBuilder(
        int index) {
      if (fteIntervalsBuilder_ == null) {
        return fteIntervals_.get(index);  } else {
        return fteIntervalsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder> 
         getFteIntervalsOrBuilderList() {
      if (fteIntervalsBuilder_ != null) {
        return fteIntervalsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fteIntervals_);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder addFteIntervalsBuilder() {
      return getFteIntervalsFieldBuilder().addBuilder(
          com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder addFteIntervalsBuilder(
        int index) {
      return getFteIntervalsFieldBuilder().addBuilder(
          index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedInterval fte_intervals = 11 [json_name = "fteIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder> 
         getFteIntervalsBuilderList() {
      return getFteIntervalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder> 
        getFteIntervalsFieldBuilder() {
      if (fteIntervalsBuilder_ == null) {
        fteIntervalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedIntervalOrBuilder>(
                fteIntervals_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fteIntervals_ = null;
      }
      return fteIntervalsBuilder_;
    }

    private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> serviceLevelIntervals_ =
      java.util.Collections.emptyList();
    private void ensureServiceLevelIntervalsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        serviceLevelIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval>(serviceLevelIntervals_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> serviceLevelIntervalsBuilder_;

    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> getServiceLevelIntervalsList() {
      if (serviceLevelIntervalsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(serviceLevelIntervals_);
      } else {
        return serviceLevelIntervalsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public int getServiceLevelIntervalsCount() {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.size();
      } else {
        return serviceLevelIntervalsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval getServiceLevelIntervals(int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.get(index);
      } else {
        return serviceLevelIntervalsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder setServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.set(index, value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder setServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.set(index, builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(index, value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(index, builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addAllServiceLevelIntervals(
        java.lang.Iterable<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> values) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, serviceLevelIntervals_);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder clearServiceLevelIntervals() {
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder removeServiceLevelIntervals(int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.remove(index);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder getServiceLevelIntervalsBuilder(
        int index) {
      return getServiceLevelIntervalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder getServiceLevelIntervalsOrBuilder(
        int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.get(index);  } else {
        return serviceLevelIntervalsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
         getServiceLevelIntervalsOrBuilderList() {
      if (serviceLevelIntervalsBuilder_ != null) {
        return serviceLevelIntervalsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(serviceLevelIntervals_);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder addServiceLevelIntervalsBuilder() {
      return getServiceLevelIntervalsFieldBuilder().addBuilder(
          com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder addServiceLevelIntervalsBuilder(
        int index) {
      return getServiceLevelIntervalsFieldBuilder().addBuilder(
          index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 12 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder> 
         getServiceLevelIntervalsBuilderList() {
      return getServiceLevelIntervalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
        getServiceLevelIntervalsFieldBuilder() {
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder>(
                serviceLevelIntervals_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        serviceLevelIntervals_ = null;
      }
      return serviceLevelIntervalsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v1alpha1.wfm.PerformanceMetric)
  }

  // @@protoc_insertion_point(class_scope:api.v1alpha1.wfm.PerformanceMetric)
  private static final com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric();
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PerformanceMetric>
      PARSER = new com.google.protobuf.AbstractParser<PerformanceMetric>() {
    @java.lang.Override
    public PerformanceMetric parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PerformanceMetric(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PerformanceMetric> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PerformanceMetric> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetric getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

