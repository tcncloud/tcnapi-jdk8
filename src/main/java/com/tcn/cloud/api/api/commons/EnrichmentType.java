// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/lms.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.EnrichmentType}
 */
public enum EnrichmentType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ENRICHMENT_TYPE_OR = 0;</code>
   */
  ENRICHMENT_TYPE_OR(0),
  /**
   * <code>ENRICHMENT_TYPE_XOR = 1;</code>
   */
  ENRICHMENT_TYPE_XOR(1),
  /**
   * <code>ENRICHMENT_TYPE_AND = 2;</code>
   */
  ENRICHMENT_TYPE_AND(2),
  /**
   * <code>ENRICHMENT_TYPE_JOIN = 3;</code>
   */
  ENRICHMENT_TYPE_JOIN(3),
  /**
   * <code>ENRICHMENT_TYPE_NOT = 4;</code>
   */
  ENRICHMENT_TYPE_NOT(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ENRICHMENT_TYPE_OR = 0;</code>
   */
  public static final int ENRICHMENT_TYPE_OR_VALUE = 0;
  /**
   * <code>ENRICHMENT_TYPE_XOR = 1;</code>
   */
  public static final int ENRICHMENT_TYPE_XOR_VALUE = 1;
  /**
   * <code>ENRICHMENT_TYPE_AND = 2;</code>
   */
  public static final int ENRICHMENT_TYPE_AND_VALUE = 2;
  /**
   * <code>ENRICHMENT_TYPE_JOIN = 3;</code>
   */
  public static final int ENRICHMENT_TYPE_JOIN_VALUE = 3;
  /**
   * <code>ENRICHMENT_TYPE_NOT = 4;</code>
   */
  public static final int ENRICHMENT_TYPE_NOT_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EnrichmentType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EnrichmentType forNumber(int value) {
    switch (value) {
      case 0: return ENRICHMENT_TYPE_OR;
      case 1: return ENRICHMENT_TYPE_XOR;
      case 2: return ENRICHMENT_TYPE_AND;
      case 3: return ENRICHMENT_TYPE_JOIN;
      case 4: return ENRICHMENT_TYPE_NOT;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EnrichmentType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EnrichmentType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EnrichmentType>() {
          public EnrichmentType findValueByNumber(int number) {
            return EnrichmentType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.LmsProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final EnrichmentType[] VALUES = values();

  public static EnrichmentType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EnrichmentType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.EnrichmentType)
}

