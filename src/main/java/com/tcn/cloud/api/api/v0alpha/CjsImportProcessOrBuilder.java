// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface CjsImportProcessOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.CjsImportProcess)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies which CJS List to import from
   * </pre>
   *
   * <code>string cjs_collection_id = 3 [json_name = "cjsCollectionId"];</code>
   * @return The cjsCollectionId.
   */
  java.lang.String getCjsCollectionId();
  /**
   * <pre>
   * Specifies which CJS List to import from
   * </pre>
   *
   * <code>string cjs_collection_id = 3 [json_name = "cjsCollectionId"];</code>
   * @return The bytes for cjsCollectionId.
   */
  com.google.protobuf.ByteString
      getCjsCollectionIdBytes();

  /**
   * <pre>
   * Enable/Disable the process
   * </pre>
   *
   * <code>bool enabled = 5 [json_name = "enabled"];</code>
   * @return The enabled.
   */
  boolean getEnabled();

  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 6 [json_name = "cron"];</code>
   * @return The cron.
   */
  java.lang.String getCron();
  /**
   * <pre>
   * Should be a valid Cron expression
   * based on https://en.wikipedia.org/wiki/Cron
   * </pre>
   *
   * <code>string cron = 6 [json_name = "cron"];</code>
   * @return The bytes for cron.
   */
  com.google.protobuf.ByteString
      getCronBytes();

  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 7 [json_name = "timezone"];</code>
   * @return The timezone.
   */
  java.lang.String getTimezone();
  /**
   * <pre>
   * Timezone to be used with the cron,
   * if left blank it will default to the
   * local time of whatever server it is on.
   * e.g. "America/Denver", "America/New_York"
   * Must exist in TZ database
   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
   * </pre>
   *
   * <code>string timezone = 7 [json_name = "timezone"];</code>
   * @return The bytes for timezone.
   */
  com.google.protobuf.ByteString
      getTimezoneBytes();

  /**
   * <pre>
   * Specifies if a dedup should be performed when importing
   * </pre>
   *
   * <code>bool dedup = 8 [json_name = "dedup"];</code>
   * @return The dedup.
   */
  boolean getDedup();
}
