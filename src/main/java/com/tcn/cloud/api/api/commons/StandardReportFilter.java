// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/org_preferences.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.StandardReportFilter}
 */
public enum StandardReportFilter
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * WHERE_NO_PREFERENCE
   * </pre>
   *
   * <code>NO_PREFERENCE = 0;</code>
   */
  NO_PREFERENCE(0),
  /**
   * <pre>
   * WHERE_ANSWERED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_CALLS = 1;</code>
   */
  FILTER_BY_ANSWERED_CALLS(1),
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_HANGUP_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_HANGUPS = 2;</code>
   */
  FILTER_BY_ANSWERED_HANGUPS(2),
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_LINKCALL = 3;</code>
   */
  FILTER_BY_ANSWERED_LINKCALL(3),
  /**
   * <pre>
   * WHERE_ANY_KEY
   * </pre>
   *
   * <code>FILTER_BY_ANY_KEY_PRESSED = 4;</code>
   */
  FILTER_BY_ANY_KEY_PRESSED(4),
  /**
   * <pre>
   * WHERE_BUSY_CALLS
   * </pre>
   *
   * <code>FILTER_BY_BUSY = 5;</code>
   */
  FILTER_BY_BUSY(5),
  /**
   * <pre>
   * WHERE_CANCELED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CANCELED_CALLS = 6;</code>
   */
  FILTER_BY_CANCELED_CALLS(6),
  /**
   * <pre>
   * WHERE_DIGIT_RESPONSE_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CONFIRM_KEYS_3_THROUGH_6 = 7;</code>
   */
  FILTER_BY_CONFIRM_KEYS_3_THROUGH_6(7),
  /**
   * <pre>
   * WHERE_CONNECTED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CONNECTED_CALLS = 8;</code>
   */
  FILTER_BY_CONNECTED_CALLS(8),
  /**
   * <pre>
   * WHERE_CANCELED_DNCL_CALLS
   * </pre>
   *
   * <code>FILTER_BY_DNCL_CANCELED = 9;</code>
   */
  FILTER_BY_DNCL_CANCELED(9),
  /**
   * <pre>
   * WHERE_FAILED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_FAILED_CALLS = 10;</code>
   */
  FILTER_BY_FAILED_CALLS(10),
  /**
   * <pre>
   * WHERE_INVALID_CALLS
   * </pre>
   *
   * <code>FILTER_BY_INVALID_CALLS = 11;</code>
   */
  FILTER_BY_INVALID_CALLS(11),
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_ABANDONNED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_LINKCALL_ABANDONED = 12;</code>
   */
  FILTER_BY_LINKCALL_ABANDONED(12),
  /**
   * <pre>
   * WHERE_MACHINE_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_CALLS = 13;</code>
   */
  FILTER_BY_MACHINE_CALLS(13),
  /**
   * <pre>
   * WHERE_MACHINE_DELIVERED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_DELIVERY = 14;</code>
   */
  FILTER_BY_MACHINE_DELIVERY(14),
  /**
   * <pre>
   * WHERE_MACHINE_HANGUP_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_HANGUP = 15;</code>
   */
  FILTER_BY_MACHINE_HANGUP(15),
  /**
   * <pre>
   * WHERE_MACHINE_PLUS_ANY_KEY
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_AND_ANY_KEY = 16;</code>
   */
  FILTER_BY_MACHINE_AND_ANY_KEY(16),
  /**
   * <pre>
   * WHERE_NOANSWER_CALLS
   * </pre>
   *
   * <code>FILTER_BY_NO_ANSWER = 17;</code>
   */
  FILTER_BY_NO_ANSWER(17),
  /**
   * <pre>
   * WHERE_NO_KEYS_PRESSED
   * </pre>
   *
   * <code>FILTER_BY_NO_KEYS_PRESSED = 18;</code>
   */
  FILTER_BY_NO_KEYS_PRESSED(18),
  /**
   * <pre>
   * WHERE_NOT_CANCELED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_NOT_CANCELED_CALLS = 19;</code>
   */
  FILTER_BY_NOT_CANCELED_CALLS(19),
  /**
   * <pre>
   * WHERE_UNCONNECTED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_UNCONNECTED_CALLS = 20;</code>
   */
  FILTER_BY_UNCONNECTED_CALLS(20),
  /**
   * <pre>
   * WHERE_UNCONNECTED_EXCLUDE_INVALID
   * </pre>
   *
   * <code>FILTER_BY_UNCONNECTED_EXCLUDE_INVALID = 21;</code>
   */
  FILTER_BY_UNCONNECTED_EXCLUDE_INVALID(21),
  /**
   * <pre>
   * WHERE_DIGIT_0_KEY
   * </pre>
   *
   * <code>FILTER_BY_0_KEY = 22;</code>
   */
  FILTER_BY_0_KEY(22),
  /**
   * <pre>
   * WHERE_DIGIT_1_KEY
   * </pre>
   *
   * <code>FILTER_BY_1_KEY = 23;</code>
   */
  FILTER_BY_1_KEY(23),
  /**
   * <pre>
   * WHERE_DIGIT_2_KEY
   * </pre>
   *
   * <code>FILTER_BY_2_KEY = 24;</code>
   */
  FILTER_BY_2_KEY(24),
  /**
   * <pre>
   * WHERE_DIGIT_3_KEY
   * </pre>
   *
   * <code>FILTER_BY_3_KEY = 25;</code>
   */
  FILTER_BY_3_KEY(25),
  /**
   * <pre>
   * WHERE_DIGIT_4_KEY
   * </pre>
   *
   * <code>FILTER_BY_4_KEY = 26;</code>
   */
  FILTER_BY_4_KEY(26),
  /**
   * <pre>
   * WHERE_DIGIT_5_KEY
   * </pre>
   *
   * <code>FILTER_BY_5_KEY = 27;</code>
   */
  FILTER_BY_5_KEY(27),
  /**
   * <pre>
   * WHERE_DIGIT_6_KEY
   * </pre>
   *
   * <code>FILTER_BY_6_KEY = 28;</code>
   */
  FILTER_BY_6_KEY(28),
  /**
   * <pre>
   * WHERE_DIGIT_7_KEY
   * </pre>
   *
   * <code>FILTER_BY_7_KEY = 29;</code>
   */
  FILTER_BY_7_KEY(29),
  /**
   * <pre>
   * WHERE_DIGIT_8_KEY
   * </pre>
   *
   * <code>FILTER_BY_8_KEY = 30;</code>
   */
  FILTER_BY_8_KEY(30),
  /**
   * <pre>
   * WHERE_DIGIT_9_KEY
   * </pre>
   *
   * <code>FILTER_BY_9_KEY = 31;</code>
   */
  FILTER_BY_9_KEY(31),
  /**
   * <pre>
   * WHERE_DIGIT_STAR_KEY
   * </pre>
   *
   * <code>FILTER_BY_STAR_KEY = 32;</code>
   */
  FILTER_BY_STAR_KEY(32),
  /**
   * <pre>
   * WHERE_DIGIT_POUND_KEY
   * </pre>
   *
   * <code>FILTER_BY_POUND_KEY = 33;</code>
   */
  FILTER_BY_POUND_KEY(33),
  /**
   * <pre>
   * WHERE_MACHINE_HANGUP_AND_UNCONNECTED
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED = 34;</code>
   */
  FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED(34),
  /**
   * <pre>
   * WHERE_ALL_EXCLUDING_INVALID_AND_CANCELED
   * </pre>
   *
   * <code>FILTER_BY_EXCLUDING_CANCELED_AND_INVALID = 35;</code>
   */
  FILTER_BY_EXCLUDING_CANCELED_AND_INVALID(35),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * WHERE_NO_PREFERENCE
   * </pre>
   *
   * <code>NO_PREFERENCE = 0;</code>
   */
  public static final int NO_PREFERENCE_VALUE = 0;
  /**
   * <pre>
   * WHERE_ANSWERED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_CALLS = 1;</code>
   */
  public static final int FILTER_BY_ANSWERED_CALLS_VALUE = 1;
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_HANGUP_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_HANGUPS = 2;</code>
   */
  public static final int FILTER_BY_ANSWERED_HANGUPS_VALUE = 2;
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_CALLS
   * </pre>
   *
   * <code>FILTER_BY_ANSWERED_LINKCALL = 3;</code>
   */
  public static final int FILTER_BY_ANSWERED_LINKCALL_VALUE = 3;
  /**
   * <pre>
   * WHERE_ANY_KEY
   * </pre>
   *
   * <code>FILTER_BY_ANY_KEY_PRESSED = 4;</code>
   */
  public static final int FILTER_BY_ANY_KEY_PRESSED_VALUE = 4;
  /**
   * <pre>
   * WHERE_BUSY_CALLS
   * </pre>
   *
   * <code>FILTER_BY_BUSY = 5;</code>
   */
  public static final int FILTER_BY_BUSY_VALUE = 5;
  /**
   * <pre>
   * WHERE_CANCELED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CANCELED_CALLS = 6;</code>
   */
  public static final int FILTER_BY_CANCELED_CALLS_VALUE = 6;
  /**
   * <pre>
   * WHERE_DIGIT_RESPONSE_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CONFIRM_KEYS_3_THROUGH_6 = 7;</code>
   */
  public static final int FILTER_BY_CONFIRM_KEYS_3_THROUGH_6_VALUE = 7;
  /**
   * <pre>
   * WHERE_CONNECTED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_CONNECTED_CALLS = 8;</code>
   */
  public static final int FILTER_BY_CONNECTED_CALLS_VALUE = 8;
  /**
   * <pre>
   * WHERE_CANCELED_DNCL_CALLS
   * </pre>
   *
   * <code>FILTER_BY_DNCL_CANCELED = 9;</code>
   */
  public static final int FILTER_BY_DNCL_CANCELED_VALUE = 9;
  /**
   * <pre>
   * WHERE_FAILED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_FAILED_CALLS = 10;</code>
   */
  public static final int FILTER_BY_FAILED_CALLS_VALUE = 10;
  /**
   * <pre>
   * WHERE_INVALID_CALLS
   * </pre>
   *
   * <code>FILTER_BY_INVALID_CALLS = 11;</code>
   */
  public static final int FILTER_BY_INVALID_CALLS_VALUE = 11;
  /**
   * <pre>
   * WHERE_ANSWERED_LINKCALL_ABANDONNED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_LINKCALL_ABANDONED = 12;</code>
   */
  public static final int FILTER_BY_LINKCALL_ABANDONED_VALUE = 12;
  /**
   * <pre>
   * WHERE_MACHINE_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_CALLS = 13;</code>
   */
  public static final int FILTER_BY_MACHINE_CALLS_VALUE = 13;
  /**
   * <pre>
   * WHERE_MACHINE_DELIVERED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_DELIVERY = 14;</code>
   */
  public static final int FILTER_BY_MACHINE_DELIVERY_VALUE = 14;
  /**
   * <pre>
   * WHERE_MACHINE_HANGUP_CALLS
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_HANGUP = 15;</code>
   */
  public static final int FILTER_BY_MACHINE_HANGUP_VALUE = 15;
  /**
   * <pre>
   * WHERE_MACHINE_PLUS_ANY_KEY
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_AND_ANY_KEY = 16;</code>
   */
  public static final int FILTER_BY_MACHINE_AND_ANY_KEY_VALUE = 16;
  /**
   * <pre>
   * WHERE_NOANSWER_CALLS
   * </pre>
   *
   * <code>FILTER_BY_NO_ANSWER = 17;</code>
   */
  public static final int FILTER_BY_NO_ANSWER_VALUE = 17;
  /**
   * <pre>
   * WHERE_NO_KEYS_PRESSED
   * </pre>
   *
   * <code>FILTER_BY_NO_KEYS_PRESSED = 18;</code>
   */
  public static final int FILTER_BY_NO_KEYS_PRESSED_VALUE = 18;
  /**
   * <pre>
   * WHERE_NOT_CANCELED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_NOT_CANCELED_CALLS = 19;</code>
   */
  public static final int FILTER_BY_NOT_CANCELED_CALLS_VALUE = 19;
  /**
   * <pre>
   * WHERE_UNCONNECTED_CALLS
   * </pre>
   *
   * <code>FILTER_BY_UNCONNECTED_CALLS = 20;</code>
   */
  public static final int FILTER_BY_UNCONNECTED_CALLS_VALUE = 20;
  /**
   * <pre>
   * WHERE_UNCONNECTED_EXCLUDE_INVALID
   * </pre>
   *
   * <code>FILTER_BY_UNCONNECTED_EXCLUDE_INVALID = 21;</code>
   */
  public static final int FILTER_BY_UNCONNECTED_EXCLUDE_INVALID_VALUE = 21;
  /**
   * <pre>
   * WHERE_DIGIT_0_KEY
   * </pre>
   *
   * <code>FILTER_BY_0_KEY = 22;</code>
   */
  public static final int FILTER_BY_0_KEY_VALUE = 22;
  /**
   * <pre>
   * WHERE_DIGIT_1_KEY
   * </pre>
   *
   * <code>FILTER_BY_1_KEY = 23;</code>
   */
  public static final int FILTER_BY_1_KEY_VALUE = 23;
  /**
   * <pre>
   * WHERE_DIGIT_2_KEY
   * </pre>
   *
   * <code>FILTER_BY_2_KEY = 24;</code>
   */
  public static final int FILTER_BY_2_KEY_VALUE = 24;
  /**
   * <pre>
   * WHERE_DIGIT_3_KEY
   * </pre>
   *
   * <code>FILTER_BY_3_KEY = 25;</code>
   */
  public static final int FILTER_BY_3_KEY_VALUE = 25;
  /**
   * <pre>
   * WHERE_DIGIT_4_KEY
   * </pre>
   *
   * <code>FILTER_BY_4_KEY = 26;</code>
   */
  public static final int FILTER_BY_4_KEY_VALUE = 26;
  /**
   * <pre>
   * WHERE_DIGIT_5_KEY
   * </pre>
   *
   * <code>FILTER_BY_5_KEY = 27;</code>
   */
  public static final int FILTER_BY_5_KEY_VALUE = 27;
  /**
   * <pre>
   * WHERE_DIGIT_6_KEY
   * </pre>
   *
   * <code>FILTER_BY_6_KEY = 28;</code>
   */
  public static final int FILTER_BY_6_KEY_VALUE = 28;
  /**
   * <pre>
   * WHERE_DIGIT_7_KEY
   * </pre>
   *
   * <code>FILTER_BY_7_KEY = 29;</code>
   */
  public static final int FILTER_BY_7_KEY_VALUE = 29;
  /**
   * <pre>
   * WHERE_DIGIT_8_KEY
   * </pre>
   *
   * <code>FILTER_BY_8_KEY = 30;</code>
   */
  public static final int FILTER_BY_8_KEY_VALUE = 30;
  /**
   * <pre>
   * WHERE_DIGIT_9_KEY
   * </pre>
   *
   * <code>FILTER_BY_9_KEY = 31;</code>
   */
  public static final int FILTER_BY_9_KEY_VALUE = 31;
  /**
   * <pre>
   * WHERE_DIGIT_STAR_KEY
   * </pre>
   *
   * <code>FILTER_BY_STAR_KEY = 32;</code>
   */
  public static final int FILTER_BY_STAR_KEY_VALUE = 32;
  /**
   * <pre>
   * WHERE_DIGIT_POUND_KEY
   * </pre>
   *
   * <code>FILTER_BY_POUND_KEY = 33;</code>
   */
  public static final int FILTER_BY_POUND_KEY_VALUE = 33;
  /**
   * <pre>
   * WHERE_MACHINE_HANGUP_AND_UNCONNECTED
   * </pre>
   *
   * <code>FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED = 34;</code>
   */
  public static final int FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED_VALUE = 34;
  /**
   * <pre>
   * WHERE_ALL_EXCLUDING_INVALID_AND_CANCELED
   * </pre>
   *
   * <code>FILTER_BY_EXCLUDING_CANCELED_AND_INVALID = 35;</code>
   */
  public static final int FILTER_BY_EXCLUDING_CANCELED_AND_INVALID_VALUE = 35;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static StandardReportFilter valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static StandardReportFilter forNumber(int value) {
    switch (value) {
      case 0: return NO_PREFERENCE;
      case 1: return FILTER_BY_ANSWERED_CALLS;
      case 2: return FILTER_BY_ANSWERED_HANGUPS;
      case 3: return FILTER_BY_ANSWERED_LINKCALL;
      case 4: return FILTER_BY_ANY_KEY_PRESSED;
      case 5: return FILTER_BY_BUSY;
      case 6: return FILTER_BY_CANCELED_CALLS;
      case 7: return FILTER_BY_CONFIRM_KEYS_3_THROUGH_6;
      case 8: return FILTER_BY_CONNECTED_CALLS;
      case 9: return FILTER_BY_DNCL_CANCELED;
      case 10: return FILTER_BY_FAILED_CALLS;
      case 11: return FILTER_BY_INVALID_CALLS;
      case 12: return FILTER_BY_LINKCALL_ABANDONED;
      case 13: return FILTER_BY_MACHINE_CALLS;
      case 14: return FILTER_BY_MACHINE_DELIVERY;
      case 15: return FILTER_BY_MACHINE_HANGUP;
      case 16: return FILTER_BY_MACHINE_AND_ANY_KEY;
      case 17: return FILTER_BY_NO_ANSWER;
      case 18: return FILTER_BY_NO_KEYS_PRESSED;
      case 19: return FILTER_BY_NOT_CANCELED_CALLS;
      case 20: return FILTER_BY_UNCONNECTED_CALLS;
      case 21: return FILTER_BY_UNCONNECTED_EXCLUDE_INVALID;
      case 22: return FILTER_BY_0_KEY;
      case 23: return FILTER_BY_1_KEY;
      case 24: return FILTER_BY_2_KEY;
      case 25: return FILTER_BY_3_KEY;
      case 26: return FILTER_BY_4_KEY;
      case 27: return FILTER_BY_5_KEY;
      case 28: return FILTER_BY_6_KEY;
      case 29: return FILTER_BY_7_KEY;
      case 30: return FILTER_BY_8_KEY;
      case 31: return FILTER_BY_9_KEY;
      case 32: return FILTER_BY_STAR_KEY;
      case 33: return FILTER_BY_POUND_KEY;
      case 34: return FILTER_BY_MACHINE_HANGUP_AND_UNCONNECTED;
      case 35: return FILTER_BY_EXCLUDING_CANCELED_AND_INVALID;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<StandardReportFilter>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      StandardReportFilter> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<StandardReportFilter>() {
          public StandardReportFilter findValueByNumber(int number) {
            return StandardReportFilter.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.OrgPreferencesProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final StandardReportFilter[] VALUES = values();

  public static StandardReportFilter valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private StandardReportFilter(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.StandardReportFilter)
}

