// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface UpsertNonSkillActivityAssociationResOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates whether the upsert took effect if true, or that there are conflicting entities which would be affected, that must be updated/removed first if false.
   * </pre>
   *
   * <code>bool upsert_succeeded = 1 [json_name = "upsertSucceeded"];</code>
   * @return The upsertSucceeded.
   */
  boolean getUpsertSucceeded();

  /**
   * <pre>
   * Nodes that will effectively lose the non skill activity as a candidate, through inheritance.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ParentEntity nodes_affected = 2 [json_name = "nodesAffected"];</code>
   */
  java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity> 
      getNodesAffectedList();
  /**
   * <pre>
   * Nodes that will effectively lose the non skill activity as a candidate, through inheritance.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ParentEntity nodes_affected = 2 [json_name = "nodesAffected"];</code>
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntity getNodesAffected(int index);
  /**
   * <pre>
   * Nodes that will effectively lose the non skill activity as a candidate, through inheritance.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ParentEntity nodes_affected = 2 [json_name = "nodesAffected"];</code>
   */
  int getNodesAffectedCount();
  /**
   * <pre>
   * Nodes that will effectively lose the non skill activity as a candidate, through inheritance.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ParentEntity nodes_affected = 2 [json_name = "nodesAffected"];</code>
   */
  java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder> 
      getNodesAffectedOrBuilderList();
  /**
   * <pre>
   * Nodes that will effectively lose the non skill activity as a candidate, through inheritance.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ParentEntity nodes_affected = 2 [json_name = "nodesAffected"];</code>
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.ParentEntityOrBuilder getNodesAffectedOrBuilder(
      int index);

  /**
   * <pre>
   * Set of entities that are currently referencing the &#64;non_skill_activity_sid.
   * The &#64;right_entity will be the placement rule or constraint rule in conflict, and their parent entity will be the &#64;left_entity
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping rules_using_activity = 3 [json_name = "rulesUsingActivity"];</code>
   */
  java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping> 
      getRulesUsingActivityList();
  /**
   * <pre>
   * Set of entities that are currently referencing the &#64;non_skill_activity_sid.
   * The &#64;right_entity will be the placement rule or constraint rule in conflict, and their parent entity will be the &#64;left_entity
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping rules_using_activity = 3 [json_name = "rulesUsingActivity"];</code>
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping getRulesUsingActivity(int index);
  /**
   * <pre>
   * Set of entities that are currently referencing the &#64;non_skill_activity_sid.
   * The &#64;right_entity will be the placement rule or constraint rule in conflict, and their parent entity will be the &#64;left_entity
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping rules_using_activity = 3 [json_name = "rulesUsingActivity"];</code>
   */
  int getRulesUsingActivityCount();
  /**
   * <pre>
   * Set of entities that are currently referencing the &#64;non_skill_activity_sid.
   * The &#64;right_entity will be the placement rule or constraint rule in conflict, and their parent entity will be the &#64;left_entity
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping rules_using_activity = 3 [json_name = "rulesUsingActivity"];</code>
   */
  java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMappingOrBuilder> 
      getRulesUsingActivityOrBuilderList();
  /**
   * <pre>
   * Set of entities that are currently referencing the &#64;non_skill_activity_sid.
   * The &#64;right_entity will be the placement rule or constraint rule in conflict, and their parent entity will be the &#64;left_entity
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMapping rules_using_activity = 3 [json_name = "rulesUsingActivity"];</code>
   */
  com.tcn.cloud.api.api.v1alpha1.wfm.UpsertNonSkillActivityAssociationRes.EntityMappingOrBuilder getRulesUsingActivityOrBuilder(
      int index);
}
