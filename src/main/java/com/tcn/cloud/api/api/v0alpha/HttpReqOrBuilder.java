// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface HttpReqOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.HttpReq)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * what url to hit. First url in the group Must be able to be used as is, it
   * won't be parsed or messed with. Just passed directly to an http client.
   * every additional url instead of being a simple string can use values
   * retrieved from the previous response body, or headers. Examples: url =
   * "https://{{header.nextUrl}}" url = "{{body.path.toThe.1.nextUrl}}/search?
   * country={{body.country}}" to restate in english the examples: we will
   * replace the contents between {{ }} with the values retrieved from the
   * previous response body or headers the last url must always contain records
   * that can be parsed by the specified file template. templated values must
   * always be:
   * - wrapped in {{ }},
   * - first word be either "header." or "body."
   *   followed by a json dot path to the value to be looked up, or
   * - a named starting with $ ex. {{$token}} referencing a previous saved value.
   * - a special field: &lt;TODAY&gt; &lt;NOW&gt;  &lt;TODAY.UNIX&gt;
   * if one of these template values is found, it is assumed the previous
   * response is json, otherwise the lookups will fail, and the entrypoint will
   * error.
   * </pre>
   *
   * <code>string url = 1 [json_name = "url"];</code>
   * @return The url.
   */
  java.lang.String getUrl();
  /**
   * <pre>
   * what url to hit. First url in the group Must be able to be used as is, it
   * won't be parsed or messed with. Just passed directly to an http client.
   * every additional url instead of being a simple string can use values
   * retrieved from the previous response body, or headers. Examples: url =
   * "https://{{header.nextUrl}}" url = "{{body.path.toThe.1.nextUrl}}/search?
   * country={{body.country}}" to restate in english the examples: we will
   * replace the contents between {{ }} with the values retrieved from the
   * previous response body or headers the last url must always contain records
   * that can be parsed by the specified file template. templated values must
   * always be:
   * - wrapped in {{ }},
   * - first word be either "header." or "body."
   *   followed by a json dot path to the value to be looked up, or
   * - a named starting with $ ex. {{$token}} referencing a previous saved value.
   * - a special field: &lt;TODAY&gt; &lt;NOW&gt;  &lt;TODAY.UNIX&gt;
   * if one of these template values is found, it is assumed the previous
   * response is json, otherwise the lookups will fail, and the entrypoint will
   * error.
   * </pre>
   *
   * <code>string url = 1 [json_name = "url"];</code>
   * @return The bytes for url.
   */
  com.google.protobuf.ByteString
      getUrlBytes();

  /**
   * <pre>
   * initial headers must have static values for all the key value pairs.
   * every headers field after the first can contain template wrappers to
   * specify looking up the value from the previous response body, or headers
   * example:
   * { "key": "value", "{{header.nextKey}}": "{{body.somePath.to.a.str}}"}
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2 [json_name = "headers"];</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * initial headers must have static values for all the key value pairs.
   * every headers field after the first can contain template wrappers to
   * specify looking up the value from the previous response body, or headers
   * example:
   * { "key": "value", "{{header.nextKey}}": "{{body.somePath.to.a.str}}"}
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2 [json_name = "headers"];</code>
   */
  boolean containsHeaders(
      java.lang.String key);
  /**
   * Use {@link #getHeadersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getHeaders();
  /**
   * <pre>
   * initial headers must have static values for all the key value pairs.
   * every headers field after the first can contain template wrappers to
   * specify looking up the value from the previous response body, or headers
   * example:
   * { "key": "value", "{{header.nextKey}}": "{{body.somePath.to.a.str}}"}
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2 [json_name = "headers"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getHeadersMap();
  /**
   * <pre>
   * initial headers must have static values for all the key value pairs.
   * every headers field after the first can contain template wrappers to
   * specify looking up the value from the previous response body, or headers
   * example:
   * { "key": "value", "{{header.nextKey}}": "{{body.somePath.to.a.str}}"}
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2 [json_name = "headers"];</code>
   */

  java.lang.String getHeadersOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * initial headers must have static values for all the key value pairs.
   * every headers field after the first can contain template wrappers to
   * specify looking up the value from the previous response body, or headers
   * example:
   * { "key": "value", "{{header.nextKey}}": "{{body.somePath.to.a.str}}"}
   * </pre>
   *
   * <code>map&lt;string, string&gt; headers = 2 [json_name = "headers"];</code>
   */

  java.lang.String getHeadersOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * same as url, and headers fields, it is possible to use templated values to
   * construct the body often, body is either empty, or a json string
   * </pre>
   *
   * <code>string body = 3 [json_name = "body"];</code>
   * @return The body.
   */
  java.lang.String getBody();
  /**
   * <pre>
   * same as url, and headers fields, it is possible to use templated values to
   * construct the body often, body is either empty, or a json string
   * </pre>
   *
   * <code>string body = 3 [json_name = "body"];</code>
   * @return The bytes for body.
   */
  com.google.protobuf.ByteString
      getBodyBytes();

  /**
   * <pre>
   * what type of request to make  GET by default
   * </pre>
   *
   * <code>.api.commons.HttpVerb method = 4 [json_name = "method"];</code>
   * @return The enum numeric value on the wire for method.
   */
  int getMethodValue();
  /**
   * <pre>
   * what type of request to make  GET by default
   * </pre>
   *
   * <code>.api.commons.HttpVerb method = 4 [json_name = "method"];</code>
   * @return The method.
   */
  com.tcn.cloud.api.api.commons.HttpVerb getMethod();

  /**
   * <pre>
   * the values to save from this response.
   * saved values can be referenced on *all* future requests.
   * so things like auth tokens need to be declared here so they can be
   * referenced by name later.
   * ex:
   * putting { "token": "body.response.authToken" } in the map
   * will allow us to use {{$token}} in all future http requests
   * </pre>
   *
   * <code>map&lt;string, string&gt; named_response_values = 5 [json_name = "namedResponseValues"];</code>
   */
  int getNamedResponseValuesCount();
  /**
   * <pre>
   * the values to save from this response.
   * saved values can be referenced on *all* future requests.
   * so things like auth tokens need to be declared here so they can be
   * referenced by name later.
   * ex:
   * putting { "token": "body.response.authToken" } in the map
   * will allow us to use {{$token}} in all future http requests
   * </pre>
   *
   * <code>map&lt;string, string&gt; named_response_values = 5 [json_name = "namedResponseValues"];</code>
   */
  boolean containsNamedResponseValues(
      java.lang.String key);
  /**
   * Use {@link #getNamedResponseValuesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getNamedResponseValues();
  /**
   * <pre>
   * the values to save from this response.
   * saved values can be referenced on *all* future requests.
   * so things like auth tokens need to be declared here so they can be
   * referenced by name later.
   * ex:
   * putting { "token": "body.response.authToken" } in the map
   * will allow us to use {{$token}} in all future http requests
   * </pre>
   *
   * <code>map&lt;string, string&gt; named_response_values = 5 [json_name = "namedResponseValues"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getNamedResponseValuesMap();
  /**
   * <pre>
   * the values to save from this response.
   * saved values can be referenced on *all* future requests.
   * so things like auth tokens need to be declared here so they can be
   * referenced by name later.
   * ex:
   * putting { "token": "body.response.authToken" } in the map
   * will allow us to use {{$token}} in all future http requests
   * </pre>
   *
   * <code>map&lt;string, string&gt; named_response_values = 5 [json_name = "namedResponseValues"];</code>
   */

  java.lang.String getNamedResponseValuesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * the values to save from this response.
   * saved values can be referenced on *all* future requests.
   * so things like auth tokens need to be declared here so they can be
   * referenced by name later.
   * ex:
   * putting { "token": "body.response.authToken" } in the map
   * will allow us to use {{$token}} in all future http requests
   * </pre>
   *
   * <code>map&lt;string, string&gt; named_response_values = 5 [json_name = "namedResponseValues"];</code>
   */

  java.lang.String getNamedResponseValuesOrThrow(
      java.lang.String key);
}
