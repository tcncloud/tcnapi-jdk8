// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/scorecards.proto

package com.tcn.cloud.api.api.commons;

public interface QuestionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.Question)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique question id
   * </pre>
   *
   * <code>int64 question_id = 2 [json_name = "questionId"];</code>
   * @return The questionId.
   */
  long getQuestionId();

  /**
   * <pre>
   * the creator of the question
   * </pre>
   *
   * <code>string author_id = 3 [json_name = "authorId"];</code>
   * @return The authorId.
   */
  java.lang.String getAuthorId();
  /**
   * <pre>
   * the creator of the question
   * </pre>
   *
   * <code>string author_id = 3 [json_name = "authorId"];</code>
   * @return The bytes for authorId.
   */
  com.google.protobuf.ByteString
      getAuthorIdBytes();

  /**
   * <pre>
   * the question to display
   * </pre>
   *
   * <code>string question = 4 [json_name = "question"];</code>
   * @return The question.
   */
  java.lang.String getQuestion();
  /**
   * <pre>
   * the question to display
   * </pre>
   *
   * <code>string question = 4 [json_name = "question"];</code>
   * @return The bytes for question.
   */
  com.google.protobuf.ByteString
      getQuestionBytes();

  /**
   * <pre>
   * extra info or context for the question
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * extra info or context for the question
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * the categories associated with the question
   * </pre>
   *
   * <code>repeated .api.commons.Category categories = 6 [json_name = "categories"];</code>
   */
  java.util.List<com.tcn.cloud.api.api.commons.Category> 
      getCategoriesList();
  /**
   * <pre>
   * the categories associated with the question
   * </pre>
   *
   * <code>repeated .api.commons.Category categories = 6 [json_name = "categories"];</code>
   */
  com.tcn.cloud.api.api.commons.Category getCategories(int index);
  /**
   * <pre>
   * the categories associated with the question
   * </pre>
   *
   * <code>repeated .api.commons.Category categories = 6 [json_name = "categories"];</code>
   */
  int getCategoriesCount();
  /**
   * <pre>
   * the categories associated with the question
   * </pre>
   *
   * <code>repeated .api.commons.Category categories = 6 [json_name = "categories"];</code>
   */
  java.util.List<? extends com.tcn.cloud.api.api.commons.CategoryOrBuilder> 
      getCategoriesOrBuilderList();
  /**
   * <pre>
   * the categories associated with the question
   * </pre>
   *
   * <code>repeated .api.commons.Category categories = 6 [json_name = "categories"];</code>
   */
  com.tcn.cloud.api.api.commons.CategoryOrBuilder getCategoriesOrBuilder(
      int index);

  /**
   * <pre>
   * which party the question is about
   * </pre>
   *
   * <code>.api.commons.QuestionFocus focus = 7 [json_name = "focus"];</code>
   * @return The enum numeric value on the wire for focus.
   */
  int getFocusValue();
  /**
   * <pre>
   * which party the question is about
   * </pre>
   *
   * <code>.api.commons.QuestionFocus focus = 7 [json_name = "focus"];</code>
   * @return The focus.
   */
  com.tcn.cloud.api.api.commons.QuestionFocus getFocus();
}
