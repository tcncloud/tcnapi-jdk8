// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

public interface GetForecastStatisticsResOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.wfm.GetForecastStatisticsRes)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the total number of intervals measured
   * </pre>
   *
   * <code>int32 num_intervals_measured = 1 [json_name = "numIntervalsMeasured"];</code>
   * @return The numIntervalsMeasured.
   */
  int getNumIntervalsMeasured();

  /**
   * <pre>
   * total number of actual historical calls
   * </pre>
   *
   * <code>int32 total_calls_historical = 2 [json_name = "totalCallsHistorical"];</code>
   * @return The totalCallsHistorical.
   */
  int getTotalCallsHistorical();

  /**
   * <pre>
   * total number of predicted calls
   * </pre>
   *
   * <code>int32 total_calls_predicted = 3 [json_name = "totalCallsPredicted"];</code>
   * @return The totalCallsPredicted.
   */
  int getTotalCallsPredicted();

  /**
   * <pre>
   * percentage over predicted (+ve) or under predicted (-ve)
   * </pre>
   *
   * <code>float percent_calls_over_under = 4 [json_name = "percentCallsOverUnder"];</code>
   * @return The percentCallsOverUnder.
   */
  float getPercentCallsOverUnder();

  /**
   * <pre>
   * root-mean-squared error between actual and predicted calls
   * </pre>
   *
   * <code>float rms_error_calls = 5 [json_name = "rmsErrorCalls"];</code>
   * @return The rmsErrorCalls.
   */
  float getRmsErrorCalls();

  /**
   * <pre>
   * root-mean-squared error between actual and predicted atab
   * </pre>
   *
   * <code>float rms_error_ATAB = 6 [json_name = "rmsErrorATAB"];</code>
   * @return The rmsErrorATAB.
   */
  float getRmsErrorATAB();

  /**
   * <pre>
   * root-mean-squared error between actual and predicted asa
   * </pre>
   *
   * <code>float rms_error_ASA = 7 [json_name = "rmsErrorASA"];</code>
   * @return The rmsErrorASA.
   */
  float getRmsErrorASA();

  /**
   * <pre>
   * root-mean-squared error between actual and predicted acw
   * </pre>
   *
   * <code>float rms_error_ACW = 8 [json_name = "rmsErrorACW"];</code>
   * @return The rmsErrorACW.
   */
  float getRmsErrorACW();

  /**
   * <pre>
   * root-mean-squared error between actual and predicted aht
   * </pre>
   *
   * <code>float rms_error_AHT = 9 [json_name = "rmsErrorAHT"];</code>
   * @return The rmsErrorAHT.
   */
  float getRmsErrorAHT();

  /**
   * <pre>
   * Indicates whether or not the stats generated were invalid
   * </pre>
   *
   * <code>bool are_stats_invalid = 10 [json_name = "areStatsInvalid"];</code>
   * @return The areStatsInvalid.
   */
  boolean getAreStatsInvalid();

  /**
   * <pre>
   * Message explaining why the stats were invalid
   * </pre>
   *
   * <code>string invalid_reason = 11 [json_name = "invalidReason"];</code>
   * @return The invalidReason.
   */
  java.lang.String getInvalidReason();
  /**
   * <pre>
   * Message explaining why the stats were invalid
   * </pre>
   *
   * <code>string invalid_reason = 11 [json_name = "invalidReason"];</code>
   * @return The bytes for invalidReason.
   */
  com.google.protobuf.ByteString
      getInvalidReasonBytes();
}
