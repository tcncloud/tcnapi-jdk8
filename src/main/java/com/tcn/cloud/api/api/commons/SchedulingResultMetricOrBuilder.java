// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

public interface SchedulingResultMetricOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.SchedulingResultMetric)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The total number of minute-width intervals that were scheduled and measured.
   * </pre>
   *
   * <code>int32 total_internal_intervals = 1 [json_name = "totalInternalIntervals"];</code>
   * @return The totalInternalIntervals.
   */
  int getTotalInternalIntervals();

  /**
   * <pre>
   * The total number of minute-width intervals that had enough scheduled ftes to meet the predicted call FTEs.
   * </pre>
   *
   * <code>int32 total_interval_intervals_with_fte_required = 2 [json_name = "totalIntervalIntervalsWithFteRequired"];</code>
   * @return The totalIntervalIntervalsWithFteRequired.
   */
  int getTotalIntervalIntervalsWithFteRequired();

  /**
   * <pre>
   * The total number of intervals that have unmet predicted call FTEs (not enough scheduled FTEs).
   * </pre>
   *
   * <code>int32 total_intervals_with_ftes_remaining = 3 [json_name = "totalIntervalsWithFtesRemaining"];</code>
   * @return The totalIntervalsWithFtesRemaining.
   */
  int getTotalIntervalsWithFtesRemaining();

  /**
   * <pre>
   * The average ratio of interval metrics (min(1,  scheduled/predicted)). A value of 1 means every interval
   *    with predicted call FTEs has enough scheduled FTEs to meet requirements.
   * </pre>
   *
   * <code>float coverage = 4 [json_name = "coverage"];</code>
   * @return The coverage.
   */
  float getCoverage();

  /**
   * <pre>
   * Root Mean Square metric for predicted - scheduled FTEs.
   * </pre>
   *
   * <code>float root_mean_square = 5 [json_name = "rootMeanSquare"];</code>
   * @return The rootMeanSquare.
   */
  float getRootMeanSquare();

  /**
   * <pre>
   * Set to TRUE if this object contains valid metrics.
   * </pre>
   *
   * <code>bool has_result = 6 [json_name = "hasResult"];</code>
   * @return The hasResult.
   */
  boolean getHasResult();
}
