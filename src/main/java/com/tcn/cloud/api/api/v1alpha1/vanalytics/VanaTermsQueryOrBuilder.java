// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/vanalytics/transcript.proto

package com.tcn.cloud.api.api.v1alpha1.vanalytics;

public interface VanaTermsQueryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.vanalytics.VanaTermsQuery)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The terms to be filtered on.
   * </pre>
   *
   * <code>repeated string terms = 1 [json_name = "terms"];</code>
   * @return A list containing the terms.
   */
  java.util.List<java.lang.String>
      getTermsList();
  /**
   * <pre>
   * Required. The terms to be filtered on.
   * </pre>
   *
   * <code>repeated string terms = 1 [json_name = "terms"];</code>
   * @return The count of terms.
   */
  int getTermsCount();
  /**
   * <pre>
   * Required. The terms to be filtered on.
   * </pre>
   *
   * <code>repeated string terms = 1 [json_name = "terms"];</code>
   * @param index The index of the element to return.
   * @return The terms at the given index.
   */
  java.lang.String getTerms(int index);
  /**
   * <pre>
   * Required. The terms to be filtered on.
   * </pre>
   *
   * <code>repeated string terms = 1 [json_name = "terms"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the terms at the given index.
   */
  com.google.protobuf.ByteString
      getTermsBytes(int index);

  /**
   * <pre>
   * Optional. If true then filters out where terms match.
   * </pre>
   *
   * <code>bool lacks = 2 [json_name = "lacks"];</code>
   * @return The lacks.
   */
  boolean getLacks();

  /**
   * <pre>
   * Optional. If true then all terms must match.
   * </pre>
   *
   * <code>bool all = 3 [json_name = "all"];</code>
   * @return The all.
   */
  boolean getAll();
}
