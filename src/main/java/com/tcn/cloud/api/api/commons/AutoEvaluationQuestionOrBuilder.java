// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/scorecards.proto

package com.tcn.cloud.api.api.commons;

public interface AutoEvaluationQuestionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.AutoEvaluationQuestion)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique id of auto evaluation question.
   * </pre>
   *
   * <code>int64 auto_evaluation_question_id = 2 [json_name = "autoEvaluationQuestionId"];</code>
   * @return The autoEvaluationQuestionId.
   */
  long getAutoEvaluationQuestionId();

  /**
   * <pre>
   * unique id of evaluation.
   * </pre>
   *
   * <code>int64 auto_evaluation_id = 3 [json_name = "autoEvaluationId"];</code>
   * @return The autoEvaluationId.
   */
  long getAutoEvaluationId();

  /**
   * <pre>
   * unique id of evaluation section.
   * </pre>
   *
   * <code>int64 auto_evaluation_section_id = 4 [json_name = "autoEvaluationSectionId"];</code>
   * @return The autoEvaluationSectionId.
   */
  long getAutoEvaluationSectionId();

  /**
   * <pre>
   * unique id of auto question.
   * </pre>
   *
   * <code>int64 auto_question_id = 5 [json_name = "autoQuestionId"];</code>
   * @return The autoQuestionId.
   */
  long getAutoQuestionId();

  /**
   * <pre>
   * a subset of flag sids found.
   * </pre>
   *
   * <code>repeated int64 flagged = 6 [json_name = "flagged"];</code>
   * @return A list containing the flagged.
   */
  java.util.List<java.lang.Long> getFlaggedList();
  /**
   * <pre>
   * a subset of flag sids found.
   * </pre>
   *
   * <code>repeated int64 flagged = 6 [json_name = "flagged"];</code>
   * @return The count of flagged.
   */
  int getFlaggedCount();
  /**
   * <pre>
   * a subset of flag sids found.
   * </pre>
   *
   * <code>repeated int64 flagged = 6 [json_name = "flagged"];</code>
   * @param index The index of the element to return.
   * @return The flagged at the given index.
   */
  long getFlagged(int index);

  /**
   * <pre>
   * whether the auto question evaluation was passed/failed.
   * </pre>
   *
   * <code>bool passed = 7 [json_name = "passed"];</code>
   * @return The passed.
   */
  boolean getPassed();

  /**
   * <pre>
   * order number of auto evaluation question.
   * </pre>
   *
   * <code>int32 sort_order = 8 [json_name = "sortOrder"];</code>
   * @return The sortOrder.
   */
  int getSortOrder();

  /**
   * <pre>
   * The risk level of the evaluation question.
   * </pre>
   *
   * <code>.api.commons.RiskLevel risk_level = 11 [json_name = "riskLevel"];</code>
   * @return The enum numeric value on the wire for riskLevel.
   */
  int getRiskLevelValue();
  /**
   * <pre>
   * The risk level of the evaluation question.
   * </pre>
   *
   * <code>.api.commons.RiskLevel risk_level = 11 [json_name = "riskLevel"];</code>
   * @return The riskLevel.
   */
  com.tcn.cloud.api.api.commons.RiskLevel getRiskLevel();

  /**
   * <pre>
   * Whether the flag expression matched.
   * </pre>
   *
   * <code>bool expression_matched = 14 [json_name = "expressionMatched"];</code>
   * @return The expressionMatched.
   */
  boolean getExpressionMatched();
}
