// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/org/user.proto

package com.tcn.cloud.api.api.v1alpha1.org;

public interface GetMyAllowedMfaMethodsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v1alpha1.org.GetMyAllowedMfaMethodsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * If the user is allowed to set up mfa
   * </pre>
   *
   * <code>bool mfa_enabled = 1 [json_name = "mfaEnabled"];</code>
   * @return The mfaEnabled.
   */
  boolean getMfaEnabled();

  /**
   * <pre>
   * If the user is allowed to set up email mfa
   * </pre>
   *
   * <code>bool email_enabled = 2 [json_name = "emailEnabled"];</code>
   * @return The emailEnabled.
   */
  boolean getEmailEnabled();

  /**
   * <pre>
   * If the user is allowed to set up duo mfa
   * </pre>
   *
   * <code>bool duo_enabled = 3 [json_name = "duoEnabled"];</code>
   * @return The duoEnabled.
   */
  boolean getDuoEnabled();

  /**
   * <pre>
   * The user is allowed to set up totp mfa if an
   * authenticator type is provided/set by the orgaization.
   * Unspecified means the totp method is not allowed.
   * </pre>
   *
   * <code>.api.commons.org.TotpAuthenticatorType totp_enabled = 4 [json_name = "totpEnabled"];</code>
   * @return The enum numeric value on the wire for totpEnabled.
   */
  int getTotpEnabledValue();
  /**
   * <pre>
   * The user is allowed to set up totp mfa if an
   * authenticator type is provided/set by the orgaization.
   * Unspecified means the totp method is not allowed.
   * </pre>
   *
   * <code>.api.commons.org.TotpAuthenticatorType totp_enabled = 4 [json_name = "totpEnabled"];</code>
   * @return The totpEnabled.
   */
  com.tcn.cloud.api.api.commons.org.TotpAuthenticatorType getTotpEnabled();
}
