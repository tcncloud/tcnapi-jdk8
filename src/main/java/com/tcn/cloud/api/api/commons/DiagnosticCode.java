// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

/**
 * <pre>
 * Enum representing the type of a diagnostic.
 * </pre>
 *
 * Protobuf enum {@code api.commons.DiagnosticCode}
 */
public enum DiagnosticCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * DiagnosticCodeGeneral integer value for a diagnostic coded as 'general' type.
   * The code type used when no other code is appropriate.
   * cannot be described by a code. The consumer must interpret the text message for further details
   * </pre>
   *
   * <code>GENERAL = 0;</code>
   */
  GENERAL(0),
  /**
   * <pre>
   * DiagnosticCodeOk integer value for a diagnostic coded as 'ok' type.
   * The diagnostic is reporting no errors found.
   * </pre>
   *
   * <code>OK = 1;</code>
   */
  OK(1),
  /**
   * <pre>
   * DiagnosticCodeNoSkillsInDictionary integer value for a diagnostic coded as 'no skills in dictionary' type.
   * The diagnostic is reporting no skills in the dictionary.
   * </pre>
   *
   * <code>NO_SKILLS_IN_DICTIONARY = 2;</code>
   */
  NO_SKILLS_IN_DICTIONARY(2),
  /**
   * <pre>
   * DiagnosticCodeAgentHasNoSkillProficiencies integer value for a diagnostic coded as 'agent has no skill proficiencies' type.
   * The diagnostic is reporting a wfm agent with no skill proficiencies.
   * </pre>
   *
   * <code>AGENT_HAS_NO_SKILL_PROFICIENCIES = 3;</code>
   */
  AGENT_HAS_NO_SKILL_PROFICIENCIES(3),
  /**
   * <pre>
   * DiagnosticCodeAgentHasNoSkills integer value for a diagnostic coded as 'agent has no skills' type.
   * The diagnostic is reporting an agent with no skills.
   * </pre>
   *
   * <code>AGENT_HAS_NO_SKILLS = 4;</code>
   */
  AGENT_HAS_NO_SKILLS(4),
  /**
   * <pre>
   * DiagnosticCodeNoSchedulingActivitiesForConstraintRules integer value for a diagnostic coded as 'no scheduling activity for constraint rules' type.
   * The diagnostic is reporting the constraint rules don't have a scheduling activity.
   * </pre>
   *
   * <code>NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES = 5;</code>
   */
  NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES(5),
  /**
   * <pre>
   * DiagnosticCodeSchedulingActivityForConstraintRuleNotFound integer value for a diagnostic coded as 'scheduling activity for constraint rule not found' type.
   * The diagnostic is reporting a constraint rule pointing to a scheduling activity that cannot be found.
   * </pre>
   *
   * <code>SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND = 6;</code>
   */
  SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND(6),
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateCannotBeNone integer value for a diagnostic coded as 'shift template cannot be none' type.
   * The diagnostic is reporting a NONE value for a shift template
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_CANNOT_BE_NONE = 7;</code>
   */
  SHIFT_TEMPLATE_CANNOT_BE_NONE(7),
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateHasNoPlacementRules integer value for a diagnostic coded as 'shift template has no placement rules' type.
   * The diagnostic is reporting a shift template with no member placement rules.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES = 8;</code>
   */
  SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES(8),
  /**
   * <pre>
   * DiagnosticCodeNoOncallInShiftTemplatePlacementRules integer value for a diagnostic coded as 'no on-call in shift template placement rules' type.
   * The diagnostic is reporting a shift template whose placement rules do not include an on-call placement.
   * </pre>
   *
   * <code>NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES = 9;</code>
   */
  NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES(9),
  /**
   * <pre>
   * DiagnosticCodeMinGtMaxDurationInShiftTemplatePlacementRules integer value for a diagnostic coded as 'min greater than max in shift template placement rules' type.
   * The diagnostic is reporting the min duration for a shift templates placement rule being greater than the max duration.
   * </pre>
   *
   * <code>MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES = 10;</code>
   */
  MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES(10),
  /**
   * <pre>
   * DiagnosticCodeMinGtMaxAgentsInShiftTemplate integer value for a diagnostic coded as 'min greater than max agents in shift template' type.
   * The diagnostic is reporting a shift template with a min_agents value greater than it's max_agents value.
   * </pre>
   *
   * <code>MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE = 11;</code>
   */
  MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE(11),
  /**
   * <pre>
   * DiagnosticCodeNoPlacementRulesForShiftTemplate integer value for a diagnostic coded as 'no placement rules for shift template' type.
   * The diagnostic is reporting no placement rules as members of the shift template.
   * </pre>
   *
   * <code>NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE = 12;</code>
   */
  NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE(12),
  /**
   * <pre>
   * DiagnosticCodeActivitiesShorterThanShift integer value for a diagnostic coded as 'activities shorter than shift' type.
   * The diagnostic is reporting that the activities are too short for the shift.
   * </pre>
   *
   * <code>ACTIVITIES_SHORTER_THAN_SHIFT = 13;</code>
   */
  ACTIVITIES_SHORTER_THAN_SHIFT(13),
  /**
   * <pre>
   * DiagnosticCodeNotEnoughAgentsForShift integer value for a diagnostic coded as 'not enough agents for shift' type.
   * The diagnostic is reporting that a shift doesn't have a sufficient number of agents available.
   * </pre>
   *
   * <code>NOT_ENOUGH_AGENTS_FOR_SHIFT = 14;</code>
   */
  NOT_ENOUGH_AGENTS_FOR_SHIFT(14),
  /**
   * <pre>
   * DiagnosticCodeProgramHasNoAgentGroups integer value for a diagnostic coded as 'program has no agent groups' type.
   * The diagnostic is reporting that a program node has no member agent groups.
   * </pre>
   *
   * <code>PROGRAM_HAS_NO_AGENT_GROUPS = 15;</code>
   */
  PROGRAM_HAS_NO_AGENT_GROUPS(15),
  /**
   * <pre>
   * DiagnosticCodeProgramHasNoShiftTemplates integer value for a diagnostic coded as 'program has no shift templates' type.
   * The diagnostic is reporting that a program node has no member shift templates.
   * </pre>
   *
   * <code>PROGRAM_HAS_NO_SHIFT_TEMPLATES = 16;</code>
   */
  PROGRAM_HAS_NO_SHIFT_TEMPLATES(16),
  /**
   * <pre>
   * DiagnosticCodeLocationHasNoPrograms integer value for a diagnostic coded as 'location has no programs' type.
   * The diagnostic is reporting that a location node has no member program nodes.
   * </pre>
   *
   * <code>LOCATION_HAS_NO_PROGRAMS = 17;</code>
   */
  LOCATION_HAS_NO_PROGRAMS(17),
  /**
   * <pre>
   * DiagnosticCodeClientHasNoLocations integer value for a diagnostic coded as 'client has no locations' type.
   * The diagnostic is reporting that a client node has no member location nodes.
   * </pre>
   *
   * <code>CLIENT_HAS_NO_LOCATIONS = 18;</code>
   */
  CLIENT_HAS_NO_LOCATIONS(18),
  /**
   * <pre>
   * DiagnosticCodeCallCenterHasNoClients integer value for a diagnostic coded as 'call center has no clients' type.
   * The diagnostic is reporting that a call center node has no member client nodes
   * </pre>
   *
   * <code>CALL_CENTER_HAS_NO_CLIENTS = 19;</code>
   */
  CALL_CENTER_HAS_NO_CLIENTS(19),
  /**
   * <pre>
   * DiagnosticCodeProgramHasInvalidParentLocation integer value for a diagnostic coded as 'program has invalid parent location' type.
   * The diagnostic is reporting that a program node has an invalid parent location node.
   * </pre>
   *
   * <code>PROGRAM_HAS_INVALID_PARENT_LOCATION = 20;</code>
   */
  PROGRAM_HAS_INVALID_PARENT_LOCATION(20),
  /**
   * <pre>
   * DiagnosticCodeLocationHasInvalidParentClient integer value for a diagnostic coded as 'location has invalid parent client' type.
   * The diagnostic is reporting that a location node has an invalid parent client node.
   * </pre>
   *
   * <code>LOCATION_HAS_INVALID_PARENT_CLIENT = 21;</code>
   */
  LOCATION_HAS_INVALID_PARENT_CLIENT(21),
  /**
   * <pre>
   * DiagnosticCodeClientHasInvalidParentCallCenter integer value for a diagnostic coded as 'client has invalid parent call center' type.
   * The diagnostic is reporting that a client node has an invalid parent call center.
   * </pre>
   *
   * <code>CLIENT_HAS_INVALID_PARENT_CALL_CENTER = 22;</code>
   */
  CLIENT_HAS_INVALID_PARENT_CALL_CENTER(22),
  /**
   * <pre>
   * DiagnosticCodeAgentGroupHasInvalidParentNode integer value for a diagnostic coded as 'agent group has invalid parent node' type.
   * The diagnostic is reporting that an agent group has an invalid parent node.
   * </pre>
   *
   * <code>AGENT_GROUP_HAS_INVALID_PARENT_NODE = 23;</code>
   */
  AGENT_GROUP_HAS_INVALID_PARENT_NODE(23),
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateHasInvalidParentProgram integer value for a diagnostic coded as 'shift template has invalid parent program' type.
   * The diagnostic is reporting an invalid parent program for a shift template.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM = 24;</code>
   */
  SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM(24),
  /**
   * <pre>
   * DiagnosticCodeNoSkillProficiencyForMinSkillProficiencyConstraintRule integer value for a diagnostic coded as 'skill proficiency for constraint rule not found' type.
   * The diagnostic is reporting a constraint rule pointing to a missing skill proficiency.
   * </pre>
   *
   * <code>NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE = 25;</code>
   */
  NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE(25),
  /**
   * <pre>
   * DiagnosticCodeTooManyAgentsWithLockedShiftsForMinAgents integer value for a diagnostic coded as 'too many agent with locked shifts' type.
   * </pre>
   *
   * <code>TOO_MANY_AGENTS_WITH_LOCKED_SHIFTS_FOR_MIN_AGENTS = 26;</code>
   */
  TOO_MANY_AGENTS_WITH_LOCKED_SHIFTS_FOR_MIN_AGENTS(26),
  /**
   * <pre>
   * DiagnosticCodeAgentDoesNotBelongToAnAgentGroup integer value for a diagnostic coded as 'agent does not belong to an agent group' type.
   * </pre>
   *
   * <code>AGENT_DOES_NOT_BELONG_TO_AN_AGENT_GROUP = 27;</code>
   */
  AGENT_DOES_NOT_BELONG_TO_AN_AGENT_GROUP(27),
  /**
   * <pre>
   * DiagnosticCodeInvalidConstraintValUnits integer value for a diagnostic coded as 'Invalid constraint val units' type.
   * </pre>
   *
   * <code>INVALID_CONSTRAINT_VAL_UNITS = 28;</code>
   */
  INVALID_CONSTRAINT_VAL_UNITS(28),
  /**
   * <pre>
   * DiagnosticCodeConstraintGeneralFailure integer value for a diagnostic coded as 'Constraint general failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_GENERAL_FAILURE = 29;</code>
   */
  CONSTRAINT_GENERAL_FAILURE(29),
  /**
   * <pre>
   * DiagnosticCodeCandidateShiftCollisionDetected integer value for a diagnostic coded as 'Candidate shift collision detected' type.
   * </pre>
   *
   * <code>CANDIDATE_SHIFT_COLLISION_DETECTED = 30;</code>
   */
  CANDIDATE_SHIFT_COLLISION_DETECTED(30),
  /**
   * <pre>
   * DiagnosticCodeCandidateShiftAgentNotAvailable integer value for a diagnostic coded as 'Candidate shift agent not available' type.
   * </pre>
   *
   * <code>CANDIDATE_SHIFT_AGENT_NOT_AVAILABLE = 31;</code>
   */
  CANDIDATE_SHIFT_AGENT_NOT_AVAILABLE(31),
  /**
   * <pre>
   * DiagnosticCodeCandidateClosed integer value for a diagnostic coded as 'Candidate closed' type.
   * </pre>
   *
   * <code>CANDIDATE_CLOSED = 32;</code>
   */
  CANDIDATE_CLOSED(32),
  /**
   * <pre>
   * DiagnosticCodeConstraintActivityNotFound integer value for a diagnostic coded as 'Constraint activity not found' type.
   * </pre>
   *
   * <code>CONSTRAINT_ACTIVITY_NOT_FOUND = 33;</code>
   */
  CONSTRAINT_ACTIVITY_NOT_FOUND(33),
  /**
   * <pre>
   * DiagnosticCodeConstraintAgentDoesNotHaveProficiency integer value for a diagnostic coded as 'Constraint agent does not have proficiency' type.
   * </pre>
   *
   * <code>CONSTRAINT_AGENT_DOES_NOT_HAVE_PROFICIENCY = 34;</code>
   */
  CONSTRAINT_AGENT_DOES_NOT_HAVE_PROFICIENCY(34),
  /**
   * <pre>
   * DiagnosticCodeConstraintAgentProficiencyTooLow integer value for a diagnostic coded as 'Constraint agent proficiency too low' type.
   * </pre>
   *
   * <code>CONSTRAINT_AGENT_PROFICIENCY_TOO_LOW = 35;</code>
   */
  CONSTRAINT_AGENT_PROFICIENCY_TOO_LOW(35),
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxTotalOnFailure integer value for a diagnostic coded as 'Constraint max total on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_TOTAL_ON_FAILURE = 36;</code>
   */
  CONSTRAINT_MAX_TOTAL_ON_FAILURE(36),
  /**
   * <pre>
   * DiagnosticCodeConstraintMinTotalOnFailure integer value for a diagnostic coded as 'Constraint min total on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_TOTAL_ON_FAILURE = 37;</code>
   */
  CONSTRAINT_MIN_TOTAL_ON_FAILURE(37),
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxTotalOffFailure integer value for a diagnostic coded as 'Constraint max total off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_TOTAL_OFF_FAILURE = 38;</code>
   */
  CONSTRAINT_MAX_TOTAL_OFF_FAILURE(38),
  /**
   * <pre>
   * DiagnosticCodeConstraintMinTotalOffFailure integer value for a diagnostic coded as 'Constraint min total off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_TOTAL_OFF_FAILURE = 39;</code>
   */
  CONSTRAINT_MIN_TOTAL_OFF_FAILURE(39),
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxConsecOnFailure integer value for a diagnostic coded as 'Constraint max consec on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_CONSEC_ON_FAILURE = 40;</code>
   */
  CONSTRAINT_MAX_CONSEC_ON_FAILURE(40),
  /**
   * <pre>
   * DiagnosticCodeConstraintMinConsecOnFailure integer value for a diagnostic coded as 'Constraint min consec on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_CONSEC_ON_FAILURE = 41;</code>
   */
  CONSTRAINT_MIN_CONSEC_ON_FAILURE(41),
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxConsecOffFailure integer value for a diagnostic coded as 'Constraint max consec off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_CONSEC_OFF_FAILURE = 42;</code>
   */
  CONSTRAINT_MAX_CONSEC_OFF_FAILURE(42),
  /**
   * <pre>
   * DiagnosticCodeConstraintMinConsecOffFailure integer value for a diagnostic coded as 'Constraint min consec off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_CONSEC_OFF_FAILURE = 43;</code>
   */
  CONSTRAINT_MIN_CONSEC_OFF_FAILURE(43),
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveDayWeekMonthYearShiftPerShift integer value for a diagnostic coded as 'Constraint cannot have day week month year shift per shift' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR_SHIFT__PER_SHIFT = 44;</code>
   */
  CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR_SHIFT__PER_SHIFT(44),
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveDayWeekMonthYearPerMinutesHours integer value for a diagnostic coded as 'Constraint cannot have day week month year per minutes hours' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR__PER_MINUTES_HOURS = 45;</code>
   */
  CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR__PER_MINUTES_HOURS(45),
  /**
   * <pre>
   * DiagnosticCodeConstraintConsecutiveShiftsRuleNotAllowed integer value for a diagnostic coded as 'Constraint consecutive shifts rule not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_CONSECUTIVE_SHIFTS_RULE_NOT_ALLOWED = 46;</code>
   */
  CONSTRAINT_CONSECUTIVE_SHIFTS_RULE_NOT_ALLOWED(46),
  /**
   * <pre>
   * DiagnosticCodeConstraintWithLargerPeriodPerSmallPeriodNotAllowed integer value for a diagnostic coded as 'Constraint with larger period per small period not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_WITH_LARGER_PERIOD_PER_SMALL_PERIOD_NOT_ALLOWED = 47;</code>
   */
  CONSTRAINT_WITH_LARGER_PERIOD_PER_SMALL_PERIOD_NOT_ALLOWED(47),
  /**
   * <pre>
   * DiagnosticCodeConstraintMinMaxOffTimeForShiftsNotAllowed integer value for a diagnostic coded as 'Constraint min max off time for shifts not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_MAX_OFF_TIME_FOR_SHIFTS_NOT_ALLOWED = 48;</code>
   */
  CONSTRAINT_MIN_MAX_OFF_TIME_FOR_SHIFTS_NOT_ALLOWED(48),
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveConsecutiveTimePerMultipleShifts integer value for a diagnostic coded as 'Constraint cannot have consecutive time per multiple shifts' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_CONSECUTIVE_TIME_PER_MULTIPLE_SHIFTS = 49;</code>
   */
  CONSTRAINT_CANNOT_HAVE_CONSECUTIVE_TIME_PER_MULTIPLE_SHIFTS(49),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * DiagnosticCodeGeneral integer value for a diagnostic coded as 'general' type.
   * The code type used when no other code is appropriate.
   * cannot be described by a code. The consumer must interpret the text message for further details
   * </pre>
   *
   * <code>GENERAL = 0;</code>
   */
  public static final int GENERAL_VALUE = 0;
  /**
   * <pre>
   * DiagnosticCodeOk integer value for a diagnostic coded as 'ok' type.
   * The diagnostic is reporting no errors found.
   * </pre>
   *
   * <code>OK = 1;</code>
   */
  public static final int OK_VALUE = 1;
  /**
   * <pre>
   * DiagnosticCodeNoSkillsInDictionary integer value for a diagnostic coded as 'no skills in dictionary' type.
   * The diagnostic is reporting no skills in the dictionary.
   * </pre>
   *
   * <code>NO_SKILLS_IN_DICTIONARY = 2;</code>
   */
  public static final int NO_SKILLS_IN_DICTIONARY_VALUE = 2;
  /**
   * <pre>
   * DiagnosticCodeAgentHasNoSkillProficiencies integer value for a diagnostic coded as 'agent has no skill proficiencies' type.
   * The diagnostic is reporting a wfm agent with no skill proficiencies.
   * </pre>
   *
   * <code>AGENT_HAS_NO_SKILL_PROFICIENCIES = 3;</code>
   */
  public static final int AGENT_HAS_NO_SKILL_PROFICIENCIES_VALUE = 3;
  /**
   * <pre>
   * DiagnosticCodeAgentHasNoSkills integer value for a diagnostic coded as 'agent has no skills' type.
   * The diagnostic is reporting an agent with no skills.
   * </pre>
   *
   * <code>AGENT_HAS_NO_SKILLS = 4;</code>
   */
  public static final int AGENT_HAS_NO_SKILLS_VALUE = 4;
  /**
   * <pre>
   * DiagnosticCodeNoSchedulingActivitiesForConstraintRules integer value for a diagnostic coded as 'no scheduling activity for constraint rules' type.
   * The diagnostic is reporting the constraint rules don't have a scheduling activity.
   * </pre>
   *
   * <code>NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES = 5;</code>
   */
  public static final int NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES_VALUE = 5;
  /**
   * <pre>
   * DiagnosticCodeSchedulingActivityForConstraintRuleNotFound integer value for a diagnostic coded as 'scheduling activity for constraint rule not found' type.
   * The diagnostic is reporting a constraint rule pointing to a scheduling activity that cannot be found.
   * </pre>
   *
   * <code>SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND = 6;</code>
   */
  public static final int SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND_VALUE = 6;
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateCannotBeNone integer value for a diagnostic coded as 'shift template cannot be none' type.
   * The diagnostic is reporting a NONE value for a shift template
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_CANNOT_BE_NONE = 7;</code>
   */
  public static final int SHIFT_TEMPLATE_CANNOT_BE_NONE_VALUE = 7;
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateHasNoPlacementRules integer value for a diagnostic coded as 'shift template has no placement rules' type.
   * The diagnostic is reporting a shift template with no member placement rules.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES = 8;</code>
   */
  public static final int SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES_VALUE = 8;
  /**
   * <pre>
   * DiagnosticCodeNoOncallInShiftTemplatePlacementRules integer value for a diagnostic coded as 'no on-call in shift template placement rules' type.
   * The diagnostic is reporting a shift template whose placement rules do not include an on-call placement.
   * </pre>
   *
   * <code>NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES = 9;</code>
   */
  public static final int NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES_VALUE = 9;
  /**
   * <pre>
   * DiagnosticCodeMinGtMaxDurationInShiftTemplatePlacementRules integer value for a diagnostic coded as 'min greater than max in shift template placement rules' type.
   * The diagnostic is reporting the min duration for a shift templates placement rule being greater than the max duration.
   * </pre>
   *
   * <code>MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES = 10;</code>
   */
  public static final int MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES_VALUE = 10;
  /**
   * <pre>
   * DiagnosticCodeMinGtMaxAgentsInShiftTemplate integer value for a diagnostic coded as 'min greater than max agents in shift template' type.
   * The diagnostic is reporting a shift template with a min_agents value greater than it's max_agents value.
   * </pre>
   *
   * <code>MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE = 11;</code>
   */
  public static final int MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE_VALUE = 11;
  /**
   * <pre>
   * DiagnosticCodeNoPlacementRulesForShiftTemplate integer value for a diagnostic coded as 'no placement rules for shift template' type.
   * The diagnostic is reporting no placement rules as members of the shift template.
   * </pre>
   *
   * <code>NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE = 12;</code>
   */
  public static final int NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE_VALUE = 12;
  /**
   * <pre>
   * DiagnosticCodeActivitiesShorterThanShift integer value for a diagnostic coded as 'activities shorter than shift' type.
   * The diagnostic is reporting that the activities are too short for the shift.
   * </pre>
   *
   * <code>ACTIVITIES_SHORTER_THAN_SHIFT = 13;</code>
   */
  public static final int ACTIVITIES_SHORTER_THAN_SHIFT_VALUE = 13;
  /**
   * <pre>
   * DiagnosticCodeNotEnoughAgentsForShift integer value for a diagnostic coded as 'not enough agents for shift' type.
   * The diagnostic is reporting that a shift doesn't have a sufficient number of agents available.
   * </pre>
   *
   * <code>NOT_ENOUGH_AGENTS_FOR_SHIFT = 14;</code>
   */
  public static final int NOT_ENOUGH_AGENTS_FOR_SHIFT_VALUE = 14;
  /**
   * <pre>
   * DiagnosticCodeProgramHasNoAgentGroups integer value for a diagnostic coded as 'program has no agent groups' type.
   * The diagnostic is reporting that a program node has no member agent groups.
   * </pre>
   *
   * <code>PROGRAM_HAS_NO_AGENT_GROUPS = 15;</code>
   */
  public static final int PROGRAM_HAS_NO_AGENT_GROUPS_VALUE = 15;
  /**
   * <pre>
   * DiagnosticCodeProgramHasNoShiftTemplates integer value for a diagnostic coded as 'program has no shift templates' type.
   * The diagnostic is reporting that a program node has no member shift templates.
   * </pre>
   *
   * <code>PROGRAM_HAS_NO_SHIFT_TEMPLATES = 16;</code>
   */
  public static final int PROGRAM_HAS_NO_SHIFT_TEMPLATES_VALUE = 16;
  /**
   * <pre>
   * DiagnosticCodeLocationHasNoPrograms integer value for a diagnostic coded as 'location has no programs' type.
   * The diagnostic is reporting that a location node has no member program nodes.
   * </pre>
   *
   * <code>LOCATION_HAS_NO_PROGRAMS = 17;</code>
   */
  public static final int LOCATION_HAS_NO_PROGRAMS_VALUE = 17;
  /**
   * <pre>
   * DiagnosticCodeClientHasNoLocations integer value for a diagnostic coded as 'client has no locations' type.
   * The diagnostic is reporting that a client node has no member location nodes.
   * </pre>
   *
   * <code>CLIENT_HAS_NO_LOCATIONS = 18;</code>
   */
  public static final int CLIENT_HAS_NO_LOCATIONS_VALUE = 18;
  /**
   * <pre>
   * DiagnosticCodeCallCenterHasNoClients integer value for a diagnostic coded as 'call center has no clients' type.
   * The diagnostic is reporting that a call center node has no member client nodes
   * </pre>
   *
   * <code>CALL_CENTER_HAS_NO_CLIENTS = 19;</code>
   */
  public static final int CALL_CENTER_HAS_NO_CLIENTS_VALUE = 19;
  /**
   * <pre>
   * DiagnosticCodeProgramHasInvalidParentLocation integer value for a diagnostic coded as 'program has invalid parent location' type.
   * The diagnostic is reporting that a program node has an invalid parent location node.
   * </pre>
   *
   * <code>PROGRAM_HAS_INVALID_PARENT_LOCATION = 20;</code>
   */
  public static final int PROGRAM_HAS_INVALID_PARENT_LOCATION_VALUE = 20;
  /**
   * <pre>
   * DiagnosticCodeLocationHasInvalidParentClient integer value for a diagnostic coded as 'location has invalid parent client' type.
   * The diagnostic is reporting that a location node has an invalid parent client node.
   * </pre>
   *
   * <code>LOCATION_HAS_INVALID_PARENT_CLIENT = 21;</code>
   */
  public static final int LOCATION_HAS_INVALID_PARENT_CLIENT_VALUE = 21;
  /**
   * <pre>
   * DiagnosticCodeClientHasInvalidParentCallCenter integer value for a diagnostic coded as 'client has invalid parent call center' type.
   * The diagnostic is reporting that a client node has an invalid parent call center.
   * </pre>
   *
   * <code>CLIENT_HAS_INVALID_PARENT_CALL_CENTER = 22;</code>
   */
  public static final int CLIENT_HAS_INVALID_PARENT_CALL_CENTER_VALUE = 22;
  /**
   * <pre>
   * DiagnosticCodeAgentGroupHasInvalidParentNode integer value for a diagnostic coded as 'agent group has invalid parent node' type.
   * The diagnostic is reporting that an agent group has an invalid parent node.
   * </pre>
   *
   * <code>AGENT_GROUP_HAS_INVALID_PARENT_NODE = 23;</code>
   */
  public static final int AGENT_GROUP_HAS_INVALID_PARENT_NODE_VALUE = 23;
  /**
   * <pre>
   * DiagnosticCodeShiftTemplateHasInvalidParentProgram integer value for a diagnostic coded as 'shift template has invalid parent program' type.
   * The diagnostic is reporting an invalid parent program for a shift template.
   * </pre>
   *
   * <code>SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM = 24;</code>
   */
  public static final int SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM_VALUE = 24;
  /**
   * <pre>
   * DiagnosticCodeNoSkillProficiencyForMinSkillProficiencyConstraintRule integer value for a diagnostic coded as 'skill proficiency for constraint rule not found' type.
   * The diagnostic is reporting a constraint rule pointing to a missing skill proficiency.
   * </pre>
   *
   * <code>NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE = 25;</code>
   */
  public static final int NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE_VALUE = 25;
  /**
   * <pre>
   * DiagnosticCodeTooManyAgentsWithLockedShiftsForMinAgents integer value for a diagnostic coded as 'too many agent with locked shifts' type.
   * </pre>
   *
   * <code>TOO_MANY_AGENTS_WITH_LOCKED_SHIFTS_FOR_MIN_AGENTS = 26;</code>
   */
  public static final int TOO_MANY_AGENTS_WITH_LOCKED_SHIFTS_FOR_MIN_AGENTS_VALUE = 26;
  /**
   * <pre>
   * DiagnosticCodeAgentDoesNotBelongToAnAgentGroup integer value for a diagnostic coded as 'agent does not belong to an agent group' type.
   * </pre>
   *
   * <code>AGENT_DOES_NOT_BELONG_TO_AN_AGENT_GROUP = 27;</code>
   */
  public static final int AGENT_DOES_NOT_BELONG_TO_AN_AGENT_GROUP_VALUE = 27;
  /**
   * <pre>
   * DiagnosticCodeInvalidConstraintValUnits integer value for a diagnostic coded as 'Invalid constraint val units' type.
   * </pre>
   *
   * <code>INVALID_CONSTRAINT_VAL_UNITS = 28;</code>
   */
  public static final int INVALID_CONSTRAINT_VAL_UNITS_VALUE = 28;
  /**
   * <pre>
   * DiagnosticCodeConstraintGeneralFailure integer value for a diagnostic coded as 'Constraint general failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_GENERAL_FAILURE = 29;</code>
   */
  public static final int CONSTRAINT_GENERAL_FAILURE_VALUE = 29;
  /**
   * <pre>
   * DiagnosticCodeCandidateShiftCollisionDetected integer value for a diagnostic coded as 'Candidate shift collision detected' type.
   * </pre>
   *
   * <code>CANDIDATE_SHIFT_COLLISION_DETECTED = 30;</code>
   */
  public static final int CANDIDATE_SHIFT_COLLISION_DETECTED_VALUE = 30;
  /**
   * <pre>
   * DiagnosticCodeCandidateShiftAgentNotAvailable integer value for a diagnostic coded as 'Candidate shift agent not available' type.
   * </pre>
   *
   * <code>CANDIDATE_SHIFT_AGENT_NOT_AVAILABLE = 31;</code>
   */
  public static final int CANDIDATE_SHIFT_AGENT_NOT_AVAILABLE_VALUE = 31;
  /**
   * <pre>
   * DiagnosticCodeCandidateClosed integer value for a diagnostic coded as 'Candidate closed' type.
   * </pre>
   *
   * <code>CANDIDATE_CLOSED = 32;</code>
   */
  public static final int CANDIDATE_CLOSED_VALUE = 32;
  /**
   * <pre>
   * DiagnosticCodeConstraintActivityNotFound integer value for a diagnostic coded as 'Constraint activity not found' type.
   * </pre>
   *
   * <code>CONSTRAINT_ACTIVITY_NOT_FOUND = 33;</code>
   */
  public static final int CONSTRAINT_ACTIVITY_NOT_FOUND_VALUE = 33;
  /**
   * <pre>
   * DiagnosticCodeConstraintAgentDoesNotHaveProficiency integer value for a diagnostic coded as 'Constraint agent does not have proficiency' type.
   * </pre>
   *
   * <code>CONSTRAINT_AGENT_DOES_NOT_HAVE_PROFICIENCY = 34;</code>
   */
  public static final int CONSTRAINT_AGENT_DOES_NOT_HAVE_PROFICIENCY_VALUE = 34;
  /**
   * <pre>
   * DiagnosticCodeConstraintAgentProficiencyTooLow integer value for a diagnostic coded as 'Constraint agent proficiency too low' type.
   * </pre>
   *
   * <code>CONSTRAINT_AGENT_PROFICIENCY_TOO_LOW = 35;</code>
   */
  public static final int CONSTRAINT_AGENT_PROFICIENCY_TOO_LOW_VALUE = 35;
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxTotalOnFailure integer value for a diagnostic coded as 'Constraint max total on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_TOTAL_ON_FAILURE = 36;</code>
   */
  public static final int CONSTRAINT_MAX_TOTAL_ON_FAILURE_VALUE = 36;
  /**
   * <pre>
   * DiagnosticCodeConstraintMinTotalOnFailure integer value for a diagnostic coded as 'Constraint min total on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_TOTAL_ON_FAILURE = 37;</code>
   */
  public static final int CONSTRAINT_MIN_TOTAL_ON_FAILURE_VALUE = 37;
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxTotalOffFailure integer value for a diagnostic coded as 'Constraint max total off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_TOTAL_OFF_FAILURE = 38;</code>
   */
  public static final int CONSTRAINT_MAX_TOTAL_OFF_FAILURE_VALUE = 38;
  /**
   * <pre>
   * DiagnosticCodeConstraintMinTotalOffFailure integer value for a diagnostic coded as 'Constraint min total off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_TOTAL_OFF_FAILURE = 39;</code>
   */
  public static final int CONSTRAINT_MIN_TOTAL_OFF_FAILURE_VALUE = 39;
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxConsecOnFailure integer value for a diagnostic coded as 'Constraint max consec on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_CONSEC_ON_FAILURE = 40;</code>
   */
  public static final int CONSTRAINT_MAX_CONSEC_ON_FAILURE_VALUE = 40;
  /**
   * <pre>
   * DiagnosticCodeConstraintMinConsecOnFailure integer value for a diagnostic coded as 'Constraint min consec on failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_CONSEC_ON_FAILURE = 41;</code>
   */
  public static final int CONSTRAINT_MIN_CONSEC_ON_FAILURE_VALUE = 41;
  /**
   * <pre>
   * DiagnosticCodeConstraintMaxConsecOffFailure integer value for a diagnostic coded as 'Constraint max consec off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MAX_CONSEC_OFF_FAILURE = 42;</code>
   */
  public static final int CONSTRAINT_MAX_CONSEC_OFF_FAILURE_VALUE = 42;
  /**
   * <pre>
   * DiagnosticCodeConstraintMinConsecOffFailure integer value for a diagnostic coded as 'Constraint min consec off failure' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_CONSEC_OFF_FAILURE = 43;</code>
   */
  public static final int CONSTRAINT_MIN_CONSEC_OFF_FAILURE_VALUE = 43;
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveDayWeekMonthYearShiftPerShift integer value for a diagnostic coded as 'Constraint cannot have day week month year shift per shift' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR_SHIFT__PER_SHIFT = 44;</code>
   */
  public static final int CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR_SHIFT__PER_SHIFT_VALUE = 44;
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveDayWeekMonthYearPerMinutesHours integer value for a diagnostic coded as 'Constraint cannot have day week month year per minutes hours' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR__PER_MINUTES_HOURS = 45;</code>
   */
  public static final int CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR__PER_MINUTES_HOURS_VALUE = 45;
  /**
   * <pre>
   * DiagnosticCodeConstraintConsecutiveShiftsRuleNotAllowed integer value for a diagnostic coded as 'Constraint consecutive shifts rule not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_CONSECUTIVE_SHIFTS_RULE_NOT_ALLOWED = 46;</code>
   */
  public static final int CONSTRAINT_CONSECUTIVE_SHIFTS_RULE_NOT_ALLOWED_VALUE = 46;
  /**
   * <pre>
   * DiagnosticCodeConstraintWithLargerPeriodPerSmallPeriodNotAllowed integer value for a diagnostic coded as 'Constraint with larger period per small period not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_WITH_LARGER_PERIOD_PER_SMALL_PERIOD_NOT_ALLOWED = 47;</code>
   */
  public static final int CONSTRAINT_WITH_LARGER_PERIOD_PER_SMALL_PERIOD_NOT_ALLOWED_VALUE = 47;
  /**
   * <pre>
   * DiagnosticCodeConstraintMinMaxOffTimeForShiftsNotAllowed integer value for a diagnostic coded as 'Constraint min max off time for shifts not allowed' type.
   * </pre>
   *
   * <code>CONSTRAINT_MIN_MAX_OFF_TIME_FOR_SHIFTS_NOT_ALLOWED = 48;</code>
   */
  public static final int CONSTRAINT_MIN_MAX_OFF_TIME_FOR_SHIFTS_NOT_ALLOWED_VALUE = 48;
  /**
   * <pre>
   * DiagnosticCodeConstraintCannotHaveConsecutiveTimePerMultipleShifts integer value for a diagnostic coded as 'Constraint cannot have consecutive time per multiple shifts' type.
   * </pre>
   *
   * <code>CONSTRAINT_CANNOT_HAVE_CONSECUTIVE_TIME_PER_MULTIPLE_SHIFTS = 49;</code>
   */
  public static final int CONSTRAINT_CANNOT_HAVE_CONSECUTIVE_TIME_PER_MULTIPLE_SHIFTS_VALUE = 49;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DiagnosticCode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DiagnosticCode forNumber(int value) {
    switch (value) {
      case 0: return GENERAL;
      case 1: return OK;
      case 2: return NO_SKILLS_IN_DICTIONARY;
      case 3: return AGENT_HAS_NO_SKILL_PROFICIENCIES;
      case 4: return AGENT_HAS_NO_SKILLS;
      case 5: return NO_SCHEDULING_ACTIVITIES_FOR_CONSTRAINT_RULES;
      case 6: return SCHEDULING_ACTIVITY_FOR_CONSTRAINT_RULE_NOT_FOUND;
      case 7: return SHIFT_TEMPLATE_CANNOT_BE_NONE;
      case 8: return SHIFT_TEMPLATE_HAS_NO_PLACEMENT_RULES;
      case 9: return NO_ONCALL_IN_SHIFT_TEMPLATE_PLACEMENT_RULES;
      case 10: return MIN_GT_MAX_DURATION_IN_SHIFT_TEMPLATE_PLACEMENT_RULES;
      case 11: return MIN_GT_MAX_AGENTS_IN_SHIFT_TEMPLATE;
      case 12: return NO_PLACEMENT_RULES_FOR_SHIFT_TEMPLATE;
      case 13: return ACTIVITIES_SHORTER_THAN_SHIFT;
      case 14: return NOT_ENOUGH_AGENTS_FOR_SHIFT;
      case 15: return PROGRAM_HAS_NO_AGENT_GROUPS;
      case 16: return PROGRAM_HAS_NO_SHIFT_TEMPLATES;
      case 17: return LOCATION_HAS_NO_PROGRAMS;
      case 18: return CLIENT_HAS_NO_LOCATIONS;
      case 19: return CALL_CENTER_HAS_NO_CLIENTS;
      case 20: return PROGRAM_HAS_INVALID_PARENT_LOCATION;
      case 21: return LOCATION_HAS_INVALID_PARENT_CLIENT;
      case 22: return CLIENT_HAS_INVALID_PARENT_CALL_CENTER;
      case 23: return AGENT_GROUP_HAS_INVALID_PARENT_NODE;
      case 24: return SHIFT_TEMPLATE_HAS_INVALID_PARENT_PROGRAM;
      case 25: return NO_SKILL_PROFICIENCY_FOR_MIN_SKILL_PROFICIENCY_CONSTRAINT_RULE;
      case 26: return TOO_MANY_AGENTS_WITH_LOCKED_SHIFTS_FOR_MIN_AGENTS;
      case 27: return AGENT_DOES_NOT_BELONG_TO_AN_AGENT_GROUP;
      case 28: return INVALID_CONSTRAINT_VAL_UNITS;
      case 29: return CONSTRAINT_GENERAL_FAILURE;
      case 30: return CANDIDATE_SHIFT_COLLISION_DETECTED;
      case 31: return CANDIDATE_SHIFT_AGENT_NOT_AVAILABLE;
      case 32: return CANDIDATE_CLOSED;
      case 33: return CONSTRAINT_ACTIVITY_NOT_FOUND;
      case 34: return CONSTRAINT_AGENT_DOES_NOT_HAVE_PROFICIENCY;
      case 35: return CONSTRAINT_AGENT_PROFICIENCY_TOO_LOW;
      case 36: return CONSTRAINT_MAX_TOTAL_ON_FAILURE;
      case 37: return CONSTRAINT_MIN_TOTAL_ON_FAILURE;
      case 38: return CONSTRAINT_MAX_TOTAL_OFF_FAILURE;
      case 39: return CONSTRAINT_MIN_TOTAL_OFF_FAILURE;
      case 40: return CONSTRAINT_MAX_CONSEC_ON_FAILURE;
      case 41: return CONSTRAINT_MIN_CONSEC_ON_FAILURE;
      case 42: return CONSTRAINT_MAX_CONSEC_OFF_FAILURE;
      case 43: return CONSTRAINT_MIN_CONSEC_OFF_FAILURE;
      case 44: return CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR_SHIFT__PER_SHIFT;
      case 45: return CONSTRAINT_CANNOT_HAVE_DAY_WEEK_MONTH_YEAR__PER_MINUTES_HOURS;
      case 46: return CONSTRAINT_CONSECUTIVE_SHIFTS_RULE_NOT_ALLOWED;
      case 47: return CONSTRAINT_WITH_LARGER_PERIOD_PER_SMALL_PERIOD_NOT_ALLOWED;
      case 48: return CONSTRAINT_MIN_MAX_OFF_TIME_FOR_SHIFTS_NOT_ALLOWED;
      case 49: return CONSTRAINT_CANNOT_HAVE_CONSECUTIVE_TIME_PER_MULTIPLE_SHIFTS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DiagnosticCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DiagnosticCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DiagnosticCode>() {
          public DiagnosticCode findValueByNumber(int number) {
            return DiagnosticCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.WfmProto.getDescriptor().getEnumTypes().get(11);
  }

  private static final DiagnosticCode[] VALUES = values();

  public static DiagnosticCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DiagnosticCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.DiagnosticCode)
}

