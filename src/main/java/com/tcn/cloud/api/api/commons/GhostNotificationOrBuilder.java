// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/ghostnotifier.proto

package com.tcn.cloud.api.api.commons;

public interface GhostNotificationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.GhostNotification)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * a structured id used to identify the given notification
   * </pre>
   *
   * <code>string reference_id = 1 [json_name = "referenceId"];</code>
   * @return The referenceId.
   */
  java.lang.String getReferenceId();
  /**
   * <pre>
   * a structured id used to identify the given notification
   * </pre>
   *
   * <code>string reference_id = 1 [json_name = "referenceId"];</code>
   * @return The bytes for referenceId.
   */
  com.google.protobuf.ByteString
      getReferenceIdBytes();

  /**
   * <pre>
   * payload used when no other oneof type has been defined
   * </pre>
   *
   * <code>.google.protobuf.Any any = 2 [json_name = "any"];</code>
   * @return Whether the any field is set.
   */
  boolean hasAny();
  /**
   * <pre>
   * payload used when no other oneof type has been defined
   * </pre>
   *
   * <code>.google.protobuf.Any any = 2 [json_name = "any"];</code>
   * @return The any.
   */
  com.google.protobuf.Any getAny();
  /**
   * <pre>
   * payload used when no other oneof type has been defined
   * </pre>
   *
   * <code>.google.protobuf.Any any = 2 [json_name = "any"];</code>
   */
  com.google.protobuf.AnyOrBuilder getAnyOrBuilder();

  /**
   * <pre>
   * A way to return a message with a status code and message.
   * </pre>
   *
   * <code>.api.commons.Status status = 3 [json_name = "status"];</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * A way to return a message with a status code and message.
   * </pre>
   *
   * <code>.api.commons.Status status = 3 [json_name = "status"];</code>
   * @return The status.
   */
  com.tcn.cloud.api.api.commons.Status getStatus();
  /**
   * <pre>
   * A way to return a message with a status code and message.
   * </pre>
   *
   * <code>.api.commons.Status status = 3 [json_name = "status"];</code>
   */
  com.tcn.cloud.api.api.commons.StatusOrBuilder getStatusOrBuilder();

  /**
   * <pre>
   * An omni conversation
   * </pre>
   *
   * <code>.api.commons.OmniConversation omni_conversation = 4 [json_name = "omniConversation"];</code>
   * @return Whether the omniConversation field is set.
   */
  boolean hasOmniConversation();
  /**
   * <pre>
   * An omni conversation
   * </pre>
   *
   * <code>.api.commons.OmniConversation omni_conversation = 4 [json_name = "omniConversation"];</code>
   * @return The omniConversation.
   */
  com.tcn.cloud.api.api.commons.OmniConversation getOmniConversation();
  /**
   * <pre>
   * An omni conversation
   * </pre>
   *
   * <code>.api.commons.OmniConversation omni_conversation = 4 [json_name = "omniConversation"];</code>
   */
  com.tcn.cloud.api.api.commons.OmniConversationOrBuilder getOmniConversationOrBuilder();

  /**
   * <pre>
   * an alert to an agent that a message from backoffice came in
   * </pre>
   *
   * <code>.api.commons.AgentBackofficeMessageAlert backoffice_message = 6 [json_name = "backofficeMessage"];</code>
   * @return Whether the backofficeMessage field is set.
   */
  boolean hasBackofficeMessage();
  /**
   * <pre>
   * an alert to an agent that a message from backoffice came in
   * </pre>
   *
   * <code>.api.commons.AgentBackofficeMessageAlert backoffice_message = 6 [json_name = "backofficeMessage"];</code>
   * @return The backofficeMessage.
   */
  com.tcn.cloud.api.api.commons.AgentBackofficeMessageAlert getBackofficeMessage();
  /**
   * <pre>
   * an alert to an agent that a message from backoffice came in
   * </pre>
   *
   * <code>.api.commons.AgentBackofficeMessageAlert backoffice_message = 6 [json_name = "backofficeMessage"];</code>
   */
  com.tcn.cloud.api.api.commons.AgentBackofficeMessageAlertOrBuilder getBackofficeMessageOrBuilder();

  /**
   * <pre>
   * alert that a direct agent call is ringing
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallRingingAlert directed_call_ringing = 7 [json_name = "directedCallRinging"];</code>
   * @return Whether the directedCallRinging field is set.
   */
  boolean hasDirectedCallRinging();
  /**
   * <pre>
   * alert that a direct agent call is ringing
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallRingingAlert directed_call_ringing = 7 [json_name = "directedCallRinging"];</code>
   * @return The directedCallRinging.
   */
  com.tcn.cloud.api.api.commons.AgentDirectedCallRingingAlert getDirectedCallRinging();
  /**
   * <pre>
   * alert that a direct agent call is ringing
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallRingingAlert directed_call_ringing = 7 [json_name = "directedCallRinging"];</code>
   */
  com.tcn.cloud.api.api.commons.AgentDirectedCallRingingAlertOrBuilder getDirectedCallRingingOrBuilder();

  /**
   * <pre>
   * alert that a direct agent call hungup
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallHangupAlert directed_call_hangup = 8 [json_name = "directedCallHangup"];</code>
   * @return Whether the directedCallHangup field is set.
   */
  boolean hasDirectedCallHangup();
  /**
   * <pre>
   * alert that a direct agent call hungup
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallHangupAlert directed_call_hangup = 8 [json_name = "directedCallHangup"];</code>
   * @return The directedCallHangup.
   */
  com.tcn.cloud.api.api.commons.AgentDirectedCallHangupAlert getDirectedCallHangup();
  /**
   * <pre>
   * alert that a direct agent call hungup
   * </pre>
   *
   * <code>.api.commons.AgentDirectedCallHangupAlert directed_call_hangup = 8 [json_name = "directedCallHangup"];</code>
   */
  com.tcn.cloud.api.api.commons.AgentDirectedCallHangupAlertOrBuilder getDirectedCallHangupOrBuilder();

  /**
   * <pre>
   * notification about the current state of queued call for an agent
   * </pre>
   *
   * <code>.api.commons.AgentQueuedCallsNotification agent_queued_calls_notification = 9 [json_name = "agentQueuedCallsNotification"];</code>
   * @return Whether the agentQueuedCallsNotification field is set.
   */
  boolean hasAgentQueuedCallsNotification();
  /**
   * <pre>
   * notification about the current state of queued call for an agent
   * </pre>
   *
   * <code>.api.commons.AgentQueuedCallsNotification agent_queued_calls_notification = 9 [json_name = "agentQueuedCallsNotification"];</code>
   * @return The agentQueuedCallsNotification.
   */
  com.tcn.cloud.api.api.commons.AgentQueuedCallsNotification getAgentQueuedCallsNotification();
  /**
   * <pre>
   * notification about the current state of queued call for an agent
   * </pre>
   *
   * <code>.api.commons.AgentQueuedCallsNotification agent_queued_calls_notification = 9 [json_name = "agentQueuedCallsNotification"];</code>
   */
  com.tcn.cloud.api.api.commons.AgentQueuedCallsNotificationOrBuilder getAgentQueuedCallsNotificationOrBuilder();

  /**
   * <pre>
   * notification that an auth token will soon expire
   * </pre>
   *
   * <code>.api.commons.AuthTokenExpiration auth_token_expiration_notification = 11 [json_name = "authTokenExpirationNotification"];</code>
   * @return Whether the authTokenExpirationNotification field is set.
   */
  boolean hasAuthTokenExpirationNotification();
  /**
   * <pre>
   * notification that an auth token will soon expire
   * </pre>
   *
   * <code>.api.commons.AuthTokenExpiration auth_token_expiration_notification = 11 [json_name = "authTokenExpirationNotification"];</code>
   * @return The authTokenExpirationNotification.
   */
  com.tcn.cloud.api.api.commons.AuthTokenExpiration getAuthTokenExpirationNotification();
  /**
   * <pre>
   * notification that an auth token will soon expire
   * </pre>
   *
   * <code>.api.commons.AuthTokenExpiration auth_token_expiration_notification = 11 [json_name = "authTokenExpirationNotification"];</code>
   */
  com.tcn.cloud.api.api.commons.AuthTokenExpirationOrBuilder getAuthTokenExpirationNotificationOrBuilder();

  com.tcn.cloud.api.api.commons.GhostNotification.PayloadCase getPayloadCase();
}
