// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/lms.proto

package com.tcn.cloud.api.api.v0alpha;

public interface StreamListRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.v0alpha.StreamListRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string org_id = 1 [json_name = "orgId"];</code>
   * @return The orgId.
   */
  java.lang.String getOrgId();
  /**
   * <code>string org_id = 1 [json_name = "orgId"];</code>
   * @return The bytes for orgId.
   */
  com.google.protobuf.ByteString
      getOrgIdBytes();

  /**
   * <code>string region_id = 2 [json_name = "regionId"];</code>
   * @return The regionId.
   */
  java.lang.String getRegionId();
  /**
   * <code>string region_id = 2 [json_name = "regionId"];</code>
   * @return The bytes for regionId.
   */
  com.google.protobuf.ByteString
      getRegionIdBytes();

  /**
   * <pre>
   * the element/node we want to upload the list to.
   * must be an api_entrypoint type element.
   * all chunks will be concat together in order for each element streamed.
   * if this field is ever empty the whole call will error.
   * </pre>
   *
   * <code>string element_id = 3 [json_name = "elementId"];</code>
   * @return The elementId.
   */
  java.lang.String getElementId();
  /**
   * <pre>
   * the element/node we want to upload the list to.
   * must be an api_entrypoint type element.
   * all chunks will be concat together in order for each element streamed.
   * if this field is ever empty the whole call will error.
   * </pre>
   *
   * <code>string element_id = 3 [json_name = "elementId"];</code>
   * @return The bytes for elementId.
   */
  com.google.protobuf.ByteString
      getElementIdBytes();

  /**
   * <pre>
   * up to 2mb of raw bytes of the list we are uploading.
   * all chunks streamed are concat together and uploaded after streaming ends.
   * </pre>
   *
   * <code>bytes chunk = 4 [json_name = "chunk"];</code>
   * @return The chunk.
   */
  com.google.protobuf.ByteString getChunk();
}
