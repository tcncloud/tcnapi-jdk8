// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/integrations/integrations.proto

package com.tcn.cloud.api.api.commons.integrations;

public interface FeeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.integrations.Fee)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * ex: 1.00 means flat rate of 1 dollar added to the total
   * </pre>
   *
   * <code>string flat = 2 [json_name = "flat"];</code>
   * @return Whether the flat field is set.
   */
  boolean hasFlat();
  /**
   * <pre>
   * ex: 1.00 means flat rate of 1 dollar added to the total
   * </pre>
   *
   * <code>string flat = 2 [json_name = "flat"];</code>
   * @return The flat.
   */
  java.lang.String getFlat();
  /**
   * <pre>
   * ex: 1.00 means flat rate of 1 dollar added to the total
   * </pre>
   *
   * <code>string flat = 2 [json_name = "flat"];</code>
   * @return The bytes for flat.
   */
  com.google.protobuf.ByteString
      getFlatBytes();

  /**
   * <pre>
   * some computation done on the invoice amount_due to come up with the rate
   * </pre>
   *
   * <code>.api.commons.integrations.ComputedAmount computed = 3 [json_name = "computed"];</code>
   * @return Whether the computed field is set.
   */
  boolean hasComputed();
  /**
   * <pre>
   * some computation done on the invoice amount_due to come up with the rate
   * </pre>
   *
   * <code>.api.commons.integrations.ComputedAmount computed = 3 [json_name = "computed"];</code>
   * @return The computed.
   */
  com.tcn.cloud.api.api.commons.integrations.ComputedAmount getComputed();
  /**
   * <pre>
   * some computation done on the invoice amount_due to come up with the rate
   * </pre>
   *
   * <code>.api.commons.integrations.ComputedAmount computed = 3 [json_name = "computed"];</code>
   */
  com.tcn.cloud.api.api.commons.integrations.ComputedAmountOrBuilder getComputedOrBuilder();

  /**
   * <pre>
   * rate is looked up using another api call or some other way
   * </pre>
   *
   * <code>.api.commons.integrations.Lookup lookup = 4 [json_name = "lookup"];</code>
   * @return Whether the lookup field is set.
   */
  boolean hasLookup();
  /**
   * <pre>
   * rate is looked up using another api call or some other way
   * </pre>
   *
   * <code>.api.commons.integrations.Lookup lookup = 4 [json_name = "lookup"];</code>
   * @return The lookup.
   */
  com.tcn.cloud.api.api.commons.integrations.Lookup getLookup();
  /**
   * <pre>
   * rate is looked up using another api call or some other way
   * </pre>
   *
   * <code>.api.commons.integrations.Lookup lookup = 4 [json_name = "lookup"];</code>
   */
  com.tcn.cloud.api.api.commons.integrations.LookupOrBuilder getLookupOrBuilder();

  /**
   * <pre>
   * rate is already computed in the amount due, but we want to show it as a breakdown.
   * </pre>
   *
   * <code>bool display = 5 [json_name = "display"];</code>
   * @return The display.
   */
  boolean getDisplay();

  /**
   * <pre>
   * Which api call field we add this fee to.
   * If display is true, this doesn't apply.
   * If left blank we roll the fee up into the total, regardless of what the field name is.
   * </pre>
   *
   * <code>string destination_field = 6 [json_name = "destinationField"];</code>
   * @return The destinationField.
   */
  java.lang.String getDestinationField();
  /**
   * <pre>
   * Which api call field we add this fee to.
   * If display is true, this doesn't apply.
   * If left blank we roll the fee up into the total, regardless of what the field name is.
   * </pre>
   *
   * <code>string destination_field = 6 [json_name = "destinationField"];</code>
   * @return The bytes for destinationField.
   */
  com.google.protobuf.ByteString
      getDestinationFieldBytes();

  com.tcn.cloud.api.api.commons.integrations.Fee.RateCase getRateCase();
}
