// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/wfm/wfm.proto

package com.tcn.cloud.api.api.v1alpha1.wfm;

/**
 * <pre>
 * PerformanceMetricForSkillCollectionV2.
 * Not a top-level entity:
 * * No primary-key field.
 * * No org_id field.
 * * No rpc endpoints, part of PerformanceMetricV2 only.
 * </pre>
 *
 * Protobuf type {@code api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2}
 */
public final class PerformanceMetricForSkillCollectionV2 extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)
    PerformanceMetricForSkillCollectionV2OrBuilder {
private static final long serialVersionUID = 0L;
  // Use PerformanceMetricForSkillCollectionV2.newBuilder() to construct.
  private PerformanceMetricForSkillCollectionV2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PerformanceMetricForSkillCollectionV2() {
    metricType_ = 0;
    fteOccupancyIntervals_ = java.util.Collections.emptyList();
    serviceLevelIntervals_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PerformanceMetricForSkillCollectionV2();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetricForSkillCollectionV2_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetricForSkillCollectionV2_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.class, com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.Builder.class);
  }

  public static final int DATE_RANGE_FIELD_NUMBER = 1;
  private com.tcn.cloud.api.api.commons.DatetimeRange dateRange_;
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   * @return Whether the dateRange field is set.
   */
  @java.lang.Override
  public boolean hasDateRange() {
    return dateRange_ != null;
  }
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   * @return The dateRange.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRange getDateRange() {
    return dateRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
  }
  /**
   * <pre>
   * Datetime range over which the metrics were determined.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDateRangeOrBuilder() {
    return dateRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
  }

  public static final int TOTAL_FTE_INTERVALS_REQUIRED_FIELD_NUMBER = 2;
  private float totalFteIntervalsRequired_ = 0F;
  /**
   * <code>float total_fte_intervals_required = 2 [json_name = "totalFteIntervalsRequired", deprecated = true];</code>
   * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_required is deprecated.
   *     See api/v1alpha1/wfm/wfm.proto;l=5867
   * @return The totalFteIntervalsRequired.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getTotalFteIntervalsRequired() {
    return totalFteIntervalsRequired_;
  }

  public static final int TOTAL_FTE_INTERVALS_ACHIEVED_FIELD_NUMBER = 3;
  private float totalFteIntervalsAchieved_ = 0F;
  /**
   * <code>float total_fte_intervals_achieved = 3 [json_name = "totalFteIntervalsAchieved", deprecated = true];</code>
   * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_achieved is deprecated.
   *     See api/v1alpha1/wfm/wfm.proto;l=5868
   * @return The totalFteIntervalsAchieved.
   */
  @java.lang.Override
  @java.lang.Deprecated public float getTotalFteIntervalsAchieved() {
    return totalFteIntervalsAchieved_;
  }

  public static final int NUM_INTERVALS_WITH_CALL_FTES_FIELD_NUMBER = 4;
  private int numIntervalsWithCallFtes_ = 0;
  /**
   * <code>int32 num_intervals_with_call_ftes = 4 [json_name = "numIntervalsWithCallFtes"];</code>
   * @return The numIntervalsWithCallFtes.
   */
  @java.lang.Override
  public int getNumIntervalsWithCallFtes() {
    return numIntervalsWithCallFtes_;
  }

  public static final int NUM_INTERVALS_WITH_SHIFT_FTES_FIELD_NUMBER = 5;
  private int numIntervalsWithShiftFtes_ = 0;
  /**
   * <code>int32 num_intervals_with_shift_ftes = 5 [json_name = "numIntervalsWithShiftFtes"];</code>
   * @return The numIntervalsWithShiftFtes.
   */
  @java.lang.Override
  public int getNumIntervalsWithShiftFtes() {
    return numIntervalsWithShiftFtes_;
  }

  public static final int NUM_INTERVALS_WITH_CALL_FTES_BUT_NO_SHIFTS_FIELD_NUMBER = 6;
  private int numIntervalsWithCallFtesButNoShifts_ = 0;
  /**
   * <code>int32 num_intervals_with_call_ftes_but_no_shifts = 6 [json_name = "numIntervalsWithCallFtesButNoShifts"];</code>
   * @return The numIntervalsWithCallFtesButNoShifts.
   */
  @java.lang.Override
  public int getNumIntervalsWithCallFtesButNoShifts() {
    return numIntervalsWithCallFtesButNoShifts_;
  }

  public static final int NUM_INTERVALS_WITH_SHIFTS_BUT_NO_CALL_FTES_FIELD_NUMBER = 7;
  private int numIntervalsWithShiftsButNoCallFtes_ = 0;
  /**
   * <code>int32 num_intervals_with_shifts_but_no_call_ftes = 7 [json_name = "numIntervalsWithShiftsButNoCallFtes"];</code>
   * @return The numIntervalsWithShiftsButNoCallFtes.
   */
  @java.lang.Override
  public int getNumIntervalsWithShiftsButNoCallFtes() {
    return numIntervalsWithShiftsButNoCallFtes_;
  }

  public static final int TOTAL_UNDERSCHEDULED_CALL_FTES_FIELD_NUMBER = 8;
  private float totalUnderscheduledCallFtes_ = 0F;
  /**
   * <code>float total_underscheduled_call_ftes = 8 [json_name = "totalUnderscheduledCallFtes"];</code>
   * @return The totalUnderscheduledCallFtes.
   */
  @java.lang.Override
  public float getTotalUnderscheduledCallFtes() {
    return totalUnderscheduledCallFtes_;
  }

  public static final int TOTAL_OVERSCHEDULED_CALL_FTES_FIELD_NUMBER = 9;
  private float totalOverscheduledCallFtes_ = 0F;
  /**
   * <code>float total_overscheduled_call_ftes = 9 [json_name = "totalOverscheduledCallFtes"];</code>
   * @return The totalOverscheduledCallFtes.
   */
  @java.lang.Override
  public float getTotalOverscheduledCallFtes() {
    return totalOverscheduledCallFtes_;
  }

  public static final int INTERVAL_WIDTH_IN_MINUTES_FIELD_NUMBER = 10;
  private int intervalWidthInMinutes_ = 0;
  /**
   * <pre>
   * Width of each interval in minutes.
   * </pre>
   *
   * <code>int32 interval_width_in_minutes = 10 [json_name = "intervalWidthInMinutes"];</code>
   * @return The intervalWidthInMinutes.
   */
  @java.lang.Override
  public int getIntervalWidthInMinutes() {
    return intervalWidthInMinutes_;
  }

  public static final int METRIC_TYPE_FIELD_NUMBER = 11;
  private int metricType_ = 0;
  /**
   * <pre>
   * The type of metric being reported.
   * </pre>
   *
   * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
   * @return The enum numeric value on the wire for metricType.
   */
  @java.lang.Override public int getMetricTypeValue() {
    return metricType_;
  }
  /**
   * <pre>
   * The type of metric being reported.
   * </pre>
   *
   * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
   * @return The metricType.
   */
  @java.lang.Override public com.tcn.cloud.api.api.commons.PerformanceMetricType getMetricType() {
    com.tcn.cloud.api.api.commons.PerformanceMetricType result = com.tcn.cloud.api.api.commons.PerformanceMetricType.forNumber(metricType_);
    return result == null ? com.tcn.cloud.api.api.commons.PerformanceMetricType.UNRECOGNIZED : result;
  }

  public static final int FTE_OCCUPANCY_INTERVALS_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval> fteOccupancyIntervals_;
  /**
   * <pre>
   * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval> getFteOccupancyIntervalsList() {
    return fteOccupancyIntervals_;
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder> 
      getFteOccupancyIntervalsOrBuilderList() {
    return fteOccupancyIntervals_;
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
   */
  @java.lang.Override
  public int getFteOccupancyIntervalsCount() {
    return fteOccupancyIntervals_.size();
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval getFteOccupancyIntervals(int index) {
    return fteOccupancyIntervals_.get(index);
  }
  /**
   * <pre>
   * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
   * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
   * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
   * Interval set comparing the number of FTE required to the number achieved.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder getFteOccupancyIntervalsOrBuilder(
      int index) {
    return fteOccupancyIntervals_.get(index);
  }

  public static final int SERVICE_LEVEL_INTERVALS_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> serviceLevelIntervals_;
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> getServiceLevelIntervalsList() {
    return serviceLevelIntervals_;
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
      getServiceLevelIntervalsOrBuilderList() {
    return serviceLevelIntervals_;
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public int getServiceLevelIntervalsCount() {
    return serviceLevelIntervals_.size();
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval getServiceLevelIntervals(int index) {
    return serviceLevelIntervals_.get(index);
  }
  /**
   * <pre>
   * Interval set checking the service level achieved as a percentage.
   * </pre>
   *
   * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder getServiceLevelIntervalsOrBuilder(
      int index) {
    return serviceLevelIntervals_.get(index);
  }

  public static final int SKILL_COLLECTION_FIELD_NUMBER = 14;
  private com.tcn.cloud.api.api.commons.SkillProfileCategory skillCollection_;
  /**
   * <pre>
   * Pointer to skill collection.
   * </pre>
   *
   * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
   * @return Whether the skillCollection field is set.
   */
  @java.lang.Override
  public boolean hasSkillCollection() {
    return skillCollection_ != null;
  }
  /**
   * <pre>
   * Pointer to skill collection.
   * </pre>
   *
   * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
   * @return The skillCollection.
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.SkillProfileCategory getSkillCollection() {
    return skillCollection_ == null ? com.tcn.cloud.api.api.commons.SkillProfileCategory.getDefaultInstance() : skillCollection_;
  }
  /**
   * <pre>
   * Pointer to skill collection.
   * </pre>
   *
   * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
   */
  @java.lang.Override
  public com.tcn.cloud.api.api.commons.SkillProfileCategoryOrBuilder getSkillCollectionOrBuilder() {
    return skillCollection_ == null ? com.tcn.cloud.api.api.commons.SkillProfileCategory.getDefaultInstance() : skillCollection_;
  }

  public static final int TOTAL_REQUIRED_FTE_FIELD_NUMBER = 15;
  private float totalRequiredFte_ = 0F;
  /**
   * <pre>
   * The total FTE required over the &#64;date_range, as determined by the forecast.
   * </pre>
   *
   * <code>float total_required_fte = 15 [json_name = "totalRequiredFte"];</code>
   * @return The totalRequiredFte.
   */
  @java.lang.Override
  public float getTotalRequiredFte() {
    return totalRequiredFte_;
  }

  public static final int TOTAL_ACHIEVED_FTE_FIELD_NUMBER = 16;
  private float totalAchievedFte_ = 0F;
  /**
   * <pre>
   * The total FTE the the schedule is likely to address with the current shift instances.
   * </pre>
   *
   * <code>float total_achieved_fte = 16 [json_name = "totalAchievedFte"];</code>
   * @return The totalAchievedFte.
   */
  @java.lang.Override
  public float getTotalAchievedFte() {
    return totalAchievedFte_;
  }

  public static final int TOTAL_PRODUCTIVE_FTE_FIELD_NUMBER = 17;
  private float totalProductiveFte_ = 0F;
  /**
   * <pre>
   * Total count of FTE scheduled to be on the phone / productive for a specific interval / duration of time.
   * </pre>
   *
   * <code>float total_productive_fte = 17 [json_name = "totalProductiveFte"];</code>
   * @return The totalProductiveFte.
   */
  @java.lang.Override
  public float getTotalProductiveFte() {
    return totalProductiveFte_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (dateRange_ != null) {
      output.writeMessage(1, getDateRange());
    }
    if (java.lang.Float.floatToRawIntBits(totalFteIntervalsRequired_) != 0) {
      output.writeFloat(2, totalFteIntervalsRequired_);
    }
    if (java.lang.Float.floatToRawIntBits(totalFteIntervalsAchieved_) != 0) {
      output.writeFloat(3, totalFteIntervalsAchieved_);
    }
    if (numIntervalsWithCallFtes_ != 0) {
      output.writeInt32(4, numIntervalsWithCallFtes_);
    }
    if (numIntervalsWithShiftFtes_ != 0) {
      output.writeInt32(5, numIntervalsWithShiftFtes_);
    }
    if (numIntervalsWithCallFtesButNoShifts_ != 0) {
      output.writeInt32(6, numIntervalsWithCallFtesButNoShifts_);
    }
    if (numIntervalsWithShiftsButNoCallFtes_ != 0) {
      output.writeInt32(7, numIntervalsWithShiftsButNoCallFtes_);
    }
    if (java.lang.Float.floatToRawIntBits(totalUnderscheduledCallFtes_) != 0) {
      output.writeFloat(8, totalUnderscheduledCallFtes_);
    }
    if (java.lang.Float.floatToRawIntBits(totalOverscheduledCallFtes_) != 0) {
      output.writeFloat(9, totalOverscheduledCallFtes_);
    }
    if (intervalWidthInMinutes_ != 0) {
      output.writeInt32(10, intervalWidthInMinutes_);
    }
    if (metricType_ != com.tcn.cloud.api.api.commons.PerformanceMetricType.FTE_REQUIRED_VS_ACHIEVED_SIMPLE.getNumber()) {
      output.writeEnum(11, metricType_);
    }
    for (int i = 0; i < fteOccupancyIntervals_.size(); i++) {
      output.writeMessage(12, fteOccupancyIntervals_.get(i));
    }
    for (int i = 0; i < serviceLevelIntervals_.size(); i++) {
      output.writeMessage(13, serviceLevelIntervals_.get(i));
    }
    if (skillCollection_ != null) {
      output.writeMessage(14, getSkillCollection());
    }
    if (java.lang.Float.floatToRawIntBits(totalRequiredFte_) != 0) {
      output.writeFloat(15, totalRequiredFte_);
    }
    if (java.lang.Float.floatToRawIntBits(totalAchievedFte_) != 0) {
      output.writeFloat(16, totalAchievedFte_);
    }
    if (java.lang.Float.floatToRawIntBits(totalProductiveFte_) != 0) {
      output.writeFloat(17, totalProductiveFte_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (dateRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDateRange());
    }
    if (java.lang.Float.floatToRawIntBits(totalFteIntervalsRequired_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, totalFteIntervalsRequired_);
    }
    if (java.lang.Float.floatToRawIntBits(totalFteIntervalsAchieved_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, totalFteIntervalsAchieved_);
    }
    if (numIntervalsWithCallFtes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, numIntervalsWithCallFtes_);
    }
    if (numIntervalsWithShiftFtes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, numIntervalsWithShiftFtes_);
    }
    if (numIntervalsWithCallFtesButNoShifts_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, numIntervalsWithCallFtesButNoShifts_);
    }
    if (numIntervalsWithShiftsButNoCallFtes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, numIntervalsWithShiftsButNoCallFtes_);
    }
    if (java.lang.Float.floatToRawIntBits(totalUnderscheduledCallFtes_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, totalUnderscheduledCallFtes_);
    }
    if (java.lang.Float.floatToRawIntBits(totalOverscheduledCallFtes_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, totalOverscheduledCallFtes_);
    }
    if (intervalWidthInMinutes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, intervalWidthInMinutes_);
    }
    if (metricType_ != com.tcn.cloud.api.api.commons.PerformanceMetricType.FTE_REQUIRED_VS_ACHIEVED_SIMPLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, metricType_);
    }
    for (int i = 0; i < fteOccupancyIntervals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, fteOccupancyIntervals_.get(i));
    }
    for (int i = 0; i < serviceLevelIntervals_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, serviceLevelIntervals_.get(i));
    }
    if (skillCollection_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getSkillCollection());
    }
    if (java.lang.Float.floatToRawIntBits(totalRequiredFte_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(15, totalRequiredFte_);
    }
    if (java.lang.Float.floatToRawIntBits(totalAchievedFte_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(16, totalAchievedFte_);
    }
    if (java.lang.Float.floatToRawIntBits(totalProductiveFte_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(17, totalProductiveFte_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 other = (com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2) obj;

    if (hasDateRange() != other.hasDateRange()) return false;
    if (hasDateRange()) {
      if (!getDateRange()
          .equals(other.getDateRange())) return false;
    }
    if (java.lang.Float.floatToIntBits(getTotalFteIntervalsRequired())
        != java.lang.Float.floatToIntBits(
            other.getTotalFteIntervalsRequired())) return false;
    if (java.lang.Float.floatToIntBits(getTotalFteIntervalsAchieved())
        != java.lang.Float.floatToIntBits(
            other.getTotalFteIntervalsAchieved())) return false;
    if (getNumIntervalsWithCallFtes()
        != other.getNumIntervalsWithCallFtes()) return false;
    if (getNumIntervalsWithShiftFtes()
        != other.getNumIntervalsWithShiftFtes()) return false;
    if (getNumIntervalsWithCallFtesButNoShifts()
        != other.getNumIntervalsWithCallFtesButNoShifts()) return false;
    if (getNumIntervalsWithShiftsButNoCallFtes()
        != other.getNumIntervalsWithShiftsButNoCallFtes()) return false;
    if (java.lang.Float.floatToIntBits(getTotalUnderscheduledCallFtes())
        != java.lang.Float.floatToIntBits(
            other.getTotalUnderscheduledCallFtes())) return false;
    if (java.lang.Float.floatToIntBits(getTotalOverscheduledCallFtes())
        != java.lang.Float.floatToIntBits(
            other.getTotalOverscheduledCallFtes())) return false;
    if (getIntervalWidthInMinutes()
        != other.getIntervalWidthInMinutes()) return false;
    if (metricType_ != other.metricType_) return false;
    if (!getFteOccupancyIntervalsList()
        .equals(other.getFteOccupancyIntervalsList())) return false;
    if (!getServiceLevelIntervalsList()
        .equals(other.getServiceLevelIntervalsList())) return false;
    if (hasSkillCollection() != other.hasSkillCollection()) return false;
    if (hasSkillCollection()) {
      if (!getSkillCollection()
          .equals(other.getSkillCollection())) return false;
    }
    if (java.lang.Float.floatToIntBits(getTotalRequiredFte())
        != java.lang.Float.floatToIntBits(
            other.getTotalRequiredFte())) return false;
    if (java.lang.Float.floatToIntBits(getTotalAchievedFte())
        != java.lang.Float.floatToIntBits(
            other.getTotalAchievedFte())) return false;
    if (java.lang.Float.floatToIntBits(getTotalProductiveFte())
        != java.lang.Float.floatToIntBits(
            other.getTotalProductiveFte())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDateRange()) {
      hash = (37 * hash) + DATE_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getDateRange().hashCode();
    }
    hash = (37 * hash) + TOTAL_FTE_INTERVALS_REQUIRED_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalFteIntervalsRequired());
    hash = (37 * hash) + TOTAL_FTE_INTERVALS_ACHIEVED_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalFteIntervalsAchieved());
    hash = (37 * hash) + NUM_INTERVALS_WITH_CALL_FTES_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithCallFtes();
    hash = (37 * hash) + NUM_INTERVALS_WITH_SHIFT_FTES_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithShiftFtes();
    hash = (37 * hash) + NUM_INTERVALS_WITH_CALL_FTES_BUT_NO_SHIFTS_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithCallFtesButNoShifts();
    hash = (37 * hash) + NUM_INTERVALS_WITH_SHIFTS_BUT_NO_CALL_FTES_FIELD_NUMBER;
    hash = (53 * hash) + getNumIntervalsWithShiftsButNoCallFtes();
    hash = (37 * hash) + TOTAL_UNDERSCHEDULED_CALL_FTES_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalUnderscheduledCallFtes());
    hash = (37 * hash) + TOTAL_OVERSCHEDULED_CALL_FTES_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalOverscheduledCallFtes());
    hash = (37 * hash) + INTERVAL_WIDTH_IN_MINUTES_FIELD_NUMBER;
    hash = (53 * hash) + getIntervalWidthInMinutes();
    hash = (37 * hash) + METRIC_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + metricType_;
    if (getFteOccupancyIntervalsCount() > 0) {
      hash = (37 * hash) + FTE_OCCUPANCY_INTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getFteOccupancyIntervalsList().hashCode();
    }
    if (getServiceLevelIntervalsCount() > 0) {
      hash = (37 * hash) + SERVICE_LEVEL_INTERVALS_FIELD_NUMBER;
      hash = (53 * hash) + getServiceLevelIntervalsList().hashCode();
    }
    if (hasSkillCollection()) {
      hash = (37 * hash) + SKILL_COLLECTION_FIELD_NUMBER;
      hash = (53 * hash) + getSkillCollection().hashCode();
    }
    hash = (37 * hash) + TOTAL_REQUIRED_FTE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalRequiredFte());
    hash = (37 * hash) + TOTAL_ACHIEVED_FTE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalAchievedFte());
    hash = (37 * hash) + TOTAL_PRODUCTIVE_FTE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTotalProductiveFte());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * PerformanceMetricForSkillCollectionV2.
   * Not a top-level entity:
   * * No primary-key field.
   * * No org_id field.
   * * No rpc endpoints, part of PerformanceMetricV2 only.
   * </pre>
   *
   * Protobuf type {@code api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2OrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetricForSkillCollectionV2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetricForSkillCollectionV2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.class, com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      dateRange_ = null;
      if (dateRangeBuilder_ != null) {
        dateRangeBuilder_.dispose();
        dateRangeBuilder_ = null;
      }
      totalFteIntervalsRequired_ = 0F;
      totalFteIntervalsAchieved_ = 0F;
      numIntervalsWithCallFtes_ = 0;
      numIntervalsWithShiftFtes_ = 0;
      numIntervalsWithCallFtesButNoShifts_ = 0;
      numIntervalsWithShiftsButNoCallFtes_ = 0;
      totalUnderscheduledCallFtes_ = 0F;
      totalOverscheduledCallFtes_ = 0F;
      intervalWidthInMinutes_ = 0;
      metricType_ = 0;
      if (fteOccupancyIntervalsBuilder_ == null) {
        fteOccupancyIntervals_ = java.util.Collections.emptyList();
      } else {
        fteOccupancyIntervals_ = null;
        fteOccupancyIntervalsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervals_ = java.util.Collections.emptyList();
      } else {
        serviceLevelIntervals_ = null;
        serviceLevelIntervalsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      skillCollection_ = null;
      if (skillCollectionBuilder_ != null) {
        skillCollectionBuilder_.dispose();
        skillCollectionBuilder_ = null;
      }
      totalRequiredFte_ = 0F;
      totalAchievedFte_ = 0F;
      totalProductiveFte_ = 0F;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.WfmProto.internal_static_api_v1alpha1_wfm_PerformanceMetricForSkillCollectionV2_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 build() {
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 buildPartial() {
      com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 result = new com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 result) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          fteOccupancyIntervals_ = java.util.Collections.unmodifiableList(fteOccupancyIntervals_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.fteOccupancyIntervals_ = fteOccupancyIntervals_;
      } else {
        result.fteOccupancyIntervals_ = fteOccupancyIntervalsBuilder_.build();
      }
      if (serviceLevelIntervalsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)) {
          serviceLevelIntervals_ = java.util.Collections.unmodifiableList(serviceLevelIntervals_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.serviceLevelIntervals_ = serviceLevelIntervals_;
      } else {
        result.serviceLevelIntervals_ = serviceLevelIntervalsBuilder_.build();
      }
    }

    private void buildPartial0(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.dateRange_ = dateRangeBuilder_ == null
            ? dateRange_
            : dateRangeBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalFteIntervalsRequired_ = totalFteIntervalsRequired_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.totalFteIntervalsAchieved_ = totalFteIntervalsAchieved_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.numIntervalsWithCallFtes_ = numIntervalsWithCallFtes_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.numIntervalsWithShiftFtes_ = numIntervalsWithShiftFtes_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.numIntervalsWithCallFtesButNoShifts_ = numIntervalsWithCallFtesButNoShifts_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.numIntervalsWithShiftsButNoCallFtes_ = numIntervalsWithShiftsButNoCallFtes_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.totalUnderscheduledCallFtes_ = totalUnderscheduledCallFtes_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.totalOverscheduledCallFtes_ = totalOverscheduledCallFtes_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.intervalWidthInMinutes_ = intervalWidthInMinutes_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.metricType_ = metricType_;
      }
      if (((from_bitField0_ & 0x00002000) != 0)) {
        result.skillCollection_ = skillCollectionBuilder_ == null
            ? skillCollection_
            : skillCollectionBuilder_.build();
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.totalRequiredFte_ = totalRequiredFte_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.totalAchievedFte_ = totalAchievedFte_;
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.totalProductiveFte_ = totalProductiveFte_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2) {
        return mergeFrom((com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 other) {
      if (other == com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.getDefaultInstance()) return this;
      if (other.hasDateRange()) {
        mergeDateRange(other.getDateRange());
      }
      if (other.getTotalFteIntervalsRequired() != 0F) {
        setTotalFteIntervalsRequired(other.getTotalFteIntervalsRequired());
      }
      if (other.getTotalFteIntervalsAchieved() != 0F) {
        setTotalFteIntervalsAchieved(other.getTotalFteIntervalsAchieved());
      }
      if (other.getNumIntervalsWithCallFtes() != 0) {
        setNumIntervalsWithCallFtes(other.getNumIntervalsWithCallFtes());
      }
      if (other.getNumIntervalsWithShiftFtes() != 0) {
        setNumIntervalsWithShiftFtes(other.getNumIntervalsWithShiftFtes());
      }
      if (other.getNumIntervalsWithCallFtesButNoShifts() != 0) {
        setNumIntervalsWithCallFtesButNoShifts(other.getNumIntervalsWithCallFtesButNoShifts());
      }
      if (other.getNumIntervalsWithShiftsButNoCallFtes() != 0) {
        setNumIntervalsWithShiftsButNoCallFtes(other.getNumIntervalsWithShiftsButNoCallFtes());
      }
      if (other.getTotalUnderscheduledCallFtes() != 0F) {
        setTotalUnderscheduledCallFtes(other.getTotalUnderscheduledCallFtes());
      }
      if (other.getTotalOverscheduledCallFtes() != 0F) {
        setTotalOverscheduledCallFtes(other.getTotalOverscheduledCallFtes());
      }
      if (other.getIntervalWidthInMinutes() != 0) {
        setIntervalWidthInMinutes(other.getIntervalWidthInMinutes());
      }
      if (other.metricType_ != 0) {
        setMetricTypeValue(other.getMetricTypeValue());
      }
      if (fteOccupancyIntervalsBuilder_ == null) {
        if (!other.fteOccupancyIntervals_.isEmpty()) {
          if (fteOccupancyIntervals_.isEmpty()) {
            fteOccupancyIntervals_ = other.fteOccupancyIntervals_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureFteOccupancyIntervalsIsMutable();
            fteOccupancyIntervals_.addAll(other.fteOccupancyIntervals_);
          }
          onChanged();
        }
      } else {
        if (!other.fteOccupancyIntervals_.isEmpty()) {
          if (fteOccupancyIntervalsBuilder_.isEmpty()) {
            fteOccupancyIntervalsBuilder_.dispose();
            fteOccupancyIntervalsBuilder_ = null;
            fteOccupancyIntervals_ = other.fteOccupancyIntervals_;
            bitField0_ = (bitField0_ & ~0x00000800);
            fteOccupancyIntervalsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFteOccupancyIntervalsFieldBuilder() : null;
          } else {
            fteOccupancyIntervalsBuilder_.addAllMessages(other.fteOccupancyIntervals_);
          }
        }
      }
      if (serviceLevelIntervalsBuilder_ == null) {
        if (!other.serviceLevelIntervals_.isEmpty()) {
          if (serviceLevelIntervals_.isEmpty()) {
            serviceLevelIntervals_ = other.serviceLevelIntervals_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureServiceLevelIntervalsIsMutable();
            serviceLevelIntervals_.addAll(other.serviceLevelIntervals_);
          }
          onChanged();
        }
      } else {
        if (!other.serviceLevelIntervals_.isEmpty()) {
          if (serviceLevelIntervalsBuilder_.isEmpty()) {
            serviceLevelIntervalsBuilder_.dispose();
            serviceLevelIntervalsBuilder_ = null;
            serviceLevelIntervals_ = other.serviceLevelIntervals_;
            bitField0_ = (bitField0_ & ~0x00001000);
            serviceLevelIntervalsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getServiceLevelIntervalsFieldBuilder() : null;
          } else {
            serviceLevelIntervalsBuilder_.addAllMessages(other.serviceLevelIntervals_);
          }
        }
      }
      if (other.hasSkillCollection()) {
        mergeSkillCollection(other.getSkillCollection());
      }
      if (other.getTotalRequiredFte() != 0F) {
        setTotalRequiredFte(other.getTotalRequiredFte());
      }
      if (other.getTotalAchievedFte() != 0F) {
        setTotalAchievedFte(other.getTotalAchievedFte());
      }
      if (other.getTotalProductiveFte() != 0F) {
        setTotalProductiveFte(other.getTotalProductiveFte());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDateRangeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 21: {
              totalFteIntervalsRequired_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              totalFteIntervalsAchieved_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 32: {
              numIntervalsWithCallFtes_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              numIntervalsWithShiftFtes_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              numIntervalsWithCallFtesButNoShifts_ = input.readInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              numIntervalsWithShiftsButNoCallFtes_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 69: {
              totalUnderscheduledCallFtes_ = input.readFloat();
              bitField0_ |= 0x00000080;
              break;
            } // case 69
            case 77: {
              totalOverscheduledCallFtes_ = input.readFloat();
              bitField0_ |= 0x00000100;
              break;
            } // case 77
            case 80: {
              intervalWidthInMinutes_ = input.readInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              metricType_ = input.readEnum();
              bitField0_ |= 0x00000400;
              break;
            } // case 88
            case 98: {
              com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval m =
                  input.readMessage(
                      com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.parser(),
                      extensionRegistry);
              if (fteOccupancyIntervalsBuilder_ == null) {
                ensureFteOccupancyIntervalsIsMutable();
                fteOccupancyIntervals_.add(m);
              } else {
                fteOccupancyIntervalsBuilder_.addMessage(m);
              }
              break;
            } // case 98
            case 106: {
              com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval m =
                  input.readMessage(
                      com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.parser(),
                      extensionRegistry);
              if (serviceLevelIntervalsBuilder_ == null) {
                ensureServiceLevelIntervalsIsMutable();
                serviceLevelIntervals_.add(m);
              } else {
                serviceLevelIntervalsBuilder_.addMessage(m);
              }
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getSkillCollectionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00002000;
              break;
            } // case 114
            case 125: {
              totalRequiredFte_ = input.readFloat();
              bitField0_ |= 0x00004000;
              break;
            } // case 125
            case 133: {
              totalAchievedFte_ = input.readFloat();
              bitField0_ |= 0x00008000;
              break;
            } // case 133
            case 141: {
              totalProductiveFte_ = input.readFloat();
              bitField0_ |= 0x00010000;
              break;
            } // case 141
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.tcn.cloud.api.api.commons.DatetimeRange dateRange_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> dateRangeBuilder_;
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     * @return Whether the dateRange field is set.
     */
    public boolean hasDateRange() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     * @return The dateRange.
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange getDateRange() {
      if (dateRangeBuilder_ == null) {
        return dateRange_ == null ? com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
      } else {
        return dateRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder setDateRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (dateRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateRange_ = value;
      } else {
        dateRangeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder setDateRange(
        com.tcn.cloud.api.api.commons.DatetimeRange.Builder builderForValue) {
      if (dateRangeBuilder_ == null) {
        dateRange_ = builderForValue.build();
      } else {
        dateRangeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder mergeDateRange(com.tcn.cloud.api.api.commons.DatetimeRange value) {
      if (dateRangeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          dateRange_ != null &&
          dateRange_ != com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance()) {
          getDateRangeBuilder().mergeFrom(value);
        } else {
          dateRange_ = value;
        }
      } else {
        dateRangeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public Builder clearDateRange() {
      bitField0_ = (bitField0_ & ~0x00000001);
      dateRange_ = null;
      if (dateRangeBuilder_ != null) {
        dateRangeBuilder_.dispose();
        dateRangeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRange.Builder getDateRangeBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDateRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    public com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getDateRangeOrBuilder() {
      if (dateRangeBuilder_ != null) {
        return dateRangeBuilder_.getMessageOrBuilder();
      } else {
        return dateRange_ == null ?
            com.tcn.cloud.api.api.commons.DatetimeRange.getDefaultInstance() : dateRange_;
      }
    }
    /**
     * <pre>
     * Datetime range over which the metrics were determined.
     * </pre>
     *
     * <code>.api.commons.DatetimeRange date_range = 1 [json_name = "dateRange"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder> 
        getDateRangeFieldBuilder() {
      if (dateRangeBuilder_ == null) {
        dateRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.DatetimeRange, com.tcn.cloud.api.api.commons.DatetimeRange.Builder, com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder>(
                getDateRange(),
                getParentForChildren(),
                isClean());
        dateRange_ = null;
      }
      return dateRangeBuilder_;
    }

    private float totalFteIntervalsRequired_ ;
    /**
     * <code>float total_fte_intervals_required = 2 [json_name = "totalFteIntervalsRequired", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_required is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5867
     * @return The totalFteIntervalsRequired.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getTotalFteIntervalsRequired() {
      return totalFteIntervalsRequired_;
    }
    /**
     * <code>float total_fte_intervals_required = 2 [json_name = "totalFteIntervalsRequired", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_required is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5867
     * @param value The totalFteIntervalsRequired to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setTotalFteIntervalsRequired(float value) {

      totalFteIntervalsRequired_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float total_fte_intervals_required = 2 [json_name = "totalFteIntervalsRequired", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_required is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5867
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearTotalFteIntervalsRequired() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalFteIntervalsRequired_ = 0F;
      onChanged();
      return this;
    }

    private float totalFteIntervalsAchieved_ ;
    /**
     * <code>float total_fte_intervals_achieved = 3 [json_name = "totalFteIntervalsAchieved", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_achieved is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5868
     * @return The totalFteIntervalsAchieved.
     */
    @java.lang.Override
    @java.lang.Deprecated public float getTotalFteIntervalsAchieved() {
      return totalFteIntervalsAchieved_;
    }
    /**
     * <code>float total_fte_intervals_achieved = 3 [json_name = "totalFteIntervalsAchieved", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_achieved is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5868
     * @param value The totalFteIntervalsAchieved to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setTotalFteIntervalsAchieved(float value) {

      totalFteIntervalsAchieved_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>float total_fte_intervals_achieved = 3 [json_name = "totalFteIntervalsAchieved", deprecated = true];</code>
     * @deprecated api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2.total_fte_intervals_achieved is deprecated.
     *     See api/v1alpha1/wfm/wfm.proto;l=5868
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearTotalFteIntervalsAchieved() {
      bitField0_ = (bitField0_ & ~0x00000004);
      totalFteIntervalsAchieved_ = 0F;
      onChanged();
      return this;
    }

    private int numIntervalsWithCallFtes_ ;
    /**
     * <code>int32 num_intervals_with_call_ftes = 4 [json_name = "numIntervalsWithCallFtes"];</code>
     * @return The numIntervalsWithCallFtes.
     */
    @java.lang.Override
    public int getNumIntervalsWithCallFtes() {
      return numIntervalsWithCallFtes_;
    }
    /**
     * <code>int32 num_intervals_with_call_ftes = 4 [json_name = "numIntervalsWithCallFtes"];</code>
     * @param value The numIntervalsWithCallFtes to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithCallFtes(int value) {

      numIntervalsWithCallFtes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 num_intervals_with_call_ftes = 4 [json_name = "numIntervalsWithCallFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithCallFtes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      numIntervalsWithCallFtes_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithShiftFtes_ ;
    /**
     * <code>int32 num_intervals_with_shift_ftes = 5 [json_name = "numIntervalsWithShiftFtes"];</code>
     * @return The numIntervalsWithShiftFtes.
     */
    @java.lang.Override
    public int getNumIntervalsWithShiftFtes() {
      return numIntervalsWithShiftFtes_;
    }
    /**
     * <code>int32 num_intervals_with_shift_ftes = 5 [json_name = "numIntervalsWithShiftFtes"];</code>
     * @param value The numIntervalsWithShiftFtes to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithShiftFtes(int value) {

      numIntervalsWithShiftFtes_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 num_intervals_with_shift_ftes = 5 [json_name = "numIntervalsWithShiftFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithShiftFtes() {
      bitField0_ = (bitField0_ & ~0x00000010);
      numIntervalsWithShiftFtes_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithCallFtesButNoShifts_ ;
    /**
     * <code>int32 num_intervals_with_call_ftes_but_no_shifts = 6 [json_name = "numIntervalsWithCallFtesButNoShifts"];</code>
     * @return The numIntervalsWithCallFtesButNoShifts.
     */
    @java.lang.Override
    public int getNumIntervalsWithCallFtesButNoShifts() {
      return numIntervalsWithCallFtesButNoShifts_;
    }
    /**
     * <code>int32 num_intervals_with_call_ftes_but_no_shifts = 6 [json_name = "numIntervalsWithCallFtesButNoShifts"];</code>
     * @param value The numIntervalsWithCallFtesButNoShifts to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithCallFtesButNoShifts(int value) {

      numIntervalsWithCallFtesButNoShifts_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>int32 num_intervals_with_call_ftes_but_no_shifts = 6 [json_name = "numIntervalsWithCallFtesButNoShifts"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithCallFtesButNoShifts() {
      bitField0_ = (bitField0_ & ~0x00000020);
      numIntervalsWithCallFtesButNoShifts_ = 0;
      onChanged();
      return this;
    }

    private int numIntervalsWithShiftsButNoCallFtes_ ;
    /**
     * <code>int32 num_intervals_with_shifts_but_no_call_ftes = 7 [json_name = "numIntervalsWithShiftsButNoCallFtes"];</code>
     * @return The numIntervalsWithShiftsButNoCallFtes.
     */
    @java.lang.Override
    public int getNumIntervalsWithShiftsButNoCallFtes() {
      return numIntervalsWithShiftsButNoCallFtes_;
    }
    /**
     * <code>int32 num_intervals_with_shifts_but_no_call_ftes = 7 [json_name = "numIntervalsWithShiftsButNoCallFtes"];</code>
     * @param value The numIntervalsWithShiftsButNoCallFtes to set.
     * @return This builder for chaining.
     */
    public Builder setNumIntervalsWithShiftsButNoCallFtes(int value) {

      numIntervalsWithShiftsButNoCallFtes_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>int32 num_intervals_with_shifts_but_no_call_ftes = 7 [json_name = "numIntervalsWithShiftsButNoCallFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumIntervalsWithShiftsButNoCallFtes() {
      bitField0_ = (bitField0_ & ~0x00000040);
      numIntervalsWithShiftsButNoCallFtes_ = 0;
      onChanged();
      return this;
    }

    private float totalUnderscheduledCallFtes_ ;
    /**
     * <code>float total_underscheduled_call_ftes = 8 [json_name = "totalUnderscheduledCallFtes"];</code>
     * @return The totalUnderscheduledCallFtes.
     */
    @java.lang.Override
    public float getTotalUnderscheduledCallFtes() {
      return totalUnderscheduledCallFtes_;
    }
    /**
     * <code>float total_underscheduled_call_ftes = 8 [json_name = "totalUnderscheduledCallFtes"];</code>
     * @param value The totalUnderscheduledCallFtes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalUnderscheduledCallFtes(float value) {

      totalUnderscheduledCallFtes_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>float total_underscheduled_call_ftes = 8 [json_name = "totalUnderscheduledCallFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalUnderscheduledCallFtes() {
      bitField0_ = (bitField0_ & ~0x00000080);
      totalUnderscheduledCallFtes_ = 0F;
      onChanged();
      return this;
    }

    private float totalOverscheduledCallFtes_ ;
    /**
     * <code>float total_overscheduled_call_ftes = 9 [json_name = "totalOverscheduledCallFtes"];</code>
     * @return The totalOverscheduledCallFtes.
     */
    @java.lang.Override
    public float getTotalOverscheduledCallFtes() {
      return totalOverscheduledCallFtes_;
    }
    /**
     * <code>float total_overscheduled_call_ftes = 9 [json_name = "totalOverscheduledCallFtes"];</code>
     * @param value The totalOverscheduledCallFtes to set.
     * @return This builder for chaining.
     */
    public Builder setTotalOverscheduledCallFtes(float value) {

      totalOverscheduledCallFtes_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>float total_overscheduled_call_ftes = 9 [json_name = "totalOverscheduledCallFtes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalOverscheduledCallFtes() {
      bitField0_ = (bitField0_ & ~0x00000100);
      totalOverscheduledCallFtes_ = 0F;
      onChanged();
      return this;
    }

    private int intervalWidthInMinutes_ ;
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 10 [json_name = "intervalWidthInMinutes"];</code>
     * @return The intervalWidthInMinutes.
     */
    @java.lang.Override
    public int getIntervalWidthInMinutes() {
      return intervalWidthInMinutes_;
    }
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 10 [json_name = "intervalWidthInMinutes"];</code>
     * @param value The intervalWidthInMinutes to set.
     * @return This builder for chaining.
     */
    public Builder setIntervalWidthInMinutes(int value) {

      intervalWidthInMinutes_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Width of each interval in minutes.
     * </pre>
     *
     * <code>int32 interval_width_in_minutes = 10 [json_name = "intervalWidthInMinutes"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIntervalWidthInMinutes() {
      bitField0_ = (bitField0_ & ~0x00000200);
      intervalWidthInMinutes_ = 0;
      onChanged();
      return this;
    }

    private int metricType_ = 0;
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
     * @return The enum numeric value on the wire for metricType.
     */
    @java.lang.Override public int getMetricTypeValue() {
      return metricType_;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
     * @param value The enum numeric value on the wire for metricType to set.
     * @return This builder for chaining.
     */
    public Builder setMetricTypeValue(int value) {
      metricType_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
     * @return The metricType.
     */
    @java.lang.Override
    public com.tcn.cloud.api.api.commons.PerformanceMetricType getMetricType() {
      com.tcn.cloud.api.api.commons.PerformanceMetricType result = com.tcn.cloud.api.api.commons.PerformanceMetricType.forNumber(metricType_);
      return result == null ? com.tcn.cloud.api.api.commons.PerformanceMetricType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
     * @param value The metricType to set.
     * @return This builder for chaining.
     */
    public Builder setMetricType(com.tcn.cloud.api.api.commons.PerformanceMetricType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000400;
      metricType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of metric being reported.
     * </pre>
     *
     * <code>.api.commons.PerformanceMetricType metric_type = 11 [json_name = "metricType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMetricType() {
      bitField0_ = (bitField0_ & ~0x00000400);
      metricType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval> fteOccupancyIntervals_ =
      java.util.Collections.emptyList();
    private void ensureFteOccupancyIntervalsIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        fteOccupancyIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval>(fteOccupancyIntervals_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder> fteOccupancyIntervalsBuilder_;

    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval> getFteOccupancyIntervalsList() {
      if (fteOccupancyIntervalsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fteOccupancyIntervals_);
      } else {
        return fteOccupancyIntervalsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public int getFteOccupancyIntervalsCount() {
      if (fteOccupancyIntervalsBuilder_ == null) {
        return fteOccupancyIntervals_.size();
      } else {
        return fteOccupancyIntervalsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval getFteOccupancyIntervals(int index) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        return fteOccupancyIntervals_.get(index);
      } else {
        return fteOccupancyIntervalsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder setFteOccupancyIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval value) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.set(index, value);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder setFteOccupancyIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder builderForValue) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.set(index, builderForValue.build());
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder addFteOccupancyIntervals(com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval value) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.add(value);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder addFteOccupancyIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval value) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.add(index, value);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder addFteOccupancyIntervals(
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder builderForValue) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.add(builderForValue.build());
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder addFteOccupancyIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder builderForValue) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.add(index, builderForValue.build());
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder addAllFteOccupancyIntervals(
        java.lang.Iterable<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval> values) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        ensureFteOccupancyIntervalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fteOccupancyIntervals_);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder clearFteOccupancyIntervals() {
      if (fteOccupancyIntervalsBuilder_ == null) {
        fteOccupancyIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public Builder removeFteOccupancyIntervals(int index) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        ensureFteOccupancyIntervalsIsMutable();
        fteOccupancyIntervals_.remove(index);
        onChanged();
      } else {
        fteOccupancyIntervalsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder getFteOccupancyIntervalsBuilder(
        int index) {
      return getFteOccupancyIntervalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder getFteOccupancyIntervalsOrBuilder(
        int index) {
      if (fteOccupancyIntervalsBuilder_ == null) {
        return fteOccupancyIntervals_.get(index);  } else {
        return fteOccupancyIntervalsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder> 
         getFteOccupancyIntervalsOrBuilderList() {
      if (fteOccupancyIntervalsBuilder_ != null) {
        return fteOccupancyIntervalsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fteOccupancyIntervals_);
      }
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder addFteOccupancyIntervalsBuilder() {
      return getFteOccupancyIntervalsFieldBuilder().addBuilder(
          com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder addFteOccupancyIntervalsBuilder(
        int index) {
      return getFteOccupancyIntervalsFieldBuilder().addBuilder(
          index, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * One value will be set between &#64;fte_occupancy_intervals and &#64;service_level_intervals, depending on &#64;metric_type.
     * If &#64;metric_type is FTE_REQUIRED_VS_ACHIEVED_SIMPLE then the intervals will be stored in &#64;fte_occupancy_intervals
     * If &#64;metric_type is SERVICE_LEVEL_ANALYSIS then the intervals will be stored in &#64;service_level_intervals
     * Interval set comparing the number of FTE required to the number achieved.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval fte_occupancy_intervals = 12 [json_name = "fteOccupancyIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder> 
         getFteOccupancyIntervalsBuilderList() {
      return getFteOccupancyIntervalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder> 
        getFteOccupancyIntervalsFieldBuilder() {
      if (fteOccupancyIntervalsBuilder_ == null) {
        fteOccupancyIntervalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.FTERequiredVsAchievedOccupancyIntervalOrBuilder>(
                fteOccupancyIntervals_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        fteOccupancyIntervals_ = null;
      }
      return fteOccupancyIntervalsBuilder_;
    }

    private java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> serviceLevelIntervals_ =
      java.util.Collections.emptyList();
    private void ensureServiceLevelIntervalsIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        serviceLevelIntervals_ = new java.util.ArrayList<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval>(serviceLevelIntervals_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> serviceLevelIntervalsBuilder_;

    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> getServiceLevelIntervalsList() {
      if (serviceLevelIntervalsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(serviceLevelIntervals_);
      } else {
        return serviceLevelIntervalsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public int getServiceLevelIntervalsCount() {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.size();
      } else {
        return serviceLevelIntervalsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval getServiceLevelIntervals(int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.get(index);
      } else {
        return serviceLevelIntervalsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder setServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.set(index, value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder setServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.set(index, builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval value) {
      if (serviceLevelIntervalsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(index, value);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addServiceLevelIntervals(
        int index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder builderForValue) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.add(index, builderForValue.build());
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder addAllServiceLevelIntervals(
        java.lang.Iterable<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval> values) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, serviceLevelIntervals_);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder clearServiceLevelIntervals() {
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervals_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public Builder removeServiceLevelIntervals(int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        ensureServiceLevelIntervalsIsMutable();
        serviceLevelIntervals_.remove(index);
        onChanged();
      } else {
        serviceLevelIntervalsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder getServiceLevelIntervalsBuilder(
        int index) {
      return getServiceLevelIntervalsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder getServiceLevelIntervalsOrBuilder(
        int index) {
      if (serviceLevelIntervalsBuilder_ == null) {
        return serviceLevelIntervals_.get(index);  } else {
        return serviceLevelIntervalsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<? extends com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
         getServiceLevelIntervalsOrBuilderList() {
      if (serviceLevelIntervalsBuilder_ != null) {
        return serviceLevelIntervalsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(serviceLevelIntervals_);
      }
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder addServiceLevelIntervalsBuilder() {
      return getServiceLevelIntervalsFieldBuilder().addBuilder(
          com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder addServiceLevelIntervalsBuilder(
        int index) {
      return getServiceLevelIntervalsFieldBuilder().addBuilder(
          index, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.getDefaultInstance());
    }
    /**
     * <pre>
     * Interval set checking the service level achieved as a percentage.
     * </pre>
     *
     * <code>repeated .api.v1alpha1.wfm.ServiceLevelInterval service_level_intervals = 13 [json_name = "serviceLevelIntervals"];</code>
     */
    public java.util.List<com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder> 
         getServiceLevelIntervalsBuilderList() {
      return getServiceLevelIntervalsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder> 
        getServiceLevelIntervalsFieldBuilder() {
      if (serviceLevelIntervalsBuilder_ == null) {
        serviceLevelIntervalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelInterval.Builder, com.tcn.cloud.api.api.v1alpha1.wfm.ServiceLevelIntervalOrBuilder>(
                serviceLevelIntervals_,
                ((bitField0_ & 0x00001000) != 0),
                getParentForChildren(),
                isClean());
        serviceLevelIntervals_ = null;
      }
      return serviceLevelIntervalsBuilder_;
    }

    private com.tcn.cloud.api.api.commons.SkillProfileCategory skillCollection_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.SkillProfileCategory, com.tcn.cloud.api.api.commons.SkillProfileCategory.Builder, com.tcn.cloud.api.api.commons.SkillProfileCategoryOrBuilder> skillCollectionBuilder_;
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     * @return Whether the skillCollection field is set.
     */
    public boolean hasSkillCollection() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     * @return The skillCollection.
     */
    public com.tcn.cloud.api.api.commons.SkillProfileCategory getSkillCollection() {
      if (skillCollectionBuilder_ == null) {
        return skillCollection_ == null ? com.tcn.cloud.api.api.commons.SkillProfileCategory.getDefaultInstance() : skillCollection_;
      } else {
        return skillCollectionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public Builder setSkillCollection(com.tcn.cloud.api.api.commons.SkillProfileCategory value) {
      if (skillCollectionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        skillCollection_ = value;
      } else {
        skillCollectionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public Builder setSkillCollection(
        com.tcn.cloud.api.api.commons.SkillProfileCategory.Builder builderForValue) {
      if (skillCollectionBuilder_ == null) {
        skillCollection_ = builderForValue.build();
      } else {
        skillCollectionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public Builder mergeSkillCollection(com.tcn.cloud.api.api.commons.SkillProfileCategory value) {
      if (skillCollectionBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0) &&
          skillCollection_ != null &&
          skillCollection_ != com.tcn.cloud.api.api.commons.SkillProfileCategory.getDefaultInstance()) {
          getSkillCollectionBuilder().mergeFrom(value);
        } else {
          skillCollection_ = value;
        }
      } else {
        skillCollectionBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00002000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public Builder clearSkillCollection() {
      bitField0_ = (bitField0_ & ~0x00002000);
      skillCollection_ = null;
      if (skillCollectionBuilder_ != null) {
        skillCollectionBuilder_.dispose();
        skillCollectionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public com.tcn.cloud.api.api.commons.SkillProfileCategory.Builder getSkillCollectionBuilder() {
      bitField0_ |= 0x00002000;
      onChanged();
      return getSkillCollectionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    public com.tcn.cloud.api.api.commons.SkillProfileCategoryOrBuilder getSkillCollectionOrBuilder() {
      if (skillCollectionBuilder_ != null) {
        return skillCollectionBuilder_.getMessageOrBuilder();
      } else {
        return skillCollection_ == null ?
            com.tcn.cloud.api.api.commons.SkillProfileCategory.getDefaultInstance() : skillCollection_;
      }
    }
    /**
     * <pre>
     * Pointer to skill collection.
     * </pre>
     *
     * <code>.api.commons.SkillProfileCategory skill_collection = 14 [json_name = "skillCollection"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.tcn.cloud.api.api.commons.SkillProfileCategory, com.tcn.cloud.api.api.commons.SkillProfileCategory.Builder, com.tcn.cloud.api.api.commons.SkillProfileCategoryOrBuilder> 
        getSkillCollectionFieldBuilder() {
      if (skillCollectionBuilder_ == null) {
        skillCollectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.tcn.cloud.api.api.commons.SkillProfileCategory, com.tcn.cloud.api.api.commons.SkillProfileCategory.Builder, com.tcn.cloud.api.api.commons.SkillProfileCategoryOrBuilder>(
                getSkillCollection(),
                getParentForChildren(),
                isClean());
        skillCollection_ = null;
      }
      return skillCollectionBuilder_;
    }

    private float totalRequiredFte_ ;
    /**
     * <pre>
     * The total FTE required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>float total_required_fte = 15 [json_name = "totalRequiredFte"];</code>
     * @return The totalRequiredFte.
     */
    @java.lang.Override
    public float getTotalRequiredFte() {
      return totalRequiredFte_;
    }
    /**
     * <pre>
     * The total FTE required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>float total_required_fte = 15 [json_name = "totalRequiredFte"];</code>
     * @param value The totalRequiredFte to set.
     * @return This builder for chaining.
     */
    public Builder setTotalRequiredFte(float value) {

      totalRequiredFte_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total FTE required over the &#64;date_range, as determined by the forecast.
     * </pre>
     *
     * <code>float total_required_fte = 15 [json_name = "totalRequiredFte"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalRequiredFte() {
      bitField0_ = (bitField0_ & ~0x00004000);
      totalRequiredFte_ = 0F;
      onChanged();
      return this;
    }

    private float totalAchievedFte_ ;
    /**
     * <pre>
     * The total FTE the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>float total_achieved_fte = 16 [json_name = "totalAchievedFte"];</code>
     * @return The totalAchievedFte.
     */
    @java.lang.Override
    public float getTotalAchievedFte() {
      return totalAchievedFte_;
    }
    /**
     * <pre>
     * The total FTE the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>float total_achieved_fte = 16 [json_name = "totalAchievedFte"];</code>
     * @param value The totalAchievedFte to set.
     * @return This builder for chaining.
     */
    public Builder setTotalAchievedFte(float value) {

      totalAchievedFte_ = value;
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total FTE the the schedule is likely to address with the current shift instances.
     * </pre>
     *
     * <code>float total_achieved_fte = 16 [json_name = "totalAchievedFte"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalAchievedFte() {
      bitField0_ = (bitField0_ & ~0x00008000);
      totalAchievedFte_ = 0F;
      onChanged();
      return this;
    }

    private float totalProductiveFte_ ;
    /**
     * <pre>
     * Total count of FTE scheduled to be on the phone / productive for a specific interval / duration of time.
     * </pre>
     *
     * <code>float total_productive_fte = 17 [json_name = "totalProductiveFte"];</code>
     * @return The totalProductiveFte.
     */
    @java.lang.Override
    public float getTotalProductiveFte() {
      return totalProductiveFte_;
    }
    /**
     * <pre>
     * Total count of FTE scheduled to be on the phone / productive for a specific interval / duration of time.
     * </pre>
     *
     * <code>float total_productive_fte = 17 [json_name = "totalProductiveFte"];</code>
     * @param value The totalProductiveFte to set.
     * @return This builder for chaining.
     */
    public Builder setTotalProductiveFte(float value) {

      totalProductiveFte_ = value;
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total count of FTE scheduled to be on the phone / productive for a specific interval / duration of time.
     * </pre>
     *
     * <code>float total_productive_fte = 17 [json_name = "totalProductiveFte"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalProductiveFte() {
      bitField0_ = (bitField0_ & ~0x00010000);
      totalProductiveFte_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)
  }

  // @@protoc_insertion_point(class_scope:api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2)
  private static final com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2();
  }

  public static com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PerformanceMetricForSkillCollectionV2>
      PARSER = new com.google.protobuf.AbstractParser<PerformanceMetricForSkillCollectionV2>() {
    @java.lang.Override
    public PerformanceMetricForSkillCollectionV2 parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PerformanceMetricForSkillCollectionV2> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PerformanceMetricForSkillCollectionV2> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v1alpha1.wfm.PerformanceMetricForSkillCollectionV2 getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

