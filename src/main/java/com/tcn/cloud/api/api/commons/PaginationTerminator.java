// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/lms.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf type {@code api.commons.PaginationTerminator}
 */
public final class PaginationTerminator extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.commons.PaginationTerminator)
    PaginationTerminatorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PaginationTerminator.newBuilder() to construct.
  private PaginationTerminator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PaginationTerminator() {
    key_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PaginationTerminator();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.LmsProto.internal_static_api_commons_PaginationTerminator_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.commons.LmsProto.internal_static_api_commons_PaginationTerminator_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.commons.PaginationTerminator.class, com.tcn.cloud.api.api.commons.PaginationTerminator.Builder.class);
  }

  private int opCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object op_;
  public enum OpCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    EXISTS_CHECK(3),
    NUM_GREATER_THAN(4),
    NUM_LESS_THAN(5),
    NUM_EQUALS(6),
    COUNT_LESS_THAN(7),
    STR_EQUALS(8),
    STR_CONTAINS(9),
    BOOL_EQUALS(10),
    OP_NOT_SET(0);
    private final int value;
    private OpCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OpCase valueOf(int value) {
      return forNumber(value);
    }

    public static OpCase forNumber(int value) {
      switch (value) {
        case 3: return EXISTS_CHECK;
        case 4: return NUM_GREATER_THAN;
        case 5: return NUM_LESS_THAN;
        case 6: return NUM_EQUALS;
        case 7: return COUNT_LESS_THAN;
        case 8: return STR_EQUALS;
        case 9: return STR_CONTAINS;
        case 10: return BOOL_EQUALS;
        case 0: return OP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public OpCase
  getOpCase() {
    return OpCase.forNumber(
        opCase_);
  }

  public static final int KEY_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object key_ = "";
  /**
   * <pre>
   * the key we are checking
   * </pre>
   *
   * <code>string key = 1 [json_name = "key"];</code>
   * @return The key.
   */
  @java.lang.Override
  public java.lang.String getKey() {
    java.lang.Object ref = key_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      key_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * the key we are checking
   * </pre>
   *
   * <code>string key = 1 [json_name = "key"];</code>
   * @return The bytes for key.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getKeyBytes() {
    java.lang.Object ref = key_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      key_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEGATE_FIELD_NUMBER = 2;
  private boolean negate_ = false;
  /**
   * <pre>
   * negate the results of the operation check.
   * cases that we would have returned true, we instead return false, and vice versa
   * </pre>
   *
   * <code>bool negate = 2 [json_name = "negate"];</code>
   * @return The negate.
   */
  @java.lang.Override
  public boolean getNegate() {
    return negate_;
  }

  public static final int EXISTS_CHECK_FIELD_NUMBER = 3;
  /**
   * <pre>
   * if true terminate if the key exists.
   * if false terminate if the key does not exist.
   * </pre>
   *
   * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
   * @return Whether the existsCheck field is set.
   */
  @java.lang.Override
  public boolean hasExistsCheck() {
    return opCase_ == 3;
  }
  /**
   * <pre>
   * if true terminate if the key exists.
   * if false terminate if the key does not exist.
   * </pre>
   *
   * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
   * @return The existsCheck.
   */
  @java.lang.Override
  public boolean getExistsCheck() {
    if (opCase_ == 3) {
      return (java.lang.Boolean) op_;
    }
    return false;
  }

  public static final int NUM_GREATER_THAN_FIELD_NUMBER = 4;
  /**
   * <pre>
   * terminate if the number value the key points to is greater than this
   * </pre>
   *
   * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
   * @return Whether the numGreaterThan field is set.
   */
  @java.lang.Override
  public boolean hasNumGreaterThan() {
    return opCase_ == 4;
  }
  /**
   * <pre>
   * terminate if the number value the key points to is greater than this
   * </pre>
   *
   * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
   * @return The numGreaterThan.
   */
  @java.lang.Override
  public double getNumGreaterThan() {
    if (opCase_ == 4) {
      return (java.lang.Double) op_;
    }
    return 0D;
  }

  public static final int NUM_LESS_THAN_FIELD_NUMBER = 5;
  /**
   * <pre>
   * terminate if the number value the key points to is less than this
   * </pre>
   *
   * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
   * @return Whether the numLessThan field is set.
   */
  @java.lang.Override
  public boolean hasNumLessThan() {
    return opCase_ == 5;
  }
  /**
   * <pre>
   * terminate if the number value the key points to is less than this
   * </pre>
   *
   * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
   * @return The numLessThan.
   */
  @java.lang.Override
  public double getNumLessThan() {
    if (opCase_ == 5) {
      return (java.lang.Double) op_;
    }
    return 0D;
  }

  public static final int NUM_EQUALS_FIELD_NUMBER = 6;
  /**
   * <pre>
   * terminate if the number value the key points to is equal to this
   * </pre>
   *
   * <code>double num_equals = 6 [json_name = "numEquals"];</code>
   * @return Whether the numEquals field is set.
   */
  @java.lang.Override
  public boolean hasNumEquals() {
    return opCase_ == 6;
  }
  /**
   * <pre>
   * terminate if the number value the key points to is equal to this
   * </pre>
   *
   * <code>double num_equals = 6 [json_name = "numEquals"];</code>
   * @return The numEquals.
   */
  @java.lang.Override
  public double getNumEquals() {
    if (opCase_ == 6) {
      return (java.lang.Double) op_;
    }
    return 0D;
  }

  public static final int COUNT_LESS_THAN_FIELD_NUMBER = 7;
  /**
   * <pre>
   * terminate if the number of records in the array key points is less than this.
   * if key points to a non array, it has a count of 0
   * </pre>
   *
   * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
   * @return Whether the countLessThan field is set.
   */
  @java.lang.Override
  public boolean hasCountLessThan() {
    return opCase_ == 7;
  }
  /**
   * <pre>
   * terminate if the number of records in the array key points is less than this.
   * if key points to a non array, it has a count of 0
   * </pre>
   *
   * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
   * @return The countLessThan.
   */
  @java.lang.Override
  public long getCountLessThan() {
    if (opCase_ == 7) {
      return (java.lang.Long) op_;
    }
    return 0L;
  }

  public static final int STR_EQUALS_FIELD_NUMBER = 8;
  /**
   * <pre>
   * terminate if the str value the key points to equals this
   * </pre>
   *
   * <code>string str_equals = 8 [json_name = "strEquals"];</code>
   * @return Whether the strEquals field is set.
   */
  public boolean hasStrEquals() {
    return opCase_ == 8;
  }
  /**
   * <pre>
   * terminate if the str value the key points to equals this
   * </pre>
   *
   * <code>string str_equals = 8 [json_name = "strEquals"];</code>
   * @return The strEquals.
   */
  public java.lang.String getStrEquals() {
    java.lang.Object ref = "";
    if (opCase_ == 8) {
      ref = op_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (opCase_ == 8) {
        op_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * terminate if the str value the key points to equals this
   * </pre>
   *
   * <code>string str_equals = 8 [json_name = "strEquals"];</code>
   * @return The bytes for strEquals.
   */
  public com.google.protobuf.ByteString
      getStrEqualsBytes() {
    java.lang.Object ref = "";
    if (opCase_ == 8) {
      ref = op_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (opCase_ == 8) {
        op_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STR_CONTAINS_FIELD_NUMBER = 9;
  /**
   * <pre>
   * terminate if the str value the key points to contains this
   * </pre>
   *
   * <code>string str_contains = 9 [json_name = "strContains"];</code>
   * @return Whether the strContains field is set.
   */
  public boolean hasStrContains() {
    return opCase_ == 9;
  }
  /**
   * <pre>
   * terminate if the str value the key points to contains this
   * </pre>
   *
   * <code>string str_contains = 9 [json_name = "strContains"];</code>
   * @return The strContains.
   */
  public java.lang.String getStrContains() {
    java.lang.Object ref = "";
    if (opCase_ == 9) {
      ref = op_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (opCase_ == 9) {
        op_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * terminate if the str value the key points to contains this
   * </pre>
   *
   * <code>string str_contains = 9 [json_name = "strContains"];</code>
   * @return The bytes for strContains.
   */
  public com.google.protobuf.ByteString
      getStrContainsBytes() {
    java.lang.Object ref = "";
    if (opCase_ == 9) {
      ref = op_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (opCase_ == 9) {
        op_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BOOL_EQUALS_FIELD_NUMBER = 10;
  /**
   * <pre>
   * termintae if the bool value key points equals this
   * </pre>
   *
   * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
   * @return Whether the boolEquals field is set.
   */
  @java.lang.Override
  public boolean hasBoolEquals() {
    return opCase_ == 10;
  }
  /**
   * <pre>
   * termintae if the bool value key points equals this
   * </pre>
   *
   * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
   * @return The boolEquals.
   */
  @java.lang.Override
  public boolean getBoolEquals() {
    if (opCase_ == 10) {
      return (java.lang.Boolean) op_;
    }
    return false;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
    }
    if (negate_ != false) {
      output.writeBool(2, negate_);
    }
    if (opCase_ == 3) {
      output.writeBool(
          3, (boolean)((java.lang.Boolean) op_));
    }
    if (opCase_ == 4) {
      output.writeDouble(
          4, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 5) {
      output.writeDouble(
          5, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 6) {
      output.writeDouble(
          6, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 7) {
      output.writeInt64(
          7, (long)((java.lang.Long) op_));
    }
    if (opCase_ == 8) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, op_);
    }
    if (opCase_ == 9) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, op_);
    }
    if (opCase_ == 10) {
      output.writeBool(
          10, (boolean)((java.lang.Boolean) op_));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
    }
    if (negate_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, negate_);
    }
    if (opCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            3, (boolean)((java.lang.Boolean) op_));
    }
    if (opCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            4, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            5, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            6, (double)((java.lang.Double) op_));
    }
    if (opCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            7, (long)((java.lang.Long) op_));
    }
    if (opCase_ == 8) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, op_);
    }
    if (opCase_ == 9) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, op_);
    }
    if (opCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            10, (boolean)((java.lang.Boolean) op_));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.commons.PaginationTerminator)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.commons.PaginationTerminator other = (com.tcn.cloud.api.api.commons.PaginationTerminator) obj;

    if (!getKey()
        .equals(other.getKey())) return false;
    if (getNegate()
        != other.getNegate()) return false;
    if (!getOpCase().equals(other.getOpCase())) return false;
    switch (opCase_) {
      case 3:
        if (getExistsCheck()
            != other.getExistsCheck()) return false;
        break;
      case 4:
        if (java.lang.Double.doubleToLongBits(getNumGreaterThan())
            != java.lang.Double.doubleToLongBits(
                other.getNumGreaterThan())) return false;
        break;
      case 5:
        if (java.lang.Double.doubleToLongBits(getNumLessThan())
            != java.lang.Double.doubleToLongBits(
                other.getNumLessThan())) return false;
        break;
      case 6:
        if (java.lang.Double.doubleToLongBits(getNumEquals())
            != java.lang.Double.doubleToLongBits(
                other.getNumEquals())) return false;
        break;
      case 7:
        if (getCountLessThan()
            != other.getCountLessThan()) return false;
        break;
      case 8:
        if (!getStrEquals()
            .equals(other.getStrEquals())) return false;
        break;
      case 9:
        if (!getStrContains()
            .equals(other.getStrContains())) return false;
        break;
      case 10:
        if (getBoolEquals()
            != other.getBoolEquals()) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KEY_FIELD_NUMBER;
    hash = (53 * hash) + getKey().hashCode();
    hash = (37 * hash) + NEGATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNegate());
    switch (opCase_) {
      case 3:
        hash = (37 * hash) + EXISTS_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExistsCheck());
        break;
      case 4:
        hash = (37 * hash) + NUM_GREATER_THAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNumGreaterThan()));
        break;
      case 5:
        hash = (37 * hash) + NUM_LESS_THAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNumLessThan()));
        break;
      case 6:
        hash = (37 * hash) + NUM_EQUALS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getNumEquals()));
        break;
      case 7:
        hash = (37 * hash) + COUNT_LESS_THAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCountLessThan());
        break;
      case 8:
        hash = (37 * hash) + STR_EQUALS_FIELD_NUMBER;
        hash = (53 * hash) + getStrEquals().hashCode();
        break;
      case 9:
        hash = (37 * hash) + STR_CONTAINS_FIELD_NUMBER;
        hash = (53 * hash) + getStrContains().hashCode();
        break;
      case 10:
        hash = (37 * hash) + BOOL_EQUALS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoolEquals());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.PaginationTerminator parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.commons.PaginationTerminator prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.commons.PaginationTerminator}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.commons.PaginationTerminator)
      com.tcn.cloud.api.api.commons.PaginationTerminatorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.commons.LmsProto.internal_static_api_commons_PaginationTerminator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.commons.LmsProto.internal_static_api_commons_PaginationTerminator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.commons.PaginationTerminator.class, com.tcn.cloud.api.api.commons.PaginationTerminator.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.commons.PaginationTerminator.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      key_ = "";
      negate_ = false;
      opCase_ = 0;
      op_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.commons.LmsProto.internal_static_api_commons_PaginationTerminator_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.PaginationTerminator getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.commons.PaginationTerminator.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.PaginationTerminator build() {
      com.tcn.cloud.api.api.commons.PaginationTerminator result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.PaginationTerminator buildPartial() {
      com.tcn.cloud.api.api.commons.PaginationTerminator result = new com.tcn.cloud.api.api.commons.PaginationTerminator(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.tcn.cloud.api.api.commons.PaginationTerminator result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.key_ = key_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.negate_ = negate_;
      }
    }

    private void buildPartialOneofs(com.tcn.cloud.api.api.commons.PaginationTerminator result) {
      result.opCase_ = opCase_;
      result.op_ = this.op_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.commons.PaginationTerminator) {
        return mergeFrom((com.tcn.cloud.api.api.commons.PaginationTerminator)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.commons.PaginationTerminator other) {
      if (other == com.tcn.cloud.api.api.commons.PaginationTerminator.getDefaultInstance()) return this;
      if (!other.getKey().isEmpty()) {
        key_ = other.key_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.getNegate() != false) {
        setNegate(other.getNegate());
      }
      switch (other.getOpCase()) {
        case EXISTS_CHECK: {
          setExistsCheck(other.getExistsCheck());
          break;
        }
        case NUM_GREATER_THAN: {
          setNumGreaterThan(other.getNumGreaterThan());
          break;
        }
        case NUM_LESS_THAN: {
          setNumLessThan(other.getNumLessThan());
          break;
        }
        case NUM_EQUALS: {
          setNumEquals(other.getNumEquals());
          break;
        }
        case COUNT_LESS_THAN: {
          setCountLessThan(other.getCountLessThan());
          break;
        }
        case STR_EQUALS: {
          opCase_ = 8;
          op_ = other.op_;
          onChanged();
          break;
        }
        case STR_CONTAINS: {
          opCase_ = 9;
          op_ = other.op_;
          onChanged();
          break;
        }
        case BOOL_EQUALS: {
          setBoolEquals(other.getBoolEquals());
          break;
        }
        case OP_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              key_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              negate_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              op_ = input.readBool();
              opCase_ = 3;
              break;
            } // case 24
            case 33: {
              op_ = input.readDouble();
              opCase_ = 4;
              break;
            } // case 33
            case 41: {
              op_ = input.readDouble();
              opCase_ = 5;
              break;
            } // case 41
            case 49: {
              op_ = input.readDouble();
              opCase_ = 6;
              break;
            } // case 49
            case 56: {
              op_ = input.readInt64();
              opCase_ = 7;
              break;
            } // case 56
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              opCase_ = 8;
              op_ = s;
              break;
            } // case 66
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();
              opCase_ = 9;
              op_ = s;
              break;
            } // case 74
            case 80: {
              op_ = input.readBool();
              opCase_ = 10;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int opCase_ = 0;
    private java.lang.Object op_;
    public OpCase
        getOpCase() {
      return OpCase.forNumber(
          opCase_);
    }

    public Builder clearOp() {
      opCase_ = 0;
      op_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object key_ = "";
    /**
     * <pre>
     * the key we are checking
     * </pre>
     *
     * <code>string key = 1 [json_name = "key"];</code>
     * @return The key.
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * the key we are checking
     * </pre>
     *
     * <code>string key = 1 [json_name = "key"];</code>
     * @return The bytes for key.
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * the key we are checking
     * </pre>
     *
     * <code>string key = 1 [json_name = "key"];</code>
     * @param value The key to set.
     * @return This builder for chaining.
     */
    public Builder setKey(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      key_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the key we are checking
     * </pre>
     *
     * <code>string key = 1 [json_name = "key"];</code>
     * @return This builder for chaining.
     */
    public Builder clearKey() {
      key_ = getDefaultInstance().getKey();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the key we are checking
     * </pre>
     *
     * <code>string key = 1 [json_name = "key"];</code>
     * @param value The bytes for key to set.
     * @return This builder for chaining.
     */
    public Builder setKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      key_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private boolean negate_ ;
    /**
     * <pre>
     * negate the results of the operation check.
     * cases that we would have returned true, we instead return false, and vice versa
     * </pre>
     *
     * <code>bool negate = 2 [json_name = "negate"];</code>
     * @return The negate.
     */
    @java.lang.Override
    public boolean getNegate() {
      return negate_;
    }
    /**
     * <pre>
     * negate the results of the operation check.
     * cases that we would have returned true, we instead return false, and vice versa
     * </pre>
     *
     * <code>bool negate = 2 [json_name = "negate"];</code>
     * @param value The negate to set.
     * @return This builder for chaining.
     */
    public Builder setNegate(boolean value) {

      negate_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * negate the results of the operation check.
     * cases that we would have returned true, we instead return false, and vice versa
     * </pre>
     *
     * <code>bool negate = 2 [json_name = "negate"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNegate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      negate_ = false;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * if true terminate if the key exists.
     * if false terminate if the key does not exist.
     * </pre>
     *
     * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
     * @return Whether the existsCheck field is set.
     */
    public boolean hasExistsCheck() {
      return opCase_ == 3;
    }
    /**
     * <pre>
     * if true terminate if the key exists.
     * if false terminate if the key does not exist.
     * </pre>
     *
     * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
     * @return The existsCheck.
     */
    public boolean getExistsCheck() {
      if (opCase_ == 3) {
        return (java.lang.Boolean) op_;
      }
      return false;
    }
    /**
     * <pre>
     * if true terminate if the key exists.
     * if false terminate if the key does not exist.
     * </pre>
     *
     * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
     * @param value The existsCheck to set.
     * @return This builder for chaining.
     */
    public Builder setExistsCheck(boolean value) {

      opCase_ = 3;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if true terminate if the key exists.
     * if false terminate if the key does not exist.
     * </pre>
     *
     * <code>bool exists_check = 3 [json_name = "existsCheck"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExistsCheck() {
      if (opCase_ == 3) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * terminate if the number value the key points to is greater than this
     * </pre>
     *
     * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
     * @return Whether the numGreaterThan field is set.
     */
    public boolean hasNumGreaterThan() {
      return opCase_ == 4;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is greater than this
     * </pre>
     *
     * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
     * @return The numGreaterThan.
     */
    public double getNumGreaterThan() {
      if (opCase_ == 4) {
        return (java.lang.Double) op_;
      }
      return 0D;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is greater than this
     * </pre>
     *
     * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
     * @param value The numGreaterThan to set.
     * @return This builder for chaining.
     */
    public Builder setNumGreaterThan(double value) {

      opCase_ = 4;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is greater than this
     * </pre>
     *
     * <code>double num_greater_than = 4 [json_name = "numGreaterThan"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumGreaterThan() {
      if (opCase_ == 4) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * terminate if the number value the key points to is less than this
     * </pre>
     *
     * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
     * @return Whether the numLessThan field is set.
     */
    public boolean hasNumLessThan() {
      return opCase_ == 5;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is less than this
     * </pre>
     *
     * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
     * @return The numLessThan.
     */
    public double getNumLessThan() {
      if (opCase_ == 5) {
        return (java.lang.Double) op_;
      }
      return 0D;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is less than this
     * </pre>
     *
     * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
     * @param value The numLessThan to set.
     * @return This builder for chaining.
     */
    public Builder setNumLessThan(double value) {

      opCase_ = 5;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is less than this
     * </pre>
     *
     * <code>double num_less_than = 5 [json_name = "numLessThan"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumLessThan() {
      if (opCase_ == 5) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * terminate if the number value the key points to is equal to this
     * </pre>
     *
     * <code>double num_equals = 6 [json_name = "numEquals"];</code>
     * @return Whether the numEquals field is set.
     */
    public boolean hasNumEquals() {
      return opCase_ == 6;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is equal to this
     * </pre>
     *
     * <code>double num_equals = 6 [json_name = "numEquals"];</code>
     * @return The numEquals.
     */
    public double getNumEquals() {
      if (opCase_ == 6) {
        return (java.lang.Double) op_;
      }
      return 0D;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is equal to this
     * </pre>
     *
     * <code>double num_equals = 6 [json_name = "numEquals"];</code>
     * @param value The numEquals to set.
     * @return This builder for chaining.
     */
    public Builder setNumEquals(double value) {

      opCase_ = 6;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the number value the key points to is equal to this
     * </pre>
     *
     * <code>double num_equals = 6 [json_name = "numEquals"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNumEquals() {
      if (opCase_ == 6) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * terminate if the number of records in the array key points is less than this.
     * if key points to a non array, it has a count of 0
     * </pre>
     *
     * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
     * @return Whether the countLessThan field is set.
     */
    public boolean hasCountLessThan() {
      return opCase_ == 7;
    }
    /**
     * <pre>
     * terminate if the number of records in the array key points is less than this.
     * if key points to a non array, it has a count of 0
     * </pre>
     *
     * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
     * @return The countLessThan.
     */
    public long getCountLessThan() {
      if (opCase_ == 7) {
        return (java.lang.Long) op_;
      }
      return 0L;
    }
    /**
     * <pre>
     * terminate if the number of records in the array key points is less than this.
     * if key points to a non array, it has a count of 0
     * </pre>
     *
     * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
     * @param value The countLessThan to set.
     * @return This builder for chaining.
     */
    public Builder setCountLessThan(long value) {

      opCase_ = 7;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the number of records in the array key points is less than this.
     * if key points to a non array, it has a count of 0
     * </pre>
     *
     * <code>int64 count_less_than = 7 [json_name = "countLessThan"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCountLessThan() {
      if (opCase_ == 7) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @return Whether the strEquals field is set.
     */
    @java.lang.Override
    public boolean hasStrEquals() {
      return opCase_ == 8;
    }
    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @return The strEquals.
     */
    @java.lang.Override
    public java.lang.String getStrEquals() {
      java.lang.Object ref = "";
      if (opCase_ == 8) {
        ref = op_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (opCase_ == 8) {
          op_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @return The bytes for strEquals.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrEqualsBytes() {
      java.lang.Object ref = "";
      if (opCase_ == 8) {
        ref = op_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (opCase_ == 8) {
          op_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @param value The strEquals to set.
     * @return This builder for chaining.
     */
    public Builder setStrEquals(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      opCase_ = 8;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStrEquals() {
      if (opCase_ == 8) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * terminate if the str value the key points to equals this
     * </pre>
     *
     * <code>string str_equals = 8 [json_name = "strEquals"];</code>
     * @param value The bytes for strEquals to set.
     * @return This builder for chaining.
     */
    public Builder setStrEqualsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      opCase_ = 8;
      op_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @return Whether the strContains field is set.
     */
    @java.lang.Override
    public boolean hasStrContains() {
      return opCase_ == 9;
    }
    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @return The strContains.
     */
    @java.lang.Override
    public java.lang.String getStrContains() {
      java.lang.Object ref = "";
      if (opCase_ == 9) {
        ref = op_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (opCase_ == 9) {
          op_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @return The bytes for strContains.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStrContainsBytes() {
      java.lang.Object ref = "";
      if (opCase_ == 9) {
        ref = op_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (opCase_ == 9) {
          op_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @param value The strContains to set.
     * @return This builder for chaining.
     */
    public Builder setStrContains(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      opCase_ = 9;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStrContains() {
      if (opCase_ == 9) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * terminate if the str value the key points to contains this
     * </pre>
     *
     * <code>string str_contains = 9 [json_name = "strContains"];</code>
     * @param value The bytes for strContains to set.
     * @return This builder for chaining.
     */
    public Builder setStrContainsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      opCase_ = 9;
      op_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * termintae if the bool value key points equals this
     * </pre>
     *
     * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
     * @return Whether the boolEquals field is set.
     */
    public boolean hasBoolEquals() {
      return opCase_ == 10;
    }
    /**
     * <pre>
     * termintae if the bool value key points equals this
     * </pre>
     *
     * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
     * @return The boolEquals.
     */
    public boolean getBoolEquals() {
      if (opCase_ == 10) {
        return (java.lang.Boolean) op_;
      }
      return false;
    }
    /**
     * <pre>
     * termintae if the bool value key points equals this
     * </pre>
     *
     * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
     * @param value The boolEquals to set.
     * @return This builder for chaining.
     */
    public Builder setBoolEquals(boolean value) {

      opCase_ = 10;
      op_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * termintae if the bool value key points equals this
     * </pre>
     *
     * <code>bool bool_equals = 10 [json_name = "boolEquals"];</code>
     * @return This builder for chaining.
     */
    public Builder clearBoolEquals() {
      if (opCase_ == 10) {
        opCase_ = 0;
        op_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.commons.PaginationTerminator)
  }

  // @@protoc_insertion_point(class_scope:api.commons.PaginationTerminator)
  private static final com.tcn.cloud.api.api.commons.PaginationTerminator DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.commons.PaginationTerminator();
  }

  public static com.tcn.cloud.api.api.commons.PaginationTerminator getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PaginationTerminator>
      PARSER = new com.google.protobuf.AbstractParser<PaginationTerminator>() {
    @java.lang.Override
    public PaginationTerminator parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PaginationTerminator> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PaginationTerminator> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.commons.PaginationTerminator getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

