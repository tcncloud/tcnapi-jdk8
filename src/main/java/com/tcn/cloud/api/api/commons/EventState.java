// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/lms.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.EventState}
 */
public enum EventState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * state does not apply
   * </pre>
   *
   * <code>EVENT_STATE_NONE = 0;</code>
   */
  EVENT_STATE_NONE(0),
  /**
   * <pre>
   * event will start processing on external system
   * </pre>
   *
   * <code>EVENT_STATE_KICKOFF = 1;</code>
   */
  EVENT_STATE_KICKOFF(1),
  /**
   * <pre>
   * event will checkup on what was started during the kickoff
   * </pre>
   *
   * <code>EVENT_STATE_CHECK = 2;</code>
   */
  EVENT_STATE_CHECK(2),
  /**
   * <pre>
   * event will handle the records and send them downstream
   * </pre>
   *
   * <code>EVENT_STATE_PROCESS = 3;</code>
   */
  EVENT_STATE_PROCESS(3),
  /**
   * <pre>
   * event will do any remaining work needed to cleanup external system
   * </pre>
   *
   * <code>EVENT_STATE_CLEANUP = 4;</code>
   */
  EVENT_STATE_CLEANUP(4),
  /**
   * <pre>
   * event is finished executing and cleaning up and can exit out of it's process
   * </pre>
   *
   * <code>EVENT_STATE_FINISHED = 5;</code>
   */
  EVENT_STATE_FINISHED(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * state does not apply
   * </pre>
   *
   * <code>EVENT_STATE_NONE = 0;</code>
   */
  public static final int EVENT_STATE_NONE_VALUE = 0;
  /**
   * <pre>
   * event will start processing on external system
   * </pre>
   *
   * <code>EVENT_STATE_KICKOFF = 1;</code>
   */
  public static final int EVENT_STATE_KICKOFF_VALUE = 1;
  /**
   * <pre>
   * event will checkup on what was started during the kickoff
   * </pre>
   *
   * <code>EVENT_STATE_CHECK = 2;</code>
   */
  public static final int EVENT_STATE_CHECK_VALUE = 2;
  /**
   * <pre>
   * event will handle the records and send them downstream
   * </pre>
   *
   * <code>EVENT_STATE_PROCESS = 3;</code>
   */
  public static final int EVENT_STATE_PROCESS_VALUE = 3;
  /**
   * <pre>
   * event will do any remaining work needed to cleanup external system
   * </pre>
   *
   * <code>EVENT_STATE_CLEANUP = 4;</code>
   */
  public static final int EVENT_STATE_CLEANUP_VALUE = 4;
  /**
   * <pre>
   * event is finished executing and cleaning up and can exit out of it's process
   * </pre>
   *
   * <code>EVENT_STATE_FINISHED = 5;</code>
   */
  public static final int EVENT_STATE_FINISHED_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EventState valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static EventState forNumber(int value) {
    switch (value) {
      case 0: return EVENT_STATE_NONE;
      case 1: return EVENT_STATE_KICKOFF;
      case 2: return EVENT_STATE_CHECK;
      case 3: return EVENT_STATE_PROCESS;
      case 4: return EVENT_STATE_CLEANUP;
      case 5: return EVENT_STATE_FINISHED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EventState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EventState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EventState>() {
          public EventState findValueByNumber(int number) {
            return EventState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.LmsProto.getDescriptor().getEnumTypes().get(26);
  }

  private static final EventState[] VALUES = values();

  public static EventState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EventState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.EventState)
}

