// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

public interface ForecastingParametersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.ForecastingParameters)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * number of minutes in which calls will be grouped together during for the duration of a forecast, must be a multiple of 5 ranging from 5 to 60.
   * </pre>
   *
   * <code>int32 interval_width_in_minutes = 1 [json_name = "intervalWidthInMinutes"];</code>
   * @return The intervalWidthInMinutes.
   */
  int getIntervalWidthInMinutes();

  /**
   * <pre>
   * number of months back from the current datetime to look up history.
   * </pre>
   *
   * <code>int32 historical_data_range_in_months = 6 [json_name = "historicalDataRangeInMonths"];</code>
   * @return The historicalDataRangeInMonths.
   */
  int getHistoricalDataRangeInMonths();

  /**
   * <pre>
   *start datetime to look up the history (end time will be the current datetime).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp historical_data_range_start_datetime = 7 [json_name = "historicalDataRangeStartDatetime"];</code>
   * @return Whether the historicalDataRangeStartDatetime field is set.
   */
  boolean hasHistoricalDataRangeStartDatetime();
  /**
   * <pre>
   *start datetime to look up the history (end time will be the current datetime).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp historical_data_range_start_datetime = 7 [json_name = "historicalDataRangeStartDatetime"];</code>
   * @return The historicalDataRangeStartDatetime.
   */
  com.google.protobuf.Timestamp getHistoricalDataRangeStartDatetime();
  /**
   * <pre>
   *start datetime to look up the history (end time will be the current datetime).
   * </pre>
   *
   * <code>.google.protobuf.Timestamp historical_data_range_start_datetime = 7 [json_name = "historicalDataRangeStartDatetime"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getHistoricalDataRangeStartDatetimeOrBuilder();

  /**
   * <pre>
   * number of weeks of the training data from the current datetime to use as a forecast test range.
   * </pre>
   *
   * <code>int32 forecast_test_range_in_weeks = 8 [json_name = "forecastTestRangeInWeeks"];</code>
   * @return The forecastTestRangeInWeeks.
   */
  int getForecastTestRangeInWeeks();

  /**
   * <pre>
   * number of weeks from the current datetime that forecast will be made.
   * </pre>
   *
   * <code>int32 forecast_range_in_weeks = 9 [json_name = "forecastRangeInWeeks"];</code>
   * @return The forecastRangeInWeeks.
   */
  int getForecastRangeInWeeks();

  /**
   * <pre>
   * date range at which a forecasts will be made.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange forecast_datetime_range = 10 [json_name = "forecastDatetimeRange"];</code>
   * @return Whether the forecastDatetimeRange field is set.
   */
  boolean hasForecastDatetimeRange();
  /**
   * <pre>
   * date range at which a forecasts will be made.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange forecast_datetime_range = 10 [json_name = "forecastDatetimeRange"];</code>
   * @return The forecastDatetimeRange.
   */
  com.tcn.cloud.api.api.commons.DatetimeRange getForecastDatetimeRange();
  /**
   * <pre>
   * date range at which a forecasts will be made.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange forecast_datetime_range = 10 [json_name = "forecastDatetimeRange"];</code>
   */
  com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getForecastDatetimeRangeOrBuilder();

  /**
   * <pre>
   * number of months in the past from the current datetime that the training data will be generated from.
   * </pre>
   *
   * <code>int32 training_data_range_in_months = 11 [json_name = "trainingDataRangeInMonths"];</code>
   * @return The trainingDataRangeInMonths.
   */
  int getTrainingDataRangeInMonths();

  /**
   * <pre>
   * date range in which the training data will be generated.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange training_data_datetime_range = 12 [json_name = "trainingDataDatetimeRange"];</code>
   * @return Whether the trainingDataDatetimeRange field is set.
   */
  boolean hasTrainingDataDatetimeRange();
  /**
   * <pre>
   * date range in which the training data will be generated.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange training_data_datetime_range = 12 [json_name = "trainingDataDatetimeRange"];</code>
   * @return The trainingDataDatetimeRange.
   */
  com.tcn.cloud.api.api.commons.DatetimeRange getTrainingDataDatetimeRange();
  /**
   * <pre>
   * date range in which the training data will be generated.
   * </pre>
   *
   * <code>.api.commons.DatetimeRange training_data_datetime_range = 12 [json_name = "trainingDataDatetimeRange"];</code>
   */
  com.tcn.cloud.api.api.commons.DatetimeRangeOrBuilder getTrainingDataDatetimeRangeOrBuilder();

  /**
   * <pre>
   * Number of months of training data to use when calculating averages.
   * If set to 0, then all the training data will be used when calculating the averages,
   * meaning that the start datetime of the training data to use will be the start datetime of the &#64;training_data_range.
   * Otherwise, it will subtract that many months from the &#64;training_data_range end datetime and use it as the start time.
   * </pre>
   *
   * <code>int32 averages_calculation_range_in_months = 13 [json_name = "averagesCalculationRangeInMonths"];</code>
   * @return The averagesCalculationRangeInMonths.
   */
  int getAveragesCalculationRangeInMonths();

  public com.tcn.cloud.api.api.commons.ForecastingParameters.HistoricalDataRangeCase getHistoricalDataRangeCase();

  public com.tcn.cloud.api.api.commons.ForecastingParameters.ForecastRangeCase getForecastRangeCase();

  public com.tcn.cloud.api.api.commons.ForecastingParameters.TrainingDataRangeCase getTrainingDataRangeCase();
}
