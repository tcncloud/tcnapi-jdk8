// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/call.proto

package com.tcn.cloud.api.api.commons;

/**
 * Protobuf enum {@code api.commons.CallStatus}
 */
public enum CallStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CALL_UNKNOWN = 0;</code>
   */
  CALL_UNKNOWN(0),
  /**
   * <pre>
   * "CALL_SCHEDULED", "Call is currently waiting for scheduler"),
   * </pre>
   *
   * <code>CALL_SCHEDULED = 3100;</code>
   */
  CALL_SCHEDULED(3100),
  /**
   * <pre>
   * "CALL_RUNNING", "Call is currently being executed"),
   * </pre>
   *
   * <code>CALL_RUNNING = 3200;</code>
   */
  CALL_RUNNING(3200),
  /**
   * <pre>
   * "CALL_COMPLTED", "Call has been executed"),
   * </pre>
   *
   * <code>CALL_COMPLETED = 3300;</code>
   */
  CALL_COMPLETED(3300),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CALL_UNKNOWN = 0;</code>
   */
  public static final int CALL_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * "CALL_SCHEDULED", "Call is currently waiting for scheduler"),
   * </pre>
   *
   * <code>CALL_SCHEDULED = 3100;</code>
   */
  public static final int CALL_SCHEDULED_VALUE = 3100;
  /**
   * <pre>
   * "CALL_RUNNING", "Call is currently being executed"),
   * </pre>
   *
   * <code>CALL_RUNNING = 3200;</code>
   */
  public static final int CALL_RUNNING_VALUE = 3200;
  /**
   * <pre>
   * "CALL_COMPLTED", "Call has been executed"),
   * </pre>
   *
   * <code>CALL_COMPLETED = 3300;</code>
   */
  public static final int CALL_COMPLETED_VALUE = 3300;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CallStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static CallStatus forNumber(int value) {
    switch (value) {
      case 0: return CALL_UNKNOWN;
      case 3100: return CALL_SCHEDULED;
      case 3200: return CALL_RUNNING;
      case 3300: return CALL_COMPLETED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CallStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CallStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CallStatus>() {
          public CallStatus findValueByNumber(int number) {
            return CallStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.CallProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final CallStatus[] VALUES = values();

  public static CallStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CallStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.CallStatus)
}

