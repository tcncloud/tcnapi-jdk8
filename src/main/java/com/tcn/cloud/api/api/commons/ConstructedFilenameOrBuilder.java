// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/lms.proto

package com.tcn.cloud.api.api.commons;

public interface ConstructedFilenameOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.commons.ConstructedFilename)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is the name part that is sandwiched between prefix and suffix.
   * If this is nil, we will use the original uploaded filename.
   * if this is not nil (including empty string) we will use the nested 'value'
   * field as the filename.
   * </pre>
   *
   * <code>.google.protobuf.StringValue override_filename = 3 [json_name = "overrideFilename"];</code>
   * @return Whether the overrideFilename field is set.
   */
  boolean hasOverrideFilename();
  /**
   * <pre>
   * This is the name part that is sandwiched between prefix and suffix.
   * If this is nil, we will use the original uploaded filename.
   * if this is not nil (including empty string) we will use the nested 'value'
   * field as the filename.
   * </pre>
   *
   * <code>.google.protobuf.StringValue override_filename = 3 [json_name = "overrideFilename"];</code>
   * @return The overrideFilename.
   */
  com.google.protobuf.StringValue getOverrideFilename();
  /**
   * <pre>
   * This is the name part that is sandwiched between prefix and suffix.
   * If this is nil, we will use the original uploaded filename.
   * if this is not nil (including empty string) we will use the nested 'value'
   * field as the filename.
   * </pre>
   *
   * <code>.google.protobuf.StringValue override_filename = 3 [json_name = "overrideFilename"];</code>
   */
  com.google.protobuf.StringValueOrBuilder getOverrideFilenameOrBuilder();

  /**
   * <pre>
   * prefix is prepended to the filename (or override_filename)
   * </pre>
   *
   * <code>string prefix = 4 [json_name = "prefix"];</code>
   * @return The prefix.
   */
  java.lang.String getPrefix();
  /**
   * <pre>
   * prefix is prepended to the filename (or override_filename)
   * </pre>
   *
   * <code>string prefix = 4 [json_name = "prefix"];</code>
   * @return The bytes for prefix.
   */
  com.google.protobuf.ByteString
      getPrefixBytes();

  /**
   * <pre>
   * format string like: YYYY-MM-DDhhmmss
   * </pre>
   *
   * <code>string date_format = 5 [json_name = "dateFormat"];</code>
   * @return The dateFormat.
   */
  java.lang.String getDateFormat();
  /**
   * <pre>
   * format string like: YYYY-MM-DDhhmmss
   * </pre>
   *
   * <code>string date_format = 5 [json_name = "dateFormat"];</code>
   * @return The bytes for dateFormat.
   */
  com.google.protobuf.ByteString
      getDateFormatBytes();

  /**
   * <pre>
   * suffix is appeneded to the filename (or override_filename)
   * suffix will go before the extension, even if the original filename has an
   * extension included
   * </pre>
   *
   * <code>string suffix = 6 [json_name = "suffix"];</code>
   * @return The suffix.
   */
  java.lang.String getSuffix();
  /**
   * <pre>
   * suffix is appeneded to the filename (or override_filename)
   * suffix will go before the extension, even if the original filename has an
   * extension included
   * </pre>
   *
   * <code>string suffix = 6 [json_name = "suffix"];</code>
   * @return The bytes for suffix.
   */
  com.google.protobuf.ByteString
      getSuffixBytes();

  /**
   * <pre>
   * extension to add to the file, (if none already exists as part of the
   * original filename)
   * </pre>
   *
   * <code>string file_extension = 7 [json_name = "fileExtension"];</code>
   * @return The fileExtension.
   */
  java.lang.String getFileExtension();
  /**
   * <pre>
   * extension to add to the file, (if none already exists as part of the
   * original filename)
   * </pre>
   *
   * <code>string file_extension = 7 [json_name = "fileExtension"];</code>
   * @return The bytes for fileExtension.
   */
  com.google.protobuf.ByteString
      getFileExtensionBytes();

  /**
   * <pre>
   * If 0 (default) date is positioned very first (before prefix)
   * note that before/after filename reference the same position if
   * 'use_empty_filename' is set
   * </pre>
   *
   * <code>.api.commons.DatePosition date_position = 8 [json_name = "datePosition"];</code>
   * @return The enum numeric value on the wire for datePosition.
   */
  int getDatePositionValue();
  /**
   * <pre>
   * If 0 (default) date is positioned very first (before prefix)
   * note that before/after filename reference the same position if
   * 'use_empty_filename' is set
   * </pre>
   *
   * <code>.api.commons.DatePosition date_position = 8 [json_name = "datePosition"];</code>
   * @return The datePosition.
   */
  com.tcn.cloud.api.api.commons.DatePosition getDatePosition();

  /**
   * <pre>
   * Day to use for date
   * </pre>
   *
   * <code>.api.commons.RelativeDay day_to_use = 9 [json_name = "dayToUse"];</code>
   * @return The enum numeric value on the wire for dayToUse.
   */
  int getDayToUseValue();
  /**
   * <pre>
   * Day to use for date
   * </pre>
   *
   * <code>.api.commons.RelativeDay day_to_use = 9 [json_name = "dayToUse"];</code>
   * @return The dayToUse.
   */
  com.tcn.cloud.api.api.commons.RelativeDay getDayToUse();
}
