// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v1alpha1/explorer/entities.proto

package com.tcn.cloud.api.api.v1alpha1.explorer;

/**
 * <pre>
 * SchemaType is an enum for the type of a schema field.
 * </pre>
 *
 * Protobuf enum {@code api.v1alpha1.explorer.SchemaType}
 */
public enum SchemaType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>SCHEMA_TYPE_UNSPECIFIED = 0;</code>
   */
  SCHEMA_TYPE_UNSPECIFIED(0),
  /**
   * <code>SCHEMA_TYPE_INT = 2;</code>
   */
  SCHEMA_TYPE_INT(2),
  /**
   * <code>SCHEMA_TYPE_FLOAT = 3;</code>
   */
  SCHEMA_TYPE_FLOAT(3),
  /**
   * <code>SCHEMA_TYPE_STRING = 5;</code>
   */
  SCHEMA_TYPE_STRING(5),
  /**
   * <code>SCHEMA_TYPE_BOOL = 6;</code>
   */
  SCHEMA_TYPE_BOOL(6),
  /**
   * <code>SCHEMA_TYPE_TIMESTAMP = 7;</code>
   */
  SCHEMA_TYPE_TIMESTAMP(7),
  /**
   * <code>SCHEMA_TYPE_INT_ARRAY = 8;</code>
   */
  SCHEMA_TYPE_INT_ARRAY(8),
  /**
   * <code>SCHEMA_TYPE_FLOAT_ARRAY = 9;</code>
   */
  SCHEMA_TYPE_FLOAT_ARRAY(9),
  /**
   * <code>SCHEMA_TYPE_STRING_ARRAY = 10;</code>
   */
  SCHEMA_TYPE_STRING_ARRAY(10),
  /**
   * <code>SCHEMA_TYPE_BOOL_ARRAY = 11;</code>
   */
  SCHEMA_TYPE_BOOL_ARRAY(11),
  /**
   * <code>SCHEMA_TYPE_MAP = 12;</code>
   */
  SCHEMA_TYPE_MAP(12),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>SCHEMA_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int SCHEMA_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>SCHEMA_TYPE_INT = 2;</code>
   */
  public static final int SCHEMA_TYPE_INT_VALUE = 2;
  /**
   * <code>SCHEMA_TYPE_FLOAT = 3;</code>
   */
  public static final int SCHEMA_TYPE_FLOAT_VALUE = 3;
  /**
   * <code>SCHEMA_TYPE_STRING = 5;</code>
   */
  public static final int SCHEMA_TYPE_STRING_VALUE = 5;
  /**
   * <code>SCHEMA_TYPE_BOOL = 6;</code>
   */
  public static final int SCHEMA_TYPE_BOOL_VALUE = 6;
  /**
   * <code>SCHEMA_TYPE_TIMESTAMP = 7;</code>
   */
  public static final int SCHEMA_TYPE_TIMESTAMP_VALUE = 7;
  /**
   * <code>SCHEMA_TYPE_INT_ARRAY = 8;</code>
   */
  public static final int SCHEMA_TYPE_INT_ARRAY_VALUE = 8;
  /**
   * <code>SCHEMA_TYPE_FLOAT_ARRAY = 9;</code>
   */
  public static final int SCHEMA_TYPE_FLOAT_ARRAY_VALUE = 9;
  /**
   * <code>SCHEMA_TYPE_STRING_ARRAY = 10;</code>
   */
  public static final int SCHEMA_TYPE_STRING_ARRAY_VALUE = 10;
  /**
   * <code>SCHEMA_TYPE_BOOL_ARRAY = 11;</code>
   */
  public static final int SCHEMA_TYPE_BOOL_ARRAY_VALUE = 11;
  /**
   * <code>SCHEMA_TYPE_MAP = 12;</code>
   */
  public static final int SCHEMA_TYPE_MAP_VALUE = 12;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SchemaType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SchemaType forNumber(int value) {
    switch (value) {
      case 0: return SCHEMA_TYPE_UNSPECIFIED;
      case 2: return SCHEMA_TYPE_INT;
      case 3: return SCHEMA_TYPE_FLOAT;
      case 5: return SCHEMA_TYPE_STRING;
      case 6: return SCHEMA_TYPE_BOOL;
      case 7: return SCHEMA_TYPE_TIMESTAMP;
      case 8: return SCHEMA_TYPE_INT_ARRAY;
      case 9: return SCHEMA_TYPE_FLOAT_ARRAY;
      case 10: return SCHEMA_TYPE_STRING_ARRAY;
      case 11: return SCHEMA_TYPE_BOOL_ARRAY;
      case 12: return SCHEMA_TYPE_MAP;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SchemaType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SchemaType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SchemaType>() {
          public SchemaType findValueByNumber(int number) {
            return SchemaType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v1alpha1.explorer.EntitiesProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final SchemaType[] VALUES = values();

  public static SchemaType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SchemaType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.v1alpha1.explorer.SchemaType)
}

