// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/omnichannel.proto

package com.tcn.cloud.api.api.commons;

/**
 * <pre>
 * WhatsApp message types
 * </pre>
 *
 * Protobuf enum {@code api.commons.WhatsAppType}
 */
public enum WhatsAppType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * audio messages
   * </pre>
   *
   * <code>WHATSAPP_AUDIO_TYPE = 0;</code>
   */
  WHATSAPP_AUDIO_TYPE(0),
  /**
   * <pre>
   * contact messages
   * </pre>
   *
   * <code>WHATSAPP_CONTACT_TYPE = 1;</code>
   */
  WHATSAPP_CONTACT_TYPE(1),
  /**
   * <pre>
   * document messages
   * </pre>
   *
   * <code>WHATSAPP_DOCUMENT_TYPE = 2;</code>
   */
  WHATSAPP_DOCUMENT_TYPE(2),
  /**
   * <pre>
   * image messages
   * </pre>
   *
   * <code>WHATSAPP_IMAGE_TYPE = 3;</code>
   */
  WHATSAPP_IMAGE_TYPE(3),
  /**
   * <pre>
   * interactive messages for list and reply
   * </pre>
   *
   * <code>WHATSAPP_INTERACTIVE_TYPE = 4;</code>
   */
  WHATSAPP_INTERACTIVE_TYPE(4),
  /**
   * <pre>
   * location messages
   * </pre>
   *
   * <code>WHATSAPP_LOCATION_TYPE = 5;</code>
   */
  WHATSAPP_LOCATION_TYPE(5),
  /**
   * <pre>
   * sticker messages
   * </pre>
   *
   * <code>WHATSAPP_STICKER_TYPE = 6;</code>
   */
  WHATSAPP_STICKER_TYPE(6),
  /**
   * <pre>
   * template messages for Text and media (images and documents)
   * </pre>
   *
   * <code>WHATSAPP_TEMPLATE_TYPE = 7;</code>
   */
  WHATSAPP_TEMPLATE_TYPE(7),
  /**
   * <pre>
   * text messages
   * </pre>
   *
   * <code>WHATSAPP_TEXT_TYPE = 8;</code>
   */
  WHATSAPP_TEXT_TYPE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * audio messages
   * </pre>
   *
   * <code>WHATSAPP_AUDIO_TYPE = 0;</code>
   */
  public static final int WHATSAPP_AUDIO_TYPE_VALUE = 0;
  /**
   * <pre>
   * contact messages
   * </pre>
   *
   * <code>WHATSAPP_CONTACT_TYPE = 1;</code>
   */
  public static final int WHATSAPP_CONTACT_TYPE_VALUE = 1;
  /**
   * <pre>
   * document messages
   * </pre>
   *
   * <code>WHATSAPP_DOCUMENT_TYPE = 2;</code>
   */
  public static final int WHATSAPP_DOCUMENT_TYPE_VALUE = 2;
  /**
   * <pre>
   * image messages
   * </pre>
   *
   * <code>WHATSAPP_IMAGE_TYPE = 3;</code>
   */
  public static final int WHATSAPP_IMAGE_TYPE_VALUE = 3;
  /**
   * <pre>
   * interactive messages for list and reply
   * </pre>
   *
   * <code>WHATSAPP_INTERACTIVE_TYPE = 4;</code>
   */
  public static final int WHATSAPP_INTERACTIVE_TYPE_VALUE = 4;
  /**
   * <pre>
   * location messages
   * </pre>
   *
   * <code>WHATSAPP_LOCATION_TYPE = 5;</code>
   */
  public static final int WHATSAPP_LOCATION_TYPE_VALUE = 5;
  /**
   * <pre>
   * sticker messages
   * </pre>
   *
   * <code>WHATSAPP_STICKER_TYPE = 6;</code>
   */
  public static final int WHATSAPP_STICKER_TYPE_VALUE = 6;
  /**
   * <pre>
   * template messages for Text and media (images and documents)
   * </pre>
   *
   * <code>WHATSAPP_TEMPLATE_TYPE = 7;</code>
   */
  public static final int WHATSAPP_TEMPLATE_TYPE_VALUE = 7;
  /**
   * <pre>
   * text messages
   * </pre>
   *
   * <code>WHATSAPP_TEXT_TYPE = 8;</code>
   */
  public static final int WHATSAPP_TEXT_TYPE_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static WhatsAppType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static WhatsAppType forNumber(int value) {
    switch (value) {
      case 0: return WHATSAPP_AUDIO_TYPE;
      case 1: return WHATSAPP_CONTACT_TYPE;
      case 2: return WHATSAPP_DOCUMENT_TYPE;
      case 3: return WHATSAPP_IMAGE_TYPE;
      case 4: return WHATSAPP_INTERACTIVE_TYPE;
      case 5: return WHATSAPP_LOCATION_TYPE;
      case 6: return WHATSAPP_STICKER_TYPE;
      case 7: return WHATSAPP_TEMPLATE_TYPE;
      case 8: return WHATSAPP_TEXT_TYPE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<WhatsAppType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      WhatsAppType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<WhatsAppType>() {
          public WhatsAppType findValueByNumber(int number) {
            return WhatsAppType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.OmnichannelProto.getDescriptor().getEnumTypes().get(21);
  }

  private static final WhatsAppType[] VALUES = values();

  public static WhatsAppType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private WhatsAppType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:api.commons.WhatsAppType)
}

