// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/v0alpha/acd.proto

package com.tcn.cloud.api.api.v0alpha;

/**
 * <pre>
 * message used to start a warm caller transfer
 * </pre>
 *
 * Protobuf type {@code api.v0alpha.WarmCallerTransferStartReq}
 */
public final class WarmCallerTransferStartReq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.v0alpha.WarmCallerTransferStartReq)
    WarmCallerTransferStartReqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WarmCallerTransferStartReq.newBuilder() to construct.
  private WarmCallerTransferStartReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WarmCallerTransferStartReq() {
    callType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WarmCallerTransferStartReq();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WarmCallerTransferStartReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            sessionSid_ = input.readInt64();
            break;
          }
          case 16: {

            callSid_ = input.readInt64();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            callType_ = rawValue;
            break;
          }
          case 32: {

            callerHold_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.v0alpha.AcdProto.internal_static_api_v0alpha_WarmCallerTransferStartReq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.v0alpha.AcdProto.internal_static_api_v0alpha_WarmCallerTransferStartReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.class, com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.Builder.class);
  }

  public static final int SESSION_SID_FIELD_NUMBER = 1;
  private long sessionSid_;
  /**
   * <pre>
   * the session sid for the agent
   * </pre>
   *
   * <code>int64 session_sid = 1 [json_name = "sessionSid"];</code>
   * @return The sessionSid.
   */
  @java.lang.Override
  public long getSessionSid() {
    return sessionSid_;
  }

  public static final int CALL_SID_FIELD_NUMBER = 2;
  private long callSid_;
  /**
   * <pre>
   * the sid for the destination caller
   * </pre>
   *
   * <code>int64 call_sid = 2 [json_name = "callSid"];</code>
   * @return The callSid.
   */
  @java.lang.Override
  public long getCallSid() {
    return callSid_;
  }

  public static final int CALL_TYPE_FIELD_NUMBER = 3;
  private int callType_;
  /**
   * <pre>
   * the type for the destination caller
   * </pre>
   *
   * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
   * @return The enum numeric value on the wire for callType.
   */
  @java.lang.Override public int getCallTypeValue() {
    return callType_;
  }
  /**
   * <pre>
   * the type for the destination caller
   * </pre>
   *
   * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
   * @return The callType.
   */
  @java.lang.Override public com.tcn.cloud.api.api.commons.CallType.Enum getCallType() {
    @SuppressWarnings("deprecation")
    com.tcn.cloud.api.api.commons.CallType.Enum result = com.tcn.cloud.api.api.commons.CallType.Enum.valueOf(callType_);
    return result == null ? com.tcn.cloud.api.api.commons.CallType.Enum.UNRECOGNIZED : result;
  }

  public static final int CALLER_HOLD_FIELD_NUMBER = 4;
  private boolean callerHold_;
  /**
   * <pre>
   * whether or not we should mute current caller ro not
   * </pre>
   *
   * <code>bool caller_hold = 4 [json_name = "callerHold"];</code>
   * @return The callerHold.
   */
  @java.lang.Override
  public boolean getCallerHold() {
    return callerHold_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sessionSid_ != 0L) {
      output.writeInt64(1, sessionSid_);
    }
    if (callSid_ != 0L) {
      output.writeInt64(2, callSid_);
    }
    if (callType_ != com.tcn.cloud.api.api.commons.CallType.Enum.INBOUND.getNumber()) {
      output.writeEnum(3, callType_);
    }
    if (callerHold_ != false) {
      output.writeBool(4, callerHold_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sessionSid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, sessionSid_);
    }
    if (callSid_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, callSid_);
    }
    if (callType_ != com.tcn.cloud.api.api.commons.CallType.Enum.INBOUND.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, callType_);
    }
    if (callerHold_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, callerHold_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq other = (com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq) obj;

    if (getSessionSid()
        != other.getSessionSid()) return false;
    if (getCallSid()
        != other.getCallSid()) return false;
    if (callType_ != other.callType_) return false;
    if (getCallerHold()
        != other.getCallerHold()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_SID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSessionSid());
    hash = (37 * hash) + CALL_SID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCallSid());
    hash = (37 * hash) + CALL_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + callType_;
    hash = (37 * hash) + CALLER_HOLD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCallerHold());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * message used to start a warm caller transfer
   * </pre>
   *
   * Protobuf type {@code api.v0alpha.WarmCallerTransferStartReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.v0alpha.WarmCallerTransferStartReq)
      com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.v0alpha.AcdProto.internal_static_api_v0alpha_WarmCallerTransferStartReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.v0alpha.AcdProto.internal_static_api_v0alpha_WarmCallerTransferStartReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.class, com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      sessionSid_ = 0L;

      callSid_ = 0L;

      callType_ = 0;

      callerHold_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.v0alpha.AcdProto.internal_static_api_v0alpha_WarmCallerTransferStartReq_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq build() {
      com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq buildPartial() {
      com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq result = new com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq(this);
      result.sessionSid_ = sessionSid_;
      result.callSid_ = callSid_;
      result.callType_ = callType_;
      result.callerHold_ = callerHold_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq) {
        return mergeFrom((com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq other) {
      if (other == com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq.getDefaultInstance()) return this;
      if (other.getSessionSid() != 0L) {
        setSessionSid(other.getSessionSid());
      }
      if (other.getCallSid() != 0L) {
        setCallSid(other.getCallSid());
      }
      if (other.callType_ != 0) {
        setCallTypeValue(other.getCallTypeValue());
      }
      if (other.getCallerHold() != false) {
        setCallerHold(other.getCallerHold());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long sessionSid_ ;
    /**
     * <pre>
     * the session sid for the agent
     * </pre>
     *
     * <code>int64 session_sid = 1 [json_name = "sessionSid"];</code>
     * @return The sessionSid.
     */
    @java.lang.Override
    public long getSessionSid() {
      return sessionSid_;
    }
    /**
     * <pre>
     * the session sid for the agent
     * </pre>
     *
     * <code>int64 session_sid = 1 [json_name = "sessionSid"];</code>
     * @param value The sessionSid to set.
     * @return This builder for chaining.
     */
    public Builder setSessionSid(long value) {
      
      sessionSid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the session sid for the agent
     * </pre>
     *
     * <code>int64 session_sid = 1 [json_name = "sessionSid"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSessionSid() {
      
      sessionSid_ = 0L;
      onChanged();
      return this;
    }

    private long callSid_ ;
    /**
     * <pre>
     * the sid for the destination caller
     * </pre>
     *
     * <code>int64 call_sid = 2 [json_name = "callSid"];</code>
     * @return The callSid.
     */
    @java.lang.Override
    public long getCallSid() {
      return callSid_;
    }
    /**
     * <pre>
     * the sid for the destination caller
     * </pre>
     *
     * <code>int64 call_sid = 2 [json_name = "callSid"];</code>
     * @param value The callSid to set.
     * @return This builder for chaining.
     */
    public Builder setCallSid(long value) {
      
      callSid_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the sid for the destination caller
     * </pre>
     *
     * <code>int64 call_sid = 2 [json_name = "callSid"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCallSid() {
      
      callSid_ = 0L;
      onChanged();
      return this;
    }

    private int callType_ = 0;
    /**
     * <pre>
     * the type for the destination caller
     * </pre>
     *
     * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
     * @return The enum numeric value on the wire for callType.
     */
    @java.lang.Override public int getCallTypeValue() {
      return callType_;
    }
    /**
     * <pre>
     * the type for the destination caller
     * </pre>
     *
     * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
     * @param value The enum numeric value on the wire for callType to set.
     * @return This builder for chaining.
     */
    public Builder setCallTypeValue(int value) {
      
      callType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the type for the destination caller
     * </pre>
     *
     * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
     * @return The callType.
     */
    @java.lang.Override
    public com.tcn.cloud.api.api.commons.CallType.Enum getCallType() {
      @SuppressWarnings("deprecation")
      com.tcn.cloud.api.api.commons.CallType.Enum result = com.tcn.cloud.api.api.commons.CallType.Enum.valueOf(callType_);
      return result == null ? com.tcn.cloud.api.api.commons.CallType.Enum.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * the type for the destination caller
     * </pre>
     *
     * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
     * @param value The callType to set.
     * @return This builder for chaining.
     */
    public Builder setCallType(com.tcn.cloud.api.api.commons.CallType.Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      callType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * the type for the destination caller
     * </pre>
     *
     * <code>.api.commons.CallType.Enum call_type = 3 [json_name = "callType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCallType() {
      
      callType_ = 0;
      onChanged();
      return this;
    }

    private boolean callerHold_ ;
    /**
     * <pre>
     * whether or not we should mute current caller ro not
     * </pre>
     *
     * <code>bool caller_hold = 4 [json_name = "callerHold"];</code>
     * @return The callerHold.
     */
    @java.lang.Override
    public boolean getCallerHold() {
      return callerHold_;
    }
    /**
     * <pre>
     * whether or not we should mute current caller ro not
     * </pre>
     *
     * <code>bool caller_hold = 4 [json_name = "callerHold"];</code>
     * @param value The callerHold to set.
     * @return This builder for chaining.
     */
    public Builder setCallerHold(boolean value) {
      
      callerHold_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * whether or not we should mute current caller ro not
     * </pre>
     *
     * <code>bool caller_hold = 4 [json_name = "callerHold"];</code>
     * @return This builder for chaining.
     */
    public Builder clearCallerHold() {
      
      callerHold_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.v0alpha.WarmCallerTransferStartReq)
  }

  // @@protoc_insertion_point(class_scope:api.v0alpha.WarmCallerTransferStartReq)
  private static final com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq();
  }

  public static com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WarmCallerTransferStartReq>
      PARSER = new com.google.protobuf.AbstractParser<WarmCallerTransferStartReq>() {
    @java.lang.Override
    public WarmCallerTransferStartReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WarmCallerTransferStartReq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WarmCallerTransferStartReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WarmCallerTransferStartReq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.v0alpha.WarmCallerTransferStartReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

