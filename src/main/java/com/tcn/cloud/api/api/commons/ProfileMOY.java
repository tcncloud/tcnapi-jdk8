// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/commons/wfm.proto

package com.tcn.cloud.api.api.commons;

/**
 * <pre>
 * a profile for each month of the year
 * </pre>
 *
 * Protobuf type {@code api.commons.ProfileMOY}
 */
public final class ProfileMOY extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.commons.ProfileMOY)
    ProfileMOYOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ProfileMOY.newBuilder() to construct.
  private ProfileMOY(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ProfileMOY() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ProfileMOY();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.tcn.cloud.api.api.commons.WfmProto.internal_static_api_commons_ProfileMOY_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.tcn.cloud.api.api.commons.WfmProto.internal_static_api_commons_ProfileMOY_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.tcn.cloud.api.api.commons.ProfileMOY.class, com.tcn.cloud.api.api.commons.ProfileMOY.Builder.class);
  }

  public static final int JANUARY_FIELD_NUMBER = 1;
  private float january_ = 0F;
  /**
   * <code>float january = 1 [json_name = "january"];</code>
   * @return The january.
   */
  @java.lang.Override
  public float getJanuary() {
    return january_;
  }

  public static final int FEBRUARY_FIELD_NUMBER = 2;
  private float february_ = 0F;
  /**
   * <code>float february = 2 [json_name = "february"];</code>
   * @return The february.
   */
  @java.lang.Override
  public float getFebruary() {
    return february_;
  }

  public static final int MARCH_FIELD_NUMBER = 3;
  private float march_ = 0F;
  /**
   * <code>float march = 3 [json_name = "march"];</code>
   * @return The march.
   */
  @java.lang.Override
  public float getMarch() {
    return march_;
  }

  public static final int APRIL_FIELD_NUMBER = 4;
  private float april_ = 0F;
  /**
   * <code>float april = 4 [json_name = "april"];</code>
   * @return The april.
   */
  @java.lang.Override
  public float getApril() {
    return april_;
  }

  public static final int MAY_FIELD_NUMBER = 5;
  private float may_ = 0F;
  /**
   * <code>float may = 5 [json_name = "may"];</code>
   * @return The may.
   */
  @java.lang.Override
  public float getMay() {
    return may_;
  }

  public static final int JUNE_FIELD_NUMBER = 6;
  private float june_ = 0F;
  /**
   * <code>float june = 6 [json_name = "june"];</code>
   * @return The june.
   */
  @java.lang.Override
  public float getJune() {
    return june_;
  }

  public static final int JULY_FIELD_NUMBER = 7;
  private float july_ = 0F;
  /**
   * <code>float july = 7 [json_name = "july"];</code>
   * @return The july.
   */
  @java.lang.Override
  public float getJuly() {
    return july_;
  }

  public static final int AUGUST_FIELD_NUMBER = 8;
  private float august_ = 0F;
  /**
   * <code>float august = 8 [json_name = "august"];</code>
   * @return The august.
   */
  @java.lang.Override
  public float getAugust() {
    return august_;
  }

  public static final int SEPTEMBER_FIELD_NUMBER = 9;
  private float september_ = 0F;
  /**
   * <code>float september = 9 [json_name = "september"];</code>
   * @return The september.
   */
  @java.lang.Override
  public float getSeptember() {
    return september_;
  }

  public static final int OCTOBER_FIELD_NUMBER = 10;
  private float october_ = 0F;
  /**
   * <code>float october = 10 [json_name = "october"];</code>
   * @return The october.
   */
  @java.lang.Override
  public float getOctober() {
    return october_;
  }

  public static final int NOVEMBER_FIELD_NUMBER = 11;
  private float november_ = 0F;
  /**
   * <code>float november = 11 [json_name = "november"];</code>
   * @return The november.
   */
  @java.lang.Override
  public float getNovember() {
    return november_;
  }

  public static final int DECEMBER_FIELD_NUMBER = 12;
  private float december_ = 0F;
  /**
   * <code>float december = 12 [json_name = "december"];</code>
   * @return The december.
   */
  @java.lang.Override
  public float getDecember() {
    return december_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (java.lang.Float.floatToRawIntBits(january_) != 0) {
      output.writeFloat(1, january_);
    }
    if (java.lang.Float.floatToRawIntBits(february_) != 0) {
      output.writeFloat(2, february_);
    }
    if (java.lang.Float.floatToRawIntBits(march_) != 0) {
      output.writeFloat(3, march_);
    }
    if (java.lang.Float.floatToRawIntBits(april_) != 0) {
      output.writeFloat(4, april_);
    }
    if (java.lang.Float.floatToRawIntBits(may_) != 0) {
      output.writeFloat(5, may_);
    }
    if (java.lang.Float.floatToRawIntBits(june_) != 0) {
      output.writeFloat(6, june_);
    }
    if (java.lang.Float.floatToRawIntBits(july_) != 0) {
      output.writeFloat(7, july_);
    }
    if (java.lang.Float.floatToRawIntBits(august_) != 0) {
      output.writeFloat(8, august_);
    }
    if (java.lang.Float.floatToRawIntBits(september_) != 0) {
      output.writeFloat(9, september_);
    }
    if (java.lang.Float.floatToRawIntBits(october_) != 0) {
      output.writeFloat(10, october_);
    }
    if (java.lang.Float.floatToRawIntBits(november_) != 0) {
      output.writeFloat(11, november_);
    }
    if (java.lang.Float.floatToRawIntBits(december_) != 0) {
      output.writeFloat(12, december_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (java.lang.Float.floatToRawIntBits(january_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, january_);
    }
    if (java.lang.Float.floatToRawIntBits(february_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, february_);
    }
    if (java.lang.Float.floatToRawIntBits(march_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, march_);
    }
    if (java.lang.Float.floatToRawIntBits(april_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, april_);
    }
    if (java.lang.Float.floatToRawIntBits(may_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, may_);
    }
    if (java.lang.Float.floatToRawIntBits(june_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, june_);
    }
    if (java.lang.Float.floatToRawIntBits(july_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, july_);
    }
    if (java.lang.Float.floatToRawIntBits(august_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, august_);
    }
    if (java.lang.Float.floatToRawIntBits(september_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, september_);
    }
    if (java.lang.Float.floatToRawIntBits(october_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(10, october_);
    }
    if (java.lang.Float.floatToRawIntBits(november_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, november_);
    }
    if (java.lang.Float.floatToRawIntBits(december_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(12, december_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.tcn.cloud.api.api.commons.ProfileMOY)) {
      return super.equals(obj);
    }
    com.tcn.cloud.api.api.commons.ProfileMOY other = (com.tcn.cloud.api.api.commons.ProfileMOY) obj;

    if (java.lang.Float.floatToIntBits(getJanuary())
        != java.lang.Float.floatToIntBits(
            other.getJanuary())) return false;
    if (java.lang.Float.floatToIntBits(getFebruary())
        != java.lang.Float.floatToIntBits(
            other.getFebruary())) return false;
    if (java.lang.Float.floatToIntBits(getMarch())
        != java.lang.Float.floatToIntBits(
            other.getMarch())) return false;
    if (java.lang.Float.floatToIntBits(getApril())
        != java.lang.Float.floatToIntBits(
            other.getApril())) return false;
    if (java.lang.Float.floatToIntBits(getMay())
        != java.lang.Float.floatToIntBits(
            other.getMay())) return false;
    if (java.lang.Float.floatToIntBits(getJune())
        != java.lang.Float.floatToIntBits(
            other.getJune())) return false;
    if (java.lang.Float.floatToIntBits(getJuly())
        != java.lang.Float.floatToIntBits(
            other.getJuly())) return false;
    if (java.lang.Float.floatToIntBits(getAugust())
        != java.lang.Float.floatToIntBits(
            other.getAugust())) return false;
    if (java.lang.Float.floatToIntBits(getSeptember())
        != java.lang.Float.floatToIntBits(
            other.getSeptember())) return false;
    if (java.lang.Float.floatToIntBits(getOctober())
        != java.lang.Float.floatToIntBits(
            other.getOctober())) return false;
    if (java.lang.Float.floatToIntBits(getNovember())
        != java.lang.Float.floatToIntBits(
            other.getNovember())) return false;
    if (java.lang.Float.floatToIntBits(getDecember())
        != java.lang.Float.floatToIntBits(
            other.getDecember())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + JANUARY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getJanuary());
    hash = (37 * hash) + FEBRUARY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getFebruary());
    hash = (37 * hash) + MARCH_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMarch());
    hash = (37 * hash) + APRIL_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getApril());
    hash = (37 * hash) + MAY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMay());
    hash = (37 * hash) + JUNE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getJune());
    hash = (37 * hash) + JULY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getJuly());
    hash = (37 * hash) + AUGUST_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getAugust());
    hash = (37 * hash) + SEPTEMBER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getSeptember());
    hash = (37 * hash) + OCTOBER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getOctober());
    hash = (37 * hash) + NOVEMBER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getNovember());
    hash = (37 * hash) + DECEMBER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDecember());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.tcn.cloud.api.api.commons.ProfileMOY parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.tcn.cloud.api.api.commons.ProfileMOY parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.tcn.cloud.api.api.commons.ProfileMOY parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.tcn.cloud.api.api.commons.ProfileMOY prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * a profile for each month of the year
   * </pre>
   *
   * Protobuf type {@code api.commons.ProfileMOY}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.commons.ProfileMOY)
      com.tcn.cloud.api.api.commons.ProfileMOYOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tcn.cloud.api.api.commons.WfmProto.internal_static_api_commons_ProfileMOY_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tcn.cloud.api.api.commons.WfmProto.internal_static_api_commons_ProfileMOY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tcn.cloud.api.api.commons.ProfileMOY.class, com.tcn.cloud.api.api.commons.ProfileMOY.Builder.class);
    }

    // Construct using com.tcn.cloud.api.api.commons.ProfileMOY.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      january_ = 0F;
      february_ = 0F;
      march_ = 0F;
      april_ = 0F;
      may_ = 0F;
      june_ = 0F;
      july_ = 0F;
      august_ = 0F;
      september_ = 0F;
      october_ = 0F;
      november_ = 0F;
      december_ = 0F;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.tcn.cloud.api.api.commons.WfmProto.internal_static_api_commons_ProfileMOY_descriptor;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.ProfileMOY getDefaultInstanceForType() {
      return com.tcn.cloud.api.api.commons.ProfileMOY.getDefaultInstance();
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.ProfileMOY build() {
      com.tcn.cloud.api.api.commons.ProfileMOY result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.tcn.cloud.api.api.commons.ProfileMOY buildPartial() {
      com.tcn.cloud.api.api.commons.ProfileMOY result = new com.tcn.cloud.api.api.commons.ProfileMOY(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.tcn.cloud.api.api.commons.ProfileMOY result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.january_ = january_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.february_ = february_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.march_ = march_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.april_ = april_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.may_ = may_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.june_ = june_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.july_ = july_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.august_ = august_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.september_ = september_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.october_ = october_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.november_ = november_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.december_ = december_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.tcn.cloud.api.api.commons.ProfileMOY) {
        return mergeFrom((com.tcn.cloud.api.api.commons.ProfileMOY)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.tcn.cloud.api.api.commons.ProfileMOY other) {
      if (other == com.tcn.cloud.api.api.commons.ProfileMOY.getDefaultInstance()) return this;
      if (other.getJanuary() != 0F) {
        setJanuary(other.getJanuary());
      }
      if (other.getFebruary() != 0F) {
        setFebruary(other.getFebruary());
      }
      if (other.getMarch() != 0F) {
        setMarch(other.getMarch());
      }
      if (other.getApril() != 0F) {
        setApril(other.getApril());
      }
      if (other.getMay() != 0F) {
        setMay(other.getMay());
      }
      if (other.getJune() != 0F) {
        setJune(other.getJune());
      }
      if (other.getJuly() != 0F) {
        setJuly(other.getJuly());
      }
      if (other.getAugust() != 0F) {
        setAugust(other.getAugust());
      }
      if (other.getSeptember() != 0F) {
        setSeptember(other.getSeptember());
      }
      if (other.getOctober() != 0F) {
        setOctober(other.getOctober());
      }
      if (other.getNovember() != 0F) {
        setNovember(other.getNovember());
      }
      if (other.getDecember() != 0F) {
        setDecember(other.getDecember());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              january_ = input.readFloat();
              bitField0_ |= 0x00000001;
              break;
            } // case 13
            case 21: {
              february_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              march_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 37: {
              april_ = input.readFloat();
              bitField0_ |= 0x00000008;
              break;
            } // case 37
            case 45: {
              may_ = input.readFloat();
              bitField0_ |= 0x00000010;
              break;
            } // case 45
            case 53: {
              june_ = input.readFloat();
              bitField0_ |= 0x00000020;
              break;
            } // case 53
            case 61: {
              july_ = input.readFloat();
              bitField0_ |= 0x00000040;
              break;
            } // case 61
            case 69: {
              august_ = input.readFloat();
              bitField0_ |= 0x00000080;
              break;
            } // case 69
            case 77: {
              september_ = input.readFloat();
              bitField0_ |= 0x00000100;
              break;
            } // case 77
            case 85: {
              october_ = input.readFloat();
              bitField0_ |= 0x00000200;
              break;
            } // case 85
            case 93: {
              november_ = input.readFloat();
              bitField0_ |= 0x00000400;
              break;
            } // case 93
            case 101: {
              december_ = input.readFloat();
              bitField0_ |= 0x00000800;
              break;
            } // case 101
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private float january_ ;
    /**
     * <code>float january = 1 [json_name = "january"];</code>
     * @return The january.
     */
    @java.lang.Override
    public float getJanuary() {
      return january_;
    }
    /**
     * <code>float january = 1 [json_name = "january"];</code>
     * @param value The january to set.
     * @return This builder for chaining.
     */
    public Builder setJanuary(float value) {

      january_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>float january = 1 [json_name = "january"];</code>
     * @return This builder for chaining.
     */
    public Builder clearJanuary() {
      bitField0_ = (bitField0_ & ~0x00000001);
      january_ = 0F;
      onChanged();
      return this;
    }

    private float february_ ;
    /**
     * <code>float february = 2 [json_name = "february"];</code>
     * @return The february.
     */
    @java.lang.Override
    public float getFebruary() {
      return february_;
    }
    /**
     * <code>float february = 2 [json_name = "february"];</code>
     * @param value The february to set.
     * @return This builder for chaining.
     */
    public Builder setFebruary(float value) {

      february_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float february = 2 [json_name = "february"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFebruary() {
      bitField0_ = (bitField0_ & ~0x00000002);
      february_ = 0F;
      onChanged();
      return this;
    }

    private float march_ ;
    /**
     * <code>float march = 3 [json_name = "march"];</code>
     * @return The march.
     */
    @java.lang.Override
    public float getMarch() {
      return march_;
    }
    /**
     * <code>float march = 3 [json_name = "march"];</code>
     * @param value The march to set.
     * @return This builder for chaining.
     */
    public Builder setMarch(float value) {

      march_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>float march = 3 [json_name = "march"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMarch() {
      bitField0_ = (bitField0_ & ~0x00000004);
      march_ = 0F;
      onChanged();
      return this;
    }

    private float april_ ;
    /**
     * <code>float april = 4 [json_name = "april"];</code>
     * @return The april.
     */
    @java.lang.Override
    public float getApril() {
      return april_;
    }
    /**
     * <code>float april = 4 [json_name = "april"];</code>
     * @param value The april to set.
     * @return This builder for chaining.
     */
    public Builder setApril(float value) {

      april_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>float april = 4 [json_name = "april"];</code>
     * @return This builder for chaining.
     */
    public Builder clearApril() {
      bitField0_ = (bitField0_ & ~0x00000008);
      april_ = 0F;
      onChanged();
      return this;
    }

    private float may_ ;
    /**
     * <code>float may = 5 [json_name = "may"];</code>
     * @return The may.
     */
    @java.lang.Override
    public float getMay() {
      return may_;
    }
    /**
     * <code>float may = 5 [json_name = "may"];</code>
     * @param value The may to set.
     * @return This builder for chaining.
     */
    public Builder setMay(float value) {

      may_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>float may = 5 [json_name = "may"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMay() {
      bitField0_ = (bitField0_ & ~0x00000010);
      may_ = 0F;
      onChanged();
      return this;
    }

    private float june_ ;
    /**
     * <code>float june = 6 [json_name = "june"];</code>
     * @return The june.
     */
    @java.lang.Override
    public float getJune() {
      return june_;
    }
    /**
     * <code>float june = 6 [json_name = "june"];</code>
     * @param value The june to set.
     * @return This builder for chaining.
     */
    public Builder setJune(float value) {

      june_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>float june = 6 [json_name = "june"];</code>
     * @return This builder for chaining.
     */
    public Builder clearJune() {
      bitField0_ = (bitField0_ & ~0x00000020);
      june_ = 0F;
      onChanged();
      return this;
    }

    private float july_ ;
    /**
     * <code>float july = 7 [json_name = "july"];</code>
     * @return The july.
     */
    @java.lang.Override
    public float getJuly() {
      return july_;
    }
    /**
     * <code>float july = 7 [json_name = "july"];</code>
     * @param value The july to set.
     * @return This builder for chaining.
     */
    public Builder setJuly(float value) {

      july_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>float july = 7 [json_name = "july"];</code>
     * @return This builder for chaining.
     */
    public Builder clearJuly() {
      bitField0_ = (bitField0_ & ~0x00000040);
      july_ = 0F;
      onChanged();
      return this;
    }

    private float august_ ;
    /**
     * <code>float august = 8 [json_name = "august"];</code>
     * @return The august.
     */
    @java.lang.Override
    public float getAugust() {
      return august_;
    }
    /**
     * <code>float august = 8 [json_name = "august"];</code>
     * @param value The august to set.
     * @return This builder for chaining.
     */
    public Builder setAugust(float value) {

      august_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>float august = 8 [json_name = "august"];</code>
     * @return This builder for chaining.
     */
    public Builder clearAugust() {
      bitField0_ = (bitField0_ & ~0x00000080);
      august_ = 0F;
      onChanged();
      return this;
    }

    private float september_ ;
    /**
     * <code>float september = 9 [json_name = "september"];</code>
     * @return The september.
     */
    @java.lang.Override
    public float getSeptember() {
      return september_;
    }
    /**
     * <code>float september = 9 [json_name = "september"];</code>
     * @param value The september to set.
     * @return This builder for chaining.
     */
    public Builder setSeptember(float value) {

      september_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>float september = 9 [json_name = "september"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSeptember() {
      bitField0_ = (bitField0_ & ~0x00000100);
      september_ = 0F;
      onChanged();
      return this;
    }

    private float october_ ;
    /**
     * <code>float october = 10 [json_name = "october"];</code>
     * @return The october.
     */
    @java.lang.Override
    public float getOctober() {
      return october_;
    }
    /**
     * <code>float october = 10 [json_name = "october"];</code>
     * @param value The october to set.
     * @return This builder for chaining.
     */
    public Builder setOctober(float value) {

      october_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>float october = 10 [json_name = "october"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOctober() {
      bitField0_ = (bitField0_ & ~0x00000200);
      october_ = 0F;
      onChanged();
      return this;
    }

    private float november_ ;
    /**
     * <code>float november = 11 [json_name = "november"];</code>
     * @return The november.
     */
    @java.lang.Override
    public float getNovember() {
      return november_;
    }
    /**
     * <code>float november = 11 [json_name = "november"];</code>
     * @param value The november to set.
     * @return This builder for chaining.
     */
    public Builder setNovember(float value) {

      november_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <code>float november = 11 [json_name = "november"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNovember() {
      bitField0_ = (bitField0_ & ~0x00000400);
      november_ = 0F;
      onChanged();
      return this;
    }

    private float december_ ;
    /**
     * <code>float december = 12 [json_name = "december"];</code>
     * @return The december.
     */
    @java.lang.Override
    public float getDecember() {
      return december_;
    }
    /**
     * <code>float december = 12 [json_name = "december"];</code>
     * @param value The december to set.
     * @return This builder for chaining.
     */
    public Builder setDecember(float value) {

      december_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>float december = 12 [json_name = "december"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDecember() {
      bitField0_ = (bitField0_ & ~0x00000800);
      december_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.commons.ProfileMOY)
  }

  // @@protoc_insertion_point(class_scope:api.commons.ProfileMOY)
  private static final com.tcn.cloud.api.api.commons.ProfileMOY DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.tcn.cloud.api.api.commons.ProfileMOY();
  }

  public static com.tcn.cloud.api.api.commons.ProfileMOY getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProfileMOY>
      PARSER = new com.google.protobuf.AbstractParser<ProfileMOY>() {
    @java.lang.Override
    public ProfileMOY parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ProfileMOY> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProfileMOY> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.tcn.cloud.api.api.commons.ProfileMOY getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

