// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: annotations/perms/tcn.proto

package com.tcn.cloud.api.annotations.perms;

public interface TcnOrBuilder extends
    // @@protoc_insertion_point(interface_extends:annotations.perms.Tcn)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Work-in-progress tag. Used to delineate permissions that are not
   * yet ready to go live. Previously known as "A la carte" permissions
   * in the legacy customer support licensing tool.
   * </pre>
   *
   * <code>optional bool wip = 1 [json_name = "wip"];</code>
   * @return Whether the wip field is set.
   */
  boolean hasWip();
  /**
   * <pre>
   * Work-in-progress tag. Used to delineate permissions that are not
   * yet ready to go live. Previously known as "A la carte" permissions
   * in the legacy customer support licensing tool.
   * </pre>
   *
   * <code>optional bool wip = 1 [json_name = "wip"];</code>
   * @return The wip.
   */
  boolean getWip();

  /**
   * <pre>
   * Application which the permission will be grouped under.
   * </pre>
   *
   * <code>optional .annotations.perms.Application app = 2 [json_name = "app"];</code>
   * @return Whether the app field is set.
   */
  boolean hasApp();
  /**
   * <pre>
   * Application which the permission will be grouped under.
   * </pre>
   *
   * <code>optional .annotations.perms.Application app = 2 [json_name = "app"];</code>
   * @return The app.
   */
  com.tcn.cloud.api.annotations.perms.Application getApp();

  /**
   * <pre>
   * The card/sub-app section which it's assigned to.
   * If no card is provided, it will go under the application's default
   * card (under the same name as the app).
   * </pre>
   *
   * <code>optional .annotations.perms.Card card = 3 [json_name = "card"];</code>
   * @return Whether the card field is set.
   */
  boolean hasCard();
  /**
   * <pre>
   * The card/sub-app section which it's assigned to.
   * If no card is provided, it will go under the application's default
   * card (under the same name as the app).
   * </pre>
   *
   * <code>optional .annotations.perms.Card card = 3 [json_name = "card"];</code>
   * @return The card.
   */
  com.tcn.cloud.api.annotations.perms.Card getCard();

  /**
   * <pre>
   * The list of features or effects the permission grants.
   * </pre>
   *
   * <code>repeated string features = 4 [json_name = "features"];</code>
   * @return A list containing the features.
   */
  java.util.List<java.lang.String>
      getFeaturesList();
  /**
   * <pre>
   * The list of features or effects the permission grants.
   * </pre>
   *
   * <code>repeated string features = 4 [json_name = "features"];</code>
   * @return The count of features.
   */
  int getFeaturesCount();
  /**
   * <pre>
   * The list of features or effects the permission grants.
   * </pre>
   *
   * <code>repeated string features = 4 [json_name = "features"];</code>
   * @param index The index of the element to return.
   * @return The features at the given index.
   */
  java.lang.String getFeatures(int index);
  /**
   * <pre>
   * The list of features or effects the permission grants.
   * </pre>
   *
   * <code>repeated string features = 4 [json_name = "features"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the features at the given index.
   */
  com.google.protobuf.ByteString
      getFeaturesBytes(int index);

  /**
   * <pre>
   * The list of default permission groups the permission belongs to.
   * </pre>
   *
   * <code>repeated .annotations.perms.DefaultPermissionGroup default_permission_groups = 5 [json_name = "defaultPermissionGroups"];</code>
   * @return A list containing the defaultPermissionGroups.
   */
  java.util.List<com.tcn.cloud.api.annotations.perms.DefaultPermissionGroup> getDefaultPermissionGroupsList();
  /**
   * <pre>
   * The list of default permission groups the permission belongs to.
   * </pre>
   *
   * <code>repeated .annotations.perms.DefaultPermissionGroup default_permission_groups = 5 [json_name = "defaultPermissionGroups"];</code>
   * @return The count of defaultPermissionGroups.
   */
  int getDefaultPermissionGroupsCount();
  /**
   * <pre>
   * The list of default permission groups the permission belongs to.
   * </pre>
   *
   * <code>repeated .annotations.perms.DefaultPermissionGroup default_permission_groups = 5 [json_name = "defaultPermissionGroups"];</code>
   * @param index The index of the element to return.
   * @return The defaultPermissionGroups at the given index.
   */
  com.tcn.cloud.api.annotations.perms.DefaultPermissionGroup getDefaultPermissionGroups(int index);

  /**
   * <pre>
   * Whether the permission has been blacklisted or removed.
   * </pre>
   *
   * <code>optional bool blacklisted = 6 [json_name = "blacklisted"];</code>
   * @return Whether the blacklisted field is set.
   */
  boolean hasBlacklisted();
  /**
   * <pre>
   * Whether the permission has been blacklisted or removed.
   * </pre>
   *
   * <code>optional bool blacklisted = 6 [json_name = "blacklisted"];</code>
   * @return The blacklisted.
   */
  boolean getBlacklisted();
}
