// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: annotations/authz.proto

package com.tcn.cloud.api.annotations;

public interface PermissionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:annotations.Permissions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A list of permission sets - atleast one set must exist in the list
   * to allow access.
   * </pre>
   *
   * <code>repeated .annotations.PermissionSet sets = 1 [json_name = "sets"];</code>
   */
  java.util.List<com.tcn.cloud.api.annotations.PermissionSet> 
      getSetsList();
  /**
   * <pre>
   * A list of permission sets - atleast one set must exist in the list
   * to allow access.
   * </pre>
   *
   * <code>repeated .annotations.PermissionSet sets = 1 [json_name = "sets"];</code>
   */
  com.tcn.cloud.api.annotations.PermissionSet getSets(int index);
  /**
   * <pre>
   * A list of permission sets - atleast one set must exist in the list
   * to allow access.
   * </pre>
   *
   * <code>repeated .annotations.PermissionSet sets = 1 [json_name = "sets"];</code>
   */
  int getSetsCount();
  /**
   * <pre>
   * A list of permission sets - atleast one set must exist in the list
   * to allow access.
   * </pre>
   *
   * <code>repeated .annotations.PermissionSet sets = 1 [json_name = "sets"];</code>
   */
  java.util.List<? extends com.tcn.cloud.api.annotations.PermissionSetOrBuilder> 
      getSetsOrBuilderList();
  /**
   * <pre>
   * A list of permission sets - atleast one set must exist in the list
   * to allow access.
   * </pre>
   *
   * <code>repeated .annotations.PermissionSet sets = 1 [json_name = "sets"];</code>
   */
  com.tcn.cloud.api.annotations.PermissionSetOrBuilder getSetsOrBuilder(
      int index);

  /**
   * <pre>
   * WIP inject PERMISSION_DEV into the required list
   * don't use it, it will be removed soon
   * </pre>
   *
   * <code>optional bool wip = 2 [default = false, json_name = "wip", deprecated = true];</code>
   * @deprecated annotations.Permissions.wip is deprecated.
   *     See annotations/authz.proto;l=19
   * @return Whether the wip field is set.
   */
  @java.lang.Deprecated boolean hasWip();
  /**
   * <pre>
   * WIP inject PERMISSION_DEV into the required list
   * don't use it, it will be removed soon
   * </pre>
   *
   * <code>optional bool wip = 2 [default = false, json_name = "wip", deprecated = true];</code>
   * @deprecated annotations.Permissions.wip is deprecated.
   *     See annotations/authz.proto;l=19
   * @return The wip.
   */
  @java.lang.Deprecated boolean getWip();

  /**
   * <pre>
   * Indicate that the method will use no permissions - it will be public.
   * Be careful with this.
   * </pre>
   *
   * <code>optional bool no_permissions = 3 [default = false, json_name = "noPermissions"];</code>
   * @return Whether the noPermissions field is set.
   */
  boolean hasNoPermissions();
  /**
   * <pre>
   * Indicate that the method will use no permissions - it will be public.
   * Be careful with this.
   * </pre>
   *
   * <code>optional bool no_permissions = 3 [default = false, json_name = "noPermissions"];</code>
   * @return The noPermissions.
   */
  boolean getNoPermissions();
}
