// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wfo/vanalytics/v2/flag_filter.proto

package com.tcn.cloud.api.wfo.vanalytics.v2;

public interface ListFlagFiltersRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:wfo.vanalytics.v2.ListFlagFiltersRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional. The number of flag filters to include in a single response. When not
   * provided this defaults to 100.
   * </pre>
   *
   * <code>uint32 page_size = 2 [json_name = "pageSize"];</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * Optional. The next_page_token returned from a previous List request, if any.
   * When provided all other request fields are ignored.
   * </pre>
   *
   * <code>string page_token = 3 [json_name = "pageToken"];</code>
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * Optional. The next_page_token returned from a previous List request, if any.
   * When provided all other request fields are ignored.
   * </pre>
   *
   * <code>string page_token = 3 [json_name = "pageToken"];</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();

  /**
   * <pre>
   * Optional. Field mask for response flag. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask flag_mask = 4 [json_name = "flagMask"];</code>
   * @return Whether the flagMask field is set.
   */
  boolean hasFlagMask();
  /**
   * <pre>
   * Optional. Field mask for response flag. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask flag_mask = 4 [json_name = "flagMask"];</code>
   * @return The flagMask.
   */
  com.google.protobuf.FieldMask getFlagMask();
  /**
   * <pre>
   * Optional. Field mask for response flag. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask flag_mask = 4 [json_name = "flagMask"];</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getFlagMaskOrBuilder();

  /**
   * <pre>
   * Optional. Field mask for response filter. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask filter_mask = 5 [json_name = "filterMask"];</code>
   * @return Whether the filterMask field is set.
   */
  boolean hasFilterMask();
  /**
   * <pre>
   * Optional. Field mask for response filter. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask filter_mask = 5 [json_name = "filterMask"];</code>
   * @return The filterMask.
   */
  com.google.protobuf.FieldMask getFilterMask();
  /**
   * <pre>
   * Optional. Field mask for response filter. A missing or empty field mask is
   * interpreted as a field mask containing all possible fields.
   * </pre>
   *
   * <code>.google.protobuf.FieldMask filter_mask = 5 [json_name = "filterMask"];</code>
   */
  com.google.protobuf.FieldMaskOrBuilder getFilterMaskOrBuilder();

  /**
   * <pre>
   * Optional. List of flag sids. Requires response filters to be associated
   * with at least one of the provided flag sids.
   * </pre>
   *
   * <code>repeated int64 flag_sids = 6 [json_name = "flagSids"];</code>
   * @return A list containing the flagSids.
   */
  java.util.List<java.lang.Long> getFlagSidsList();
  /**
   * <pre>
   * Optional. List of flag sids. Requires response filters to be associated
   * with at least one of the provided flag sids.
   * </pre>
   *
   * <code>repeated int64 flag_sids = 6 [json_name = "flagSids"];</code>
   * @return The count of flagSids.
   */
  int getFlagSidsCount();
  /**
   * <pre>
   * Optional. List of flag sids. Requires response filters to be associated
   * with at least one of the provided flag sids.
   * </pre>
   *
   * <code>repeated int64 flag_sids = 6 [json_name = "flagSids"];</code>
   * @param index The index of the element to return.
   * @return The flagSids at the given index.
   */
  long getFlagSids(int index);
}
